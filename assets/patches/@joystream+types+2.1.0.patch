diff --git a/node_modules/@joystream/types/.gitignore b/node_modules/@joystream/types/.gitignore
new file mode 100644
index 0000000..206991f
--- /dev/null
+++ b/node_modules/@joystream/types/.gitignore
@@ -0,0 +1,4 @@
+# Don't track build artifacts
+**/*.js
+**/*.d.ts
+!.eslintrc.js
\ No newline at end of file
diff --git a/node_modules/@joystream/types/.npmignore b/node_modules/@joystream/types/.npmignore
new file mode 100644
index 0000000..acdb6a9
--- /dev/null
+++ b/node_modules/@joystream/types/.npmignore
@@ -0,0 +1,6 @@
+# keep src/ files, packages is compiled when installed
+# src/
+
+# old build artifacts
+lib/
+build/
diff --git a/node_modules/@joystream/types/CHANGELOG.md b/node_modules/@joystream/types/CHANGELOG.md
index 23c9cea..8181a69 100644
--- a/node_modules/@joystream/types/CHANGELOG.md
+++ b/node_modules/@joystream/types/CHANGELOG.md
@@ -1,3 +1,15 @@
+### 2.1.0
+
+- Bumped version for dependants version release to get the proper types version. [ref](https://github.com/Joystream/joystream/commit/f899922645013cd5aad6d8036aeae2180f123cf7)
+
+### 2.0.0 (Ephesus release)
+
+- Generated Ephesus augment api from metadata
+
+### 1.0.0
+
+- No changes, version bumped for consistency with mainnet release versioning.
+
 ### 0.20.0
 
 - `@polkadot/api` upgraded from `5.9.1` to `8.9.1` (along with related dependencies)
diff --git a/node_modules/@joystream/types/augment/augment-types.ts b/node_modules/@joystream/types/augment/augment-types.ts
deleted file mode 100644
index a68d386..0000000
--- a/node_modules/@joystream/types/augment/augment-types.ts
+++ /dev/null
@@ -1,2394 +0,0 @@
-// Auto-generated via `yarn polkadot-types-from-defs`, do not edit
-/* eslint-disable */
-
-import type {
-  BitVec,
-  Bool,
-  Bytes,
-  Data,
-  I128,
-  I16,
-  I256,
-  I32,
-  I64,
-  I8,
-  Json,
-  Null,
-  Raw,
-  StorageKey,
-  Text,
-  Type,
-  U128,
-  U16,
-  U256,
-  U32,
-  U64,
-  U8,
-  USize,
-  bool,
-  i128,
-  i16,
-  i256,
-  i32,
-  i64,
-  i8,
-  u128,
-  u16,
-  u256,
-  u32,
-  u64,
-  u8,
-  usize,
-} from '@polkadot/types'
-import type {
-  ActorId,
-  Application,
-  ApplicationId,
-  ApplicationIdSet,
-  ApplicationIdToWorkerIdMap,
-  ApplicationInfo,
-  ApplyOnOpeningParameters,
-  Approved,
-  AssuranceContractType,
-  AssuranceContractType_Closed,
-  Bag,
-  BagId,
-  BagIdType,
-  BalanceKind,
-  BlockAndTime,
-  BlockRate,
-  BountyActor,
-  BountyCreationParameters,
-  BountyId,
-  BountyMilestone,
-  BountyMilestone_BountyMaxFundingReached,
-  BountyMilestone_Created,
-  BountyMilestone_JudgmentSubmitted,
-  BountyMilestone_WorkSubmitted,
-  BuyMembershipParameters,
-  Candidate,
-  CastVoteOf,
-  Category,
-  CategoryId,
-  Channel,
-  ChannelActionPermission,
-  ChannelAgentPermissions,
-  ChannelCreationParameters,
-  ChannelId,
-  ChannelOwner,
-  ChannelPayoutsPayloadParameters,
-  ChannelPrivilegeLevel,
-  ChannelTransferStatus,
-  ChannelTransferStatus_PendingTransfer,
-  ChannelUpdateParameters,
-  Cid,
-  ConstitutionInfo,
-  ContentActor,
-  ContentIdSet,
-  ContentModerationAction,
-  ContentModerationActionsSet,
-  CouncilMemberOf,
-  CouncilStage,
-  CouncilStageAnnouncing,
-  CouncilStageElection,
-  CouncilStageUpdate,
-  CreateOpeningParameters,
-  CuratorGroup,
-  CuratorGroupId,
-  CuratorId,
-  DataObject,
-  DataObjectCreationParameters,
-  DataObjectId,
-  DataObjectIdMap,
-  DataObjectIdSet,
-  DiscussionPost,
-  DiscussionThread,
-  DistributionBucket,
-  DistributionBucketFamily,
-  DistributionBucketFamilyId,
-  DistributionBucketId,
-  DistributionBucketIndex,
-  DistributionBucketIndexSet,
-  DistributionBucketsPerBagValueConstraint,
-  DynBagCreationParameters,
-  Dynamic,
-  DynamicBagCreationPolicy,
-  DynamicBagCreationPolicyDistributorFamiliesMap,
-  DynamicBagId,
-  DynamicBagType,
-  EnglishAuction,
-  EnglishAuctionBid,
-  EnglishAuctionParams,
-  Entry,
-  EntryId,
-  ExecutionFailed,
-  ExecutionStatus,
-  ExtendedPostId,
-  FillOpeningParameters,
-  ForumUserId,
-  FundingRequestParameters,
-  FundingType,
-  FundingType_Limited,
-  FundingType_Perpetual,
-  GeneralProposalParameters,
-  InitTransactionalStatus,
-  InputValidationLengthConstraintU64,
-  InviteMembershipParameters,
-  IsCensored,
-  JoyBalance,
-  LimitPerPeriod,
-  MaxNumber,
-  MemberId,
-  Membership,
-  MerkleProof,
-  MerkleSide,
-  ModerationPermissionsByLevel,
-  ModeratorId,
-  NftCounter,
-  NftIssuanceParameters,
-  NftLimitId,
-  NftLimitPeriod,
-  NftMetadata,
-  NftOwner,
-  OfferingState,
-  OpenAuction,
-  OpenAuctionBid,
-  OpenAuctionId,
-  OpenAuctionParams,
-  Opening,
-  OpeningId,
-  OpeningType,
-  OptionResult,
-  OracleJudgment,
-  OracleWorkEntryJudgment,
-  OracleWorkEntryJudgment_Winner,
-  OwnedNft,
-  ParticipantId,
-  PausableChannelFeature,
-  Payment,
-  PaymentWithVesting,
-  Penalty,
-  Poll,
-  PollAlternative,
-  PollInput,
-  Post,
-  PostId,
-  PostReactionId,
-  PrivilegedActor,
-  ProofElement,
-  ProposalDecision,
-  ProposalDetails,
-  ProposalDetailsOf,
-  ProposalId,
-  ProposalOf,
-  ProposalParameters,
-  ProposalStatus,
-  PullPayment,
-  ReferendumStage,
-  ReferendumStageRevealing,
-  ReferendumStageVoting,
-  Reply,
-  ReplyId,
-  ReplyToDelete,
-  RewardPaymentType,
-  Royalty,
-  SetLeadParams,
-  Side,
-  SingleDataObjectUploadParams,
-  StakeParameters,
-  StakePolicy,
-  StakingAccountMemberBinding,
-  Static,
-  StaticBagId,
-  StorageAssets,
-  StorageBucket,
-  StorageBucketId,
-  StorageBucketIdSet,
-  StorageBucketOperatorStatus,
-  StorageBucketsPerBagValueConstraint,
-  StorageProviderId,
-  TerminateRoleParameters,
-  Thread,
-  ThreadId,
-  ThreadMode,
-  ThreadOf,
-  Title,
-  TokenAllocation,
-  TokenId,
-  TokenIssuanceParams,
-  TokenSale,
-  TokenSaleId,
-  TokenSaleParams,
-  TransactionalStatus,
-  TransferParameters,
-  TransferPolicy,
-  TransferPolicyParams,
-  UpdateChannelPayoutsParameters,
-  UpdatedBody,
-  UpdatedTitle,
-  UploadContent,
-  UploadParameters,
-  Url,
-  ValidatedPayment,
-  VestingScheduleParams,
-  VestingSource,
-  Video,
-  VideoCreationParameters,
-  VideoId,
-  VideoUpdateParameters,
-  VoteKind,
-  VotePower,
-  VotingResults,
-  Voucher,
-  WhitelistParams,
-  Worker,
-  WorkerId,
-  WorkerInfo,
-  WorkingGroup,
-  YearlyRate,
-} from './all'
-import type {
-  AssetApproval,
-  AssetApprovalKey,
-  AssetBalance,
-  AssetDestroyWitness,
-  AssetDetails,
-  AssetMetadata,
-  TAssetBalance,
-  TAssetDepositBalance,
-} from '@polkadot/types/interfaces/assets'
-import type { BlockAttestations, IncludedBlocks, MoreAttestations } from '@polkadot/types/interfaces/attestations'
-import type { RawAuraPreDigest } from '@polkadot/types/interfaces/aura'
-import type { ExtrinsicOrHash, ExtrinsicStatus } from '@polkadot/types/interfaces/author'
-import type { UncleEntryItem } from '@polkadot/types/interfaces/authorship'
-import type {
-  AllowedSlots,
-  BabeAuthorityWeight,
-  BabeBlockWeight,
-  BabeEpochConfiguration,
-  BabeEquivocationProof,
-  BabeWeight,
-  EpochAuthorship,
-  MaybeRandomness,
-  MaybeVrf,
-  NextConfigDescriptor,
-  NextConfigDescriptorV1,
-  Randomness,
-  RawBabePreDigest,
-  RawBabePreDigestCompat,
-  RawBabePreDigestPrimary,
-  RawBabePreDigestPrimaryTo159,
-  RawBabePreDigestSecondaryPlain,
-  RawBabePreDigestSecondaryTo159,
-  RawBabePreDigestSecondaryVRF,
-  RawBabePreDigestTo159,
-  SlotNumber,
-  VrfData,
-  VrfOutput,
-  VrfProof,
-} from '@polkadot/types/interfaces/babe'
-import type {
-  AccountData,
-  BalanceLock,
-  BalanceLockTo212,
-  BalanceStatus,
-  Reasons,
-  ReserveData,
-  ReserveIdentifier,
-  VestingSchedule,
-  WithdrawReasons,
-} from '@polkadot/types/interfaces/balances'
-import type {
-  BeefyCommitment,
-  BeefyId,
-  BeefyNextAuthoritySet,
-  BeefyPayload,
-  BeefySignedCommitment,
-  MmrRootHash,
-  ValidatorSetId,
-} from '@polkadot/types/interfaces/beefy'
-import type {
-  BridgedBlockHash,
-  BridgedBlockNumber,
-  BridgedHeader,
-  CallOrigin,
-  ChainId,
-  DeliveredMessages,
-  DispatchFeePayment,
-  InboundLaneData,
-  InboundRelayer,
-  InitializationData,
-  LaneId,
-  MessageData,
-  MessageKey,
-  MessageNonce,
-  MessagesDeliveryProofOf,
-  MessagesProofOf,
-  OperatingMode,
-  OutboundLaneData,
-  OutboundMessageFee,
-  OutboundPayload,
-  Parameter,
-  RelayerId,
-  UnrewardedRelayer,
-  UnrewardedRelayersState,
-} from '@polkadot/types/interfaces/bridges'
-import type { BlockHash } from '@polkadot/types/interfaces/chain'
-import type { PrefixedStorageKey } from '@polkadot/types/interfaces/childstate'
-import type { EthereumAddress, StatementKind } from '@polkadot/types/interfaces/claims'
-import type {
-  CollectiveOrigin,
-  MemberCount,
-  ProposalIndex,
-  Votes,
-  VotesTo230,
-} from '@polkadot/types/interfaces/collective'
-import type { AuthorityId, RawVRFOutput } from '@polkadot/types/interfaces/consensus'
-import type {
-  AliveContractInfo,
-  CodeHash,
-  ContractCallRequest,
-  ContractExecResult,
-  ContractExecResultErr,
-  ContractExecResultErrModule,
-  ContractExecResultOk,
-  ContractExecResultResult,
-  ContractExecResultSuccessTo255,
-  ContractExecResultSuccessTo260,
-  ContractExecResultTo255,
-  ContractExecResultTo260,
-  ContractExecResultTo267,
-  ContractInfo,
-  ContractInstantiateResult,
-  ContractStorageKey,
-  DeletedContract,
-  ExecReturnValue,
-  Gas,
-  HostFnWeights,
-  HostFnWeightsTo264,
-  InstantiateRequest,
-  InstantiateReturnValue,
-  InstructionWeights,
-  Limits,
-  LimitsTo264,
-  PrefabWasmModule,
-  RentProjection,
-  Schedule,
-  ScheduleTo212,
-  ScheduleTo258,
-  ScheduleTo264,
-  SeedOf,
-  TombstoneContractInfo,
-  TrieId,
-} from '@polkadot/types/interfaces/contracts'
-import type {
-  ContractConstructorSpec,
-  ContractContractSpec,
-  ContractCryptoHasher,
-  ContractDiscriminant,
-  ContractDisplayName,
-  ContractEventParamSpec,
-  ContractEventSpec,
-  ContractLayoutArray,
-  ContractLayoutCell,
-  ContractLayoutEnum,
-  ContractLayoutHash,
-  ContractLayoutHashingStrategy,
-  ContractLayoutKey,
-  ContractLayoutStruct,
-  ContractLayoutStructField,
-  ContractMessageParamSpec,
-  ContractMessageSpec,
-  ContractProject,
-  ContractProjectContract,
-  ContractProjectSource,
-  ContractSelector,
-  ContractStorageLayout,
-  ContractTypeSpec,
-} from '@polkadot/types/interfaces/contractsAbi'
-import type { FundIndex, FundInfo, LastContribution, TrieIndex } from '@polkadot/types/interfaces/crowdloan'
-import type {
-  ConfigData,
-  MessageId,
-  OverweightIndex,
-  PageCounter,
-  PageIndexData,
-} from '@polkadot/types/interfaces/cumulus'
-import type {
-  AccountVote,
-  AccountVoteSplit,
-  AccountVoteStandard,
-  Conviction,
-  Delegations,
-  PreimageStatus,
-  PreimageStatusAvailable,
-  PriorLock,
-  PropIndex,
-  Proposal,
-  ProxyState,
-  ReferendumIndex,
-  ReferendumInfo,
-  ReferendumInfoFinished,
-  ReferendumInfoTo239,
-  ReferendumStatus,
-  Tally,
-  Voting,
-  VotingDelegating,
-  VotingDirect,
-  VotingDirectVote,
-} from '@polkadot/types/interfaces/democracy'
-import type {
-  ApprovalFlag,
-  DefunctVoter,
-  Renouncing,
-  SetIndex,
-  Vote,
-  VoteIndex,
-  VoteThreshold,
-  VoterInfo,
-} from '@polkadot/types/interfaces/elections'
-import type { CreatedBlock, ImportedAux } from '@polkadot/types/interfaces/engine'
-import type {
-  EthAccount,
-  EthBlock,
-  EthBloom,
-  EthCallRequest,
-  EthFilter,
-  EthFilterAddress,
-  EthFilterChanges,
-  EthFilterTopic,
-  EthFilterTopicEntry,
-  EthFilterTopicInner,
-  EthHeader,
-  EthLog,
-  EthReceipt,
-  EthRichBlock,
-  EthRichHeader,
-  EthStorageProof,
-  EthSubKind,
-  EthSubParams,
-  EthSubResult,
-  EthSyncInfo,
-  EthSyncStatus,
-  EthTransaction,
-  EthTransactionAction,
-  EthTransactionCondition,
-  EthTransactionRequest,
-  EthTransactionSignature,
-  EthTransactionStatus,
-  EthWork,
-  EthereumAccountId,
-  EthereumLookupSource,
-  EthereumSignature,
-} from '@polkadot/types/interfaces/eth'
-import type {
-  EvmAccount,
-  EvmLog,
-  EvmVicinity,
-  ExitError,
-  ExitFatal,
-  ExitReason,
-  ExitRevert,
-  ExitSucceed,
-} from '@polkadot/types/interfaces/evm'
-import type {
-  AnySignature,
-  EcdsaSignature,
-  Ed25519Signature,
-  Era,
-  Extrinsic,
-  ExtrinsicEra,
-  ExtrinsicPayload,
-  ExtrinsicPayloadUnknown,
-  ExtrinsicPayloadV4,
-  ExtrinsicSignature,
-  ExtrinsicSignatureV4,
-  ExtrinsicUnknown,
-  ExtrinsicV4,
-  ImmortalEra,
-  MortalEra,
-  MultiSignature,
-  Signature,
-  SignerPayload,
-  Sr25519Signature,
-} from '@polkadot/types/interfaces/extrinsics'
-import type {
-  AssetOptions,
-  Owner,
-  PermissionLatest,
-  PermissionVersions,
-  PermissionsV1,
-} from '@polkadot/types/interfaces/genericAsset'
-import type { ActiveGilt, ActiveGiltsTotal, ActiveIndex, GiltBid } from '@polkadot/types/interfaces/gilt'
-import type {
-  AuthorityIndex,
-  AuthorityList,
-  AuthoritySet,
-  AuthoritySetChange,
-  AuthoritySetChanges,
-  AuthorityWeight,
-  DelayKind,
-  DelayKindBest,
-  EncodedFinalityProofs,
-  ForkTreePendingChange,
-  ForkTreePendingChangeNode,
-  GrandpaCommit,
-  GrandpaEquivocation,
-  GrandpaEquivocationProof,
-  GrandpaEquivocationValue,
-  GrandpaJustification,
-  GrandpaPrecommit,
-  GrandpaPrevote,
-  GrandpaSignedPrecommit,
-  JustificationNotification,
-  KeyOwnerProof,
-  NextAuthority,
-  PendingChange,
-  PendingPause,
-  PendingResume,
-  Precommits,
-  Prevotes,
-  ReportedRoundStates,
-  RoundState,
-  SetId,
-  StoredPendingChange,
-  StoredState,
-} from '@polkadot/types/interfaces/grandpa'
-import type {
-  IdentityFields,
-  IdentityInfo,
-  IdentityInfoAdditional,
-  IdentityJudgement,
-  RegistrarIndex,
-  RegistrarInfo,
-  Registration,
-  RegistrationJudgement,
-} from '@polkadot/types/interfaces/identity'
-import type {
-  AuthIndex,
-  AuthoritySignature,
-  Heartbeat,
-  HeartbeatTo244,
-  OpaqueMultiaddr,
-  OpaqueNetworkState,
-  OpaquePeerId,
-} from '@polkadot/types/interfaces/imOnline'
-import type { CallIndex, LotteryConfig } from '@polkadot/types/interfaces/lottery'
-import type {
-  ErrorMetadataLatest,
-  ErrorMetadataV10,
-  ErrorMetadataV11,
-  ErrorMetadataV12,
-  ErrorMetadataV13,
-  ErrorMetadataV14,
-  ErrorMetadataV9,
-  EventMetadataLatest,
-  EventMetadataV10,
-  EventMetadataV11,
-  EventMetadataV12,
-  EventMetadataV13,
-  EventMetadataV14,
-  EventMetadataV9,
-  ExtrinsicMetadataLatest,
-  ExtrinsicMetadataV11,
-  ExtrinsicMetadataV12,
-  ExtrinsicMetadataV13,
-  ExtrinsicMetadataV14,
-  FunctionArgumentMetadataLatest,
-  FunctionArgumentMetadataV10,
-  FunctionArgumentMetadataV11,
-  FunctionArgumentMetadataV12,
-  FunctionArgumentMetadataV13,
-  FunctionArgumentMetadataV14,
-  FunctionArgumentMetadataV9,
-  FunctionMetadataLatest,
-  FunctionMetadataV10,
-  FunctionMetadataV11,
-  FunctionMetadataV12,
-  FunctionMetadataV13,
-  FunctionMetadataV14,
-  FunctionMetadataV9,
-  MetadataAll,
-  MetadataLatest,
-  MetadataV10,
-  MetadataV11,
-  MetadataV12,
-  MetadataV13,
-  MetadataV14,
-  MetadataV9,
-  ModuleConstantMetadataLatest,
-  ModuleConstantMetadataV10,
-  ModuleConstantMetadataV11,
-  ModuleConstantMetadataV12,
-  ModuleConstantMetadataV13,
-  ModuleConstantMetadataV9,
-  ModuleMetadataLatest,
-  ModuleMetadataV10,
-  ModuleMetadataV11,
-  ModuleMetadataV12,
-  ModuleMetadataV13,
-  ModuleMetadataV9,
-  PalletCallMetadataLatest,
-  PalletCallMetadataV14,
-  PalletConstantMetadataLatest,
-  PalletConstantMetadataV14,
-  PalletErrorMetadataLatest,
-  PalletErrorMetadataV14,
-  PalletEventMetadataLatest,
-  PalletEventMetadataV14,
-  PalletMetadataLatest,
-  PalletMetadataV14,
-  PalletStorageMetadataLatest,
-  PalletStorageMetadataV14,
-  PortableRegistry,
-  PortableType,
-  SignedExtensionMetadataLatest,
-  SignedExtensionMetadataV14,
-  StorageEntryMetadataLatest,
-  StorageEntryMetadataV10,
-  StorageEntryMetadataV11,
-  StorageEntryMetadataV12,
-  StorageEntryMetadataV13,
-  StorageEntryMetadataV14,
-  StorageEntryMetadataV9,
-  StorageEntryModifierLatest,
-  StorageEntryModifierV10,
-  StorageEntryModifierV11,
-  StorageEntryModifierV12,
-  StorageEntryModifierV13,
-  StorageEntryModifierV14,
-  StorageEntryModifierV9,
-  StorageEntryTypeLatest,
-  StorageEntryTypeV10,
-  StorageEntryTypeV11,
-  StorageEntryTypeV12,
-  StorageEntryTypeV13,
-  StorageEntryTypeV14,
-  StorageEntryTypeV9,
-  StorageHasher,
-  StorageHasherV10,
-  StorageHasherV11,
-  StorageHasherV12,
-  StorageHasherV13,
-  StorageHasherV14,
-  StorageHasherV9,
-  StorageMetadataLatest,
-  StorageMetadataV10,
-  StorageMetadataV11,
-  StorageMetadataV12,
-  StorageMetadataV13,
-  StorageMetadataV9,
-} from '@polkadot/types/interfaces/metadata'
-import type { MmrLeafProof } from '@polkadot/types/interfaces/mmr'
-import type { StorageKind } from '@polkadot/types/interfaces/offchain'
-import type {
-  DeferredOffenceOf,
-  Kind,
-  OffenceDetails,
-  Offender,
-  OpaqueTimeSlot,
-  ReportIdOf,
-  Reporter,
-} from '@polkadot/types/interfaces/offences'
-import type {
-  AbridgedCandidateReceipt,
-  AbridgedHostConfiguration,
-  AbridgedHrmpChannel,
-  AssignmentId,
-  AssignmentKind,
-  AttestedCandidate,
-  AuctionIndex,
-  AuthorityDiscoveryId,
-  AvailabilityBitfield,
-  AvailabilityBitfieldRecord,
-  BackedCandidate,
-  Bidder,
-  BufferedSessionChange,
-  CandidateCommitments,
-  CandidateDescriptor,
-  CandidateHash,
-  CandidateInfo,
-  CandidatePendingAvailability,
-  CandidateReceipt,
-  CollatorId,
-  CollatorSignature,
-  CommittedCandidateReceipt,
-  CoreAssignment,
-  CoreIndex,
-  CoreOccupied,
-  DisputeLocation,
-  DisputeResult,
-  DisputeState,
-  DisputeStatement,
-  DisputeStatementSet,
-  DoubleVoteReport,
-  DownwardMessage,
-  ExplicitDisputeStatement,
-  GlobalValidationData,
-  GlobalValidationSchedule,
-  GroupIndex,
-  HeadData,
-  HostConfiguration,
-  HrmpChannel,
-  HrmpChannelId,
-  HrmpOpenChannelRequest,
-  InboundDownwardMessage,
-  InboundHrmpMessage,
-  InboundHrmpMessages,
-  IncomingParachain,
-  IncomingParachainDeploy,
-  IncomingParachainFixed,
-  InvalidDisputeStatementKind,
-  LeasePeriod,
-  LeasePeriodOf,
-  LocalValidationData,
-  MessageIngestionType,
-  MessageQueueChain,
-  MessagingStateSnapshot,
-  MessagingStateSnapshotEgressEntry,
-  MultiDisputeStatementSet,
-  NewBidder,
-  OutboundHrmpMessage,
-  ParaGenesisArgs,
-  ParaId,
-  ParaInfo,
-  ParaLifecycle,
-  ParaPastCodeMeta,
-  ParaScheduling,
-  ParaValidatorIndex,
-  ParachainDispatchOrigin,
-  ParachainInherentData,
-  ParachainProposal,
-  ParachainsInherentData,
-  ParathreadClaim,
-  ParathreadClaimQueue,
-  ParathreadEntry,
-  PersistedValidationData,
-  QueuedParathread,
-  RegisteredParachainInfo,
-  RelayBlockNumber,
-  RelayChainBlockNumber,
-  RelayChainHash,
-  RelayHash,
-  Remark,
-  ReplacementTimes,
-  Retriable,
-  Scheduling,
-  ServiceQuality,
-  SessionInfo,
-  SessionInfoValidatorGroup,
-  SignedAvailabilityBitfield,
-  SignedAvailabilityBitfields,
-  SigningContext,
-  SlotRange,
-  Statement,
-  SubId,
-  SystemInherentData,
-  TransientValidationData,
-  UpgradeGoAhead,
-  UpgradeRestriction,
-  UpwardMessage,
-  ValidDisputeStatementKind,
-  ValidationCode,
-  ValidationCodeHash,
-  ValidationData,
-  ValidationDataType,
-  ValidationFunctionParams,
-  ValidatorSignature,
-  ValidityAttestation,
-  VecInboundHrmpMessage,
-  WinnersData,
-  WinnersDataTuple,
-  WinningData,
-  WinningDataEntry,
-} from '@polkadot/types/interfaces/parachains'
-import type { FeeDetails, InclusionFee, RuntimeDispatchInfo } from '@polkadot/types/interfaces/payment'
-import type { Approvals } from '@polkadot/types/interfaces/poll'
-import type { ProxyAnnouncement, ProxyDefinition, ProxyType } from '@polkadot/types/interfaces/proxy'
-import type { AccountStatus, AccountValidity } from '@polkadot/types/interfaces/purchase'
-import type { ActiveRecovery, RecoveryConfig } from '@polkadot/types/interfaces/recovery'
-import type { RpcMethods } from '@polkadot/types/interfaces/rpc'
-import type {
-  AccountId,
-  AccountId20,
-  AccountId32,
-  AccountIdOf,
-  AccountIndex,
-  Address,
-  AssetId,
-  Balance,
-  BalanceOf,
-  Block,
-  BlockNumber,
-  BlockNumberFor,
-  BlockNumberOf,
-  Call,
-  CallHash,
-  CallHashOf,
-  ChangesTrieConfiguration,
-  ChangesTrieSignal,
-  CodecHash,
-  Consensus,
-  ConsensusEngineId,
-  Digest,
-  DigestItem,
-  EncodedJustification,
-  ExtrinsicsWeight,
-  Fixed128,
-  Fixed64,
-  FixedI128,
-  FixedI64,
-  FixedU128,
-  FixedU64,
-  H1024,
-  H128,
-  H160,
-  H2048,
-  H256,
-  H32,
-  H512,
-  H64,
-  Hash,
-  Header,
-  HeaderPartial,
-  I32F32,
-  Index,
-  IndicesLookupSource,
-  Justification,
-  Justifications,
-  KeyTypeId,
-  KeyValue,
-  LockIdentifier,
-  LookupSource,
-  LookupTarget,
-  ModuleId,
-  Moment,
-  MultiAddress,
-  MultiSigner,
-  OpaqueCall,
-  Origin,
-  OriginCaller,
-  PalletId,
-  PalletVersion,
-  PalletsOrigin,
-  Pays,
-  PerU16,
-  Perbill,
-  Percent,
-  Permill,
-  Perquintill,
-  Phantom,
-  PhantomData,
-  PreRuntime,
-  Releases,
-  RuntimeDbWeight,
-  Seal,
-  SealV0,
-  SignedBlock,
-  SignedBlockWithJustification,
-  SignedBlockWithJustifications,
-  Slot,
-  StorageData,
-  StorageProof,
-  TransactionInfo,
-  TransactionPriority,
-  TransactionStorageProof,
-  U32F32,
-  ValidatorId,
-  ValidatorIdOf,
-  Weight,
-  WeightMultiplier,
-} from '@polkadot/types/interfaces/runtime'
-import type {
-  Si0Field,
-  Si0LookupTypeId,
-  Si0Path,
-  Si0Type,
-  Si0TypeDef,
-  Si0TypeDefArray,
-  Si0TypeDefBitSequence,
-  Si0TypeDefCompact,
-  Si0TypeDefComposite,
-  Si0TypeDefPhantom,
-  Si0TypeDefPrimitive,
-  Si0TypeDefSequence,
-  Si0TypeDefTuple,
-  Si0TypeDefVariant,
-  Si0TypeParameter,
-  Si0Variant,
-  SiField,
-  SiLookupTypeId,
-  SiPath,
-  SiType,
-  SiTypeDef,
-  SiTypeDefArray,
-  SiTypeDefBitSequence,
-  SiTypeDefCompact,
-  SiTypeDefComposite,
-  SiTypeDefPrimitive,
-  SiTypeDefSequence,
-  SiTypeDefTuple,
-  SiTypeDefVariant,
-  SiTypeParameter,
-  SiVariant,
-} from '@polkadot/types/interfaces/scaleInfo'
-import type {
-  Period,
-  Priority,
-  SchedulePeriod,
-  SchedulePriority,
-  Scheduled,
-  ScheduledTo254,
-  TaskAddress,
-} from '@polkadot/types/interfaces/scheduler'
-import type {
-  BeefyKey,
-  FullIdentification,
-  IdentificationTuple,
-  Keys,
-  MembershipProof,
-  SessionIndex,
-  SessionKeys1,
-  SessionKeys10,
-  SessionKeys10B,
-  SessionKeys2,
-  SessionKeys3,
-  SessionKeys4,
-  SessionKeys5,
-  SessionKeys6,
-  SessionKeys6B,
-  SessionKeys7,
-  SessionKeys7B,
-  SessionKeys8,
-  SessionKeys8B,
-  SessionKeys9,
-  SessionKeys9B,
-  ValidatorCount,
-} from '@polkadot/types/interfaces/session'
-import type {
-  Bid,
-  BidKind,
-  SocietyJudgement,
-  SocietyVote,
-  StrikeCount,
-  VouchingStatus,
-} from '@polkadot/types/interfaces/society'
-import type {
-  ActiveEraInfo,
-  CompactAssignments,
-  CompactAssignmentsTo257,
-  CompactAssignmentsTo265,
-  CompactAssignmentsWith16,
-  CompactAssignmentsWith24,
-  CompactScore,
-  CompactScoreCompact,
-  ElectionCompute,
-  ElectionPhase,
-  ElectionResult,
-  ElectionScore,
-  ElectionSize,
-  ElectionStatus,
-  EraIndex,
-  EraPoints,
-  EraRewardPoints,
-  EraRewards,
-  Exposure,
-  ExtendedBalance,
-  Forcing,
-  IndividualExposure,
-  KeyType,
-  MomentOf,
-  Nominations,
-  NominatorIndex,
-  NominatorIndexCompact,
-  OffchainAccuracy,
-  OffchainAccuracyCompact,
-  PhragmenScore,
-  Points,
-  RawSolution,
-  RawSolutionTo265,
-  RawSolutionWith16,
-  RawSolutionWith24,
-  ReadySolution,
-  RewardDestination,
-  RewardPoint,
-  RoundSnapshot,
-  SeatHolder,
-  SignedSubmission,
-  SignedSubmissionOf,
-  SignedSubmissionTo276,
-  SlashJournalEntry,
-  SlashingSpans,
-  SlashingSpansTo204,
-  SolutionOrSnapshotSize,
-  SolutionSupport,
-  SolutionSupports,
-  SpanIndex,
-  SpanRecord,
-  StakingLedger,
-  StakingLedgerTo223,
-  StakingLedgerTo240,
-  SubmissionIndicesOf,
-  Supports,
-  UnappliedSlash,
-  UnappliedSlashOther,
-  UnlockChunk,
-  ValidatorIndex,
-  ValidatorIndexCompact,
-  ValidatorPrefs,
-  ValidatorPrefsTo145,
-  ValidatorPrefsTo196,
-  ValidatorPrefsWithBlocked,
-  ValidatorPrefsWithCommission,
-  VoteWeight,
-  Voter,
-} from '@polkadot/types/interfaces/staking'
-import type {
-  ApiId,
-  BlockTrace,
-  BlockTraceEvent,
-  BlockTraceEventData,
-  BlockTraceSpan,
-  KeyValueOption,
-  ReadProof,
-  RuntimeVersion,
-  RuntimeVersionApi,
-  RuntimeVersionPartial,
-  StorageChangeSet,
-  TraceBlockResponse,
-  TraceError,
-} from '@polkadot/types/interfaces/state'
-import type { WeightToFeeCoefficient } from '@polkadot/types/interfaces/support'
-import type {
-  AccountInfo,
-  AccountInfoWithDualRefCount,
-  AccountInfoWithProviders,
-  AccountInfoWithRefCount,
-  AccountInfoWithRefCountU8,
-  AccountInfoWithTripleRefCount,
-  ApplyExtrinsicResult,
-  ArithmeticError,
-  BlockLength,
-  BlockWeights,
-  ChainProperties,
-  ChainType,
-  ConsumedWeight,
-  DigestOf,
-  DispatchClass,
-  DispatchError,
-  DispatchErrorModule,
-  DispatchErrorTo198,
-  DispatchInfo,
-  DispatchInfoTo190,
-  DispatchInfoTo244,
-  DispatchOutcome,
-  DispatchResult,
-  DispatchResultOf,
-  DispatchResultTo198,
-  Event,
-  EventId,
-  EventIndex,
-  EventRecord,
-  Health,
-  InvalidTransaction,
-  Key,
-  LastRuntimeUpgradeInfo,
-  NetworkState,
-  NetworkStatePeerset,
-  NetworkStatePeersetInfo,
-  NodeRole,
-  NotConnectedPeer,
-  Peer,
-  PeerEndpoint,
-  PeerEndpointAddr,
-  PeerInfo,
-  PeerPing,
-  PerDispatchClassU32,
-  PerDispatchClassWeight,
-  PerDispatchClassWeightsPerClass,
-  Phase,
-  RawOrigin,
-  RefCount,
-  RefCountTo259,
-  SyncState,
-  SystemOrigin,
-  TokenError,
-  TransactionValidityError,
-  UnknownTransaction,
-  WeightPerClass,
-} from '@polkadot/types/interfaces/system'
-import type {
-  Bounty,
-  BountyIndex,
-  BountyStatus,
-  BountyStatusActive,
-  BountyStatusCuratorProposed,
-  BountyStatusPendingPayout,
-  OpenTip,
-  OpenTipFinderTo225,
-  OpenTipTip,
-  OpenTipTo225,
-  TreasuryProposal,
-} from '@polkadot/types/interfaces/treasury'
-import type { Multiplier } from '@polkadot/types/interfaces/txpayment'
-import type {
-  ClassDetails,
-  ClassId,
-  ClassMetadata,
-  DepositBalance,
-  DepositBalanceOf,
-  DestroyWitness,
-  InstanceDetails,
-  InstanceId,
-  InstanceMetadata,
-} from '@polkadot/types/interfaces/uniques'
-import type { Multisig, Timepoint } from '@polkadot/types/interfaces/utility'
-import type { VestingInfo } from '@polkadot/types/interfaces/vesting'
-import type {
-  AssetInstance,
-  AssetInstanceV0,
-  AssetInstanceV1,
-  BodyId,
-  BodyPart,
-  DoubleEncodedCall,
-  Fungibility,
-  InboundStatus,
-  InstructionV2,
-  InteriorMultiLocation,
-  Junction,
-  JunctionV0,
-  JunctionV1,
-  JunctionV2,
-  Junctions,
-  JunctionsV1,
-  JunctionsV2,
-  MultiAsset,
-  MultiAssetFilter,
-  MultiAssetFilterV1,
-  MultiAssetFilterV2,
-  MultiAssetV0,
-  MultiAssetV1,
-  MultiAssetV2,
-  MultiAssets,
-  MultiAssetsV1,
-  MultiAssetsV2,
-  MultiLocation,
-  MultiLocationV0,
-  MultiLocationV1,
-  MultiLocationV2,
-  NetworkId,
-  OriginKindV0,
-  OriginKindV1,
-  OriginKindV2,
-  OutboundStatus,
-  Outcome,
-  QueryId,
-  QueryStatus,
-  QueueConfigData,
-  Response,
-  ResponseV0,
-  ResponseV1,
-  ResponseV2,
-  ResponseV2Error,
-  ResponseV2Result,
-  VersionMigrationStage,
-  VersionedMultiAsset,
-  VersionedMultiAssets,
-  VersionedMultiLocation,
-  VersionedResponse,
-  VersionedXcm,
-  WeightLimitV2,
-  WildFungibility,
-  WildMultiAsset,
-  WildMultiAssetV1,
-  Xcm,
-  XcmAssetId,
-  XcmError,
-  XcmErrorV0,
-  XcmErrorV1,
-  XcmErrorV2,
-  XcmOrder,
-  XcmOrderV0,
-  XcmOrderV1,
-  XcmOrigin,
-  XcmOriginKind,
-  XcmV0,
-  XcmV1,
-  XcmV2,
-  XcmVersion,
-  XcmpMessageFormat,
-} from '@polkadot/types/interfaces/xcm'
-
-declare module '@polkadot/types/types/registry' {
-  export interface InterfaceTypes {
-    AbridgedCandidateReceipt: AbridgedCandidateReceipt
-    AbridgedHostConfiguration: AbridgedHostConfiguration
-    AbridgedHrmpChannel: AbridgedHrmpChannel
-    AccountData: AccountData
-    AccountId: AccountId
-    AccountId20: AccountId20
-    AccountId32: AccountId32
-    AccountIdOf: AccountIdOf
-    AccountIndex: AccountIndex
-    AccountInfo: AccountInfo
-    AccountInfoWithDualRefCount: AccountInfoWithDualRefCount
-    AccountInfoWithProviders: AccountInfoWithProviders
-    AccountInfoWithRefCount: AccountInfoWithRefCount
-    AccountInfoWithRefCountU8: AccountInfoWithRefCountU8
-    AccountInfoWithTripleRefCount: AccountInfoWithTripleRefCount
-    AccountStatus: AccountStatus
-    AccountValidity: AccountValidity
-    AccountVote: AccountVote
-    AccountVoteSplit: AccountVoteSplit
-    AccountVoteStandard: AccountVoteStandard
-    ActiveEraInfo: ActiveEraInfo
-    ActiveGilt: ActiveGilt
-    ActiveGiltsTotal: ActiveGiltsTotal
-    ActiveIndex: ActiveIndex
-    ActiveRecovery: ActiveRecovery
-    ActorId: ActorId
-    Address: Address
-    AliveContractInfo: AliveContractInfo
-    AllowedSlots: AllowedSlots
-    AnySignature: AnySignature
-    ApiId: ApiId
-    Application: Application
-    ApplicationId: ApplicationId
-    ApplicationIdSet: ApplicationIdSet
-    ApplicationIdToWorkerIdMap: ApplicationIdToWorkerIdMap
-    ApplicationInfo: ApplicationInfo
-    ApplyExtrinsicResult: ApplyExtrinsicResult
-    ApplyOnOpeningParameters: ApplyOnOpeningParameters
-    ApprovalFlag: ApprovalFlag
-    Approvals: Approvals
-    Approved: Approved
-    ArithmeticError: ArithmeticError
-    AssetApproval: AssetApproval
-    AssetApprovalKey: AssetApprovalKey
-    AssetBalance: AssetBalance
-    AssetDestroyWitness: AssetDestroyWitness
-    AssetDetails: AssetDetails
-    AssetId: AssetId
-    AssetInstance: AssetInstance
-    AssetInstanceV0: AssetInstanceV0
-    AssetInstanceV1: AssetInstanceV1
-    AssetMetadata: AssetMetadata
-    AssetOptions: AssetOptions
-    AssignmentId: AssignmentId
-    AssignmentKind: AssignmentKind
-    AssuranceContractType: AssuranceContractType
-    AssuranceContractType_Closed: AssuranceContractType_Closed
-    AttestedCandidate: AttestedCandidate
-    AuctionIndex: AuctionIndex
-    AuthIndex: AuthIndex
-    AuthorityDiscoveryId: AuthorityDiscoveryId
-    AuthorityId: AuthorityId
-    AuthorityIndex: AuthorityIndex
-    AuthorityList: AuthorityList
-    AuthoritySet: AuthoritySet
-    AuthoritySetChange: AuthoritySetChange
-    AuthoritySetChanges: AuthoritySetChanges
-    AuthoritySignature: AuthoritySignature
-    AuthorityWeight: AuthorityWeight
-    AvailabilityBitfield: AvailabilityBitfield
-    AvailabilityBitfieldRecord: AvailabilityBitfieldRecord
-    BabeAuthorityWeight: BabeAuthorityWeight
-    BabeBlockWeight: BabeBlockWeight
-    BabeEpochConfiguration: BabeEpochConfiguration
-    BabeEquivocationProof: BabeEquivocationProof
-    BabeWeight: BabeWeight
-    BackedCandidate: BackedCandidate
-    Bag: Bag
-    BagId: BagId
-    BagIdType: BagIdType
-    Balance: Balance
-    BalanceKind: BalanceKind
-    BalanceLock: BalanceLock
-    BalanceLockTo212: BalanceLockTo212
-    BalanceOf: BalanceOf
-    BalanceStatus: BalanceStatus
-    BeefyCommitment: BeefyCommitment
-    BeefyId: BeefyId
-    BeefyKey: BeefyKey
-    BeefyNextAuthoritySet: BeefyNextAuthoritySet
-    BeefyPayload: BeefyPayload
-    BeefySignedCommitment: BeefySignedCommitment
-    Bid: Bid
-    Bidder: Bidder
-    BidKind: BidKind
-    BitVec: BitVec
-    Block: Block
-    BlockAndTime: BlockAndTime
-    BlockAttestations: BlockAttestations
-    BlockHash: BlockHash
-    BlockLength: BlockLength
-    BlockNumber: BlockNumber
-    BlockNumberFor: BlockNumberFor
-    BlockNumberOf: BlockNumberOf
-    BlockRate: BlockRate
-    BlockTrace: BlockTrace
-    BlockTraceEvent: BlockTraceEvent
-    BlockTraceEventData: BlockTraceEventData
-    BlockTraceSpan: BlockTraceSpan
-    BlockWeights: BlockWeights
-    BodyId: BodyId
-    BodyPart: BodyPart
-    bool: bool
-    Bool: Bool
-    Bounty: Bounty
-    BountyActor: BountyActor
-    BountyCreationParameters: BountyCreationParameters
-    BountyId: BountyId
-    BountyIndex: BountyIndex
-    BountyMilestone: BountyMilestone
-    BountyMilestone_BountyMaxFundingReached: BountyMilestone_BountyMaxFundingReached
-    BountyMilestone_Created: BountyMilestone_Created
-    BountyMilestone_JudgmentSubmitted: BountyMilestone_JudgmentSubmitted
-    BountyMilestone_WorkSubmitted: BountyMilestone_WorkSubmitted
-    BountyStatus: BountyStatus
-    BountyStatusActive: BountyStatusActive
-    BountyStatusCuratorProposed: BountyStatusCuratorProposed
-    BountyStatusPendingPayout: BountyStatusPendingPayout
-    BridgedBlockHash: BridgedBlockHash
-    BridgedBlockNumber: BridgedBlockNumber
-    BridgedHeader: BridgedHeader
-    BufferedSessionChange: BufferedSessionChange
-    BuyMembershipParameters: BuyMembershipParameters
-    Bytes: Bytes
-    Call: Call
-    CallHash: CallHash
-    CallHashOf: CallHashOf
-    CallIndex: CallIndex
-    CallOrigin: CallOrigin
-    Candidate: Candidate
-    CandidateCommitments: CandidateCommitments
-    CandidateDescriptor: CandidateDescriptor
-    CandidateHash: CandidateHash
-    CandidateInfo: CandidateInfo
-    CandidatePendingAvailability: CandidatePendingAvailability
-    CandidateReceipt: CandidateReceipt
-    CastVoteOf: CastVoteOf
-    Category: Category
-    CategoryId: CategoryId
-    ChainId: ChainId
-    ChainProperties: ChainProperties
-    ChainType: ChainType
-    ChangesTrieConfiguration: ChangesTrieConfiguration
-    ChangesTrieSignal: ChangesTrieSignal
-    Channel: Channel
-    ChannelActionPermission: ChannelActionPermission
-    ChannelAgentPermissions: ChannelAgentPermissions
-    ChannelCreationParameters: ChannelCreationParameters
-    ChannelId: ChannelId
-    ChannelOwner: ChannelOwner
-    ChannelPayoutsPayloadParameters: ChannelPayoutsPayloadParameters
-    ChannelPrivilegeLevel: ChannelPrivilegeLevel
-    ChannelTransferStatus: ChannelTransferStatus
-    ChannelTransferStatus_PendingTransfer: ChannelTransferStatus_PendingTransfer
-    ChannelUpdateParameters: ChannelUpdateParameters
-    Cid: Cid
-    ClassDetails: ClassDetails
-    ClassId: ClassId
-    ClassMetadata: ClassMetadata
-    CodecHash: CodecHash
-    CodeHash: CodeHash
-    CollatorId: CollatorId
-    CollatorSignature: CollatorSignature
-    CollectiveOrigin: CollectiveOrigin
-    CommittedCandidateReceipt: CommittedCandidateReceipt
-    CompactAssignments: CompactAssignments
-    CompactAssignmentsTo257: CompactAssignmentsTo257
-    CompactAssignmentsTo265: CompactAssignmentsTo265
-    CompactAssignmentsWith16: CompactAssignmentsWith16
-    CompactAssignmentsWith24: CompactAssignmentsWith24
-    CompactScore: CompactScore
-    CompactScoreCompact: CompactScoreCompact
-    ConfigData: ConfigData
-    Consensus: Consensus
-    ConsensusEngineId: ConsensusEngineId
-    ConstitutionInfo: ConstitutionInfo
-    ConsumedWeight: ConsumedWeight
-    ContentActor: ContentActor
-    ContentIdSet: ContentIdSet
-    ContentModerationAction: ContentModerationAction
-    ContentModerationActionsSet: ContentModerationActionsSet
-    ContractCallRequest: ContractCallRequest
-    ContractConstructorSpec: ContractConstructorSpec
-    ContractContractSpec: ContractContractSpec
-    ContractCryptoHasher: ContractCryptoHasher
-    ContractDiscriminant: ContractDiscriminant
-    ContractDisplayName: ContractDisplayName
-    ContractEventParamSpec: ContractEventParamSpec
-    ContractEventSpec: ContractEventSpec
-    ContractExecResult: ContractExecResult
-    ContractExecResultErr: ContractExecResultErr
-    ContractExecResultErrModule: ContractExecResultErrModule
-    ContractExecResultOk: ContractExecResultOk
-    ContractExecResultResult: ContractExecResultResult
-    ContractExecResultSuccessTo255: ContractExecResultSuccessTo255
-    ContractExecResultSuccessTo260: ContractExecResultSuccessTo260
-    ContractExecResultTo255: ContractExecResultTo255
-    ContractExecResultTo260: ContractExecResultTo260
-    ContractExecResultTo267: ContractExecResultTo267
-    ContractInfo: ContractInfo
-    ContractInstantiateResult: ContractInstantiateResult
-    ContractLayoutArray: ContractLayoutArray
-    ContractLayoutCell: ContractLayoutCell
-    ContractLayoutEnum: ContractLayoutEnum
-    ContractLayoutHash: ContractLayoutHash
-    ContractLayoutHashingStrategy: ContractLayoutHashingStrategy
-    ContractLayoutKey: ContractLayoutKey
-    ContractLayoutStruct: ContractLayoutStruct
-    ContractLayoutStructField: ContractLayoutStructField
-    ContractMessageParamSpec: ContractMessageParamSpec
-    ContractMessageSpec: ContractMessageSpec
-    ContractProject: ContractProject
-    ContractProjectContract: ContractProjectContract
-    ContractProjectSource: ContractProjectSource
-    ContractSelector: ContractSelector
-    ContractStorageKey: ContractStorageKey
-    ContractStorageLayout: ContractStorageLayout
-    ContractTypeSpec: ContractTypeSpec
-    Conviction: Conviction
-    CoreAssignment: CoreAssignment
-    CoreIndex: CoreIndex
-    CoreOccupied: CoreOccupied
-    CouncilMemberOf: CouncilMemberOf
-    CouncilStage: CouncilStage
-    CouncilStageAnnouncing: CouncilStageAnnouncing
-    CouncilStageElection: CouncilStageElection
-    CouncilStageUpdate: CouncilStageUpdate
-    CreatedBlock: CreatedBlock
-    CreateOpeningParameters: CreateOpeningParameters
-    CuratorGroup: CuratorGroup
-    CuratorGroupId: CuratorGroupId
-    CuratorId: CuratorId
-    Data: Data
-    DataObject: DataObject
-    DataObjectCreationParameters: DataObjectCreationParameters
-    DataObjectId: DataObjectId
-    DataObjectIdMap: DataObjectIdMap
-    DataObjectIdSet: DataObjectIdSet
-    DeferredOffenceOf: DeferredOffenceOf
-    DefunctVoter: DefunctVoter
-    DelayKind: DelayKind
-    DelayKindBest: DelayKindBest
-    Delegations: Delegations
-    DeletedContract: DeletedContract
-    DeliveredMessages: DeliveredMessages
-    DepositBalance: DepositBalance
-    DepositBalanceOf: DepositBalanceOf
-    DestroyWitness: DestroyWitness
-    Digest: Digest
-    DigestItem: DigestItem
-    DigestOf: DigestOf
-    DiscussionPost: DiscussionPost
-    DiscussionThread: DiscussionThread
-    DispatchClass: DispatchClass
-    DispatchError: DispatchError
-    DispatchErrorModule: DispatchErrorModule
-    DispatchErrorTo198: DispatchErrorTo198
-    DispatchFeePayment: DispatchFeePayment
-    DispatchInfo: DispatchInfo
-    DispatchInfoTo190: DispatchInfoTo190
-    DispatchInfoTo244: DispatchInfoTo244
-    DispatchOutcome: DispatchOutcome
-    DispatchResult: DispatchResult
-    DispatchResultOf: DispatchResultOf
-    DispatchResultTo198: DispatchResultTo198
-    DisputeLocation: DisputeLocation
-    DisputeResult: DisputeResult
-    DisputeState: DisputeState
-    DisputeStatement: DisputeStatement
-    DisputeStatementSet: DisputeStatementSet
-    DistributionBucket: DistributionBucket
-    DistributionBucketFamily: DistributionBucketFamily
-    DistributionBucketFamilyId: DistributionBucketFamilyId
-    DistributionBucketId: DistributionBucketId
-    DistributionBucketIndex: DistributionBucketIndex
-    DistributionBucketIndexSet: DistributionBucketIndexSet
-    DistributionBucketsPerBagValueConstraint: DistributionBucketsPerBagValueConstraint
-    DoubleEncodedCall: DoubleEncodedCall
-    DoubleVoteReport: DoubleVoteReport
-    DownwardMessage: DownwardMessage
-    Dynamic: Dynamic
-    DynamicBagCreationPolicy: DynamicBagCreationPolicy
-    DynamicBagCreationPolicyDistributorFamiliesMap: DynamicBagCreationPolicyDistributorFamiliesMap
-    DynamicBagId: DynamicBagId
-    DynamicBagType: DynamicBagType
-    DynBagCreationParameters: DynBagCreationParameters
-    EcdsaSignature: EcdsaSignature
-    Ed25519Signature: Ed25519Signature
-    ElectionCompute: ElectionCompute
-    ElectionPhase: ElectionPhase
-    ElectionResult: ElectionResult
-    ElectionScore: ElectionScore
-    ElectionSize: ElectionSize
-    ElectionStatus: ElectionStatus
-    EncodedFinalityProofs: EncodedFinalityProofs
-    EncodedJustification: EncodedJustification
-    EnglishAuction: EnglishAuction
-    EnglishAuctionBid: EnglishAuctionBid
-    EnglishAuctionParams: EnglishAuctionParams
-    Entry: Entry
-    EntryId: EntryId
-    EpochAuthorship: EpochAuthorship
-    Era: Era
-    EraIndex: EraIndex
-    EraPoints: EraPoints
-    EraRewardPoints: EraRewardPoints
-    EraRewards: EraRewards
-    ErrorMetadataLatest: ErrorMetadataLatest
-    ErrorMetadataV10: ErrorMetadataV10
-    ErrorMetadataV11: ErrorMetadataV11
-    ErrorMetadataV12: ErrorMetadataV12
-    ErrorMetadataV13: ErrorMetadataV13
-    ErrorMetadataV14: ErrorMetadataV14
-    ErrorMetadataV9: ErrorMetadataV9
-    EthAccount: EthAccount
-    EthBlock: EthBlock
-    EthBloom: EthBloom
-    EthCallRequest: EthCallRequest
-    EthereumAccountId: EthereumAccountId
-    EthereumAddress: EthereumAddress
-    EthereumLookupSource: EthereumLookupSource
-    EthereumSignature: EthereumSignature
-    EthFilter: EthFilter
-    EthFilterAddress: EthFilterAddress
-    EthFilterChanges: EthFilterChanges
-    EthFilterTopic: EthFilterTopic
-    EthFilterTopicEntry: EthFilterTopicEntry
-    EthFilterTopicInner: EthFilterTopicInner
-    EthHeader: EthHeader
-    EthLog: EthLog
-    EthReceipt: EthReceipt
-    EthRichBlock: EthRichBlock
-    EthRichHeader: EthRichHeader
-    EthStorageProof: EthStorageProof
-    EthSubKind: EthSubKind
-    EthSubParams: EthSubParams
-    EthSubResult: EthSubResult
-    EthSyncInfo: EthSyncInfo
-    EthSyncStatus: EthSyncStatus
-    EthTransaction: EthTransaction
-    EthTransactionAction: EthTransactionAction
-    EthTransactionCondition: EthTransactionCondition
-    EthTransactionRequest: EthTransactionRequest
-    EthTransactionSignature: EthTransactionSignature
-    EthTransactionStatus: EthTransactionStatus
-    EthWork: EthWork
-    Event: Event
-    EventId: EventId
-    EventIndex: EventIndex
-    EventMetadataLatest: EventMetadataLatest
-    EventMetadataV10: EventMetadataV10
-    EventMetadataV11: EventMetadataV11
-    EventMetadataV12: EventMetadataV12
-    EventMetadataV13: EventMetadataV13
-    EventMetadataV14: EventMetadataV14
-    EventMetadataV9: EventMetadataV9
-    EventRecord: EventRecord
-    EvmAccount: EvmAccount
-    EvmLog: EvmLog
-    EvmVicinity: EvmVicinity
-    ExecReturnValue: ExecReturnValue
-    ExecutionFailed: ExecutionFailed
-    ExecutionStatus: ExecutionStatus
-    ExitError: ExitError
-    ExitFatal: ExitFatal
-    ExitReason: ExitReason
-    ExitRevert: ExitRevert
-    ExitSucceed: ExitSucceed
-    ExplicitDisputeStatement: ExplicitDisputeStatement
-    Exposure: Exposure
-    ExtendedBalance: ExtendedBalance
-    ExtendedPostId: ExtendedPostId
-    Extrinsic: Extrinsic
-    ExtrinsicEra: ExtrinsicEra
-    ExtrinsicMetadataLatest: ExtrinsicMetadataLatest
-    ExtrinsicMetadataV11: ExtrinsicMetadataV11
-    ExtrinsicMetadataV12: ExtrinsicMetadataV12
-    ExtrinsicMetadataV13: ExtrinsicMetadataV13
-    ExtrinsicMetadataV14: ExtrinsicMetadataV14
-    ExtrinsicOrHash: ExtrinsicOrHash
-    ExtrinsicPayload: ExtrinsicPayload
-    ExtrinsicPayloadUnknown: ExtrinsicPayloadUnknown
-    ExtrinsicPayloadV4: ExtrinsicPayloadV4
-    ExtrinsicSignature: ExtrinsicSignature
-    ExtrinsicSignatureV4: ExtrinsicSignatureV4
-    ExtrinsicStatus: ExtrinsicStatus
-    ExtrinsicsWeight: ExtrinsicsWeight
-    ExtrinsicUnknown: ExtrinsicUnknown
-    ExtrinsicV4: ExtrinsicV4
-    FeeDetails: FeeDetails
-    FillOpeningParameters: FillOpeningParameters
-    Fixed128: Fixed128
-    Fixed64: Fixed64
-    FixedI128: FixedI128
-    FixedI64: FixedI64
-    FixedU128: FixedU128
-    FixedU64: FixedU64
-    Forcing: Forcing
-    ForkTreePendingChange: ForkTreePendingChange
-    ForkTreePendingChangeNode: ForkTreePendingChangeNode
-    ForumUserId: ForumUserId
-    FullIdentification: FullIdentification
-    FunctionArgumentMetadataLatest: FunctionArgumentMetadataLatest
-    FunctionArgumentMetadataV10: FunctionArgumentMetadataV10
-    FunctionArgumentMetadataV11: FunctionArgumentMetadataV11
-    FunctionArgumentMetadataV12: FunctionArgumentMetadataV12
-    FunctionArgumentMetadataV13: FunctionArgumentMetadataV13
-    FunctionArgumentMetadataV14: FunctionArgumentMetadataV14
-    FunctionArgumentMetadataV9: FunctionArgumentMetadataV9
-    FunctionMetadataLatest: FunctionMetadataLatest
-    FunctionMetadataV10: FunctionMetadataV10
-    FunctionMetadataV11: FunctionMetadataV11
-    FunctionMetadataV12: FunctionMetadataV12
-    FunctionMetadataV13: FunctionMetadataV13
-    FunctionMetadataV14: FunctionMetadataV14
-    FunctionMetadataV9: FunctionMetadataV9
-    FundIndex: FundIndex
-    FundInfo: FundInfo
-    FundingRequestParameters: FundingRequestParameters
-    FundingType: FundingType
-    FundingType_Limited: FundingType_Limited
-    FundingType_Perpetual: FundingType_Perpetual
-    Fungibility: Fungibility
-    Gas: Gas
-    GeneralProposalParameters: GeneralProposalParameters
-    GiltBid: GiltBid
-    GlobalValidationData: GlobalValidationData
-    GlobalValidationSchedule: GlobalValidationSchedule
-    GrandpaCommit: GrandpaCommit
-    GrandpaEquivocation: GrandpaEquivocation
-    GrandpaEquivocationProof: GrandpaEquivocationProof
-    GrandpaEquivocationValue: GrandpaEquivocationValue
-    GrandpaJustification: GrandpaJustification
-    GrandpaPrecommit: GrandpaPrecommit
-    GrandpaPrevote: GrandpaPrevote
-    GrandpaSignedPrecommit: GrandpaSignedPrecommit
-    GroupIndex: GroupIndex
-    H1024: H1024
-    H128: H128
-    H160: H160
-    H2048: H2048
-    H256: H256
-    H32: H32
-    H512: H512
-    H64: H64
-    Hash: Hash
-    HeadData: HeadData
-    Header: Header
-    HeaderPartial: HeaderPartial
-    Health: Health
-    Heartbeat: Heartbeat
-    HeartbeatTo244: HeartbeatTo244
-    HostConfiguration: HostConfiguration
-    HostFnWeights: HostFnWeights
-    HostFnWeightsTo264: HostFnWeightsTo264
-    HrmpChannel: HrmpChannel
-    HrmpChannelId: HrmpChannelId
-    HrmpOpenChannelRequest: HrmpOpenChannelRequest
-    i128: i128
-    I128: I128
-    i16: i16
-    I16: I16
-    i256: i256
-    I256: I256
-    i32: i32
-    I32: I32
-    I32F32: I32F32
-    i64: i64
-    I64: I64
-    i8: i8
-    I8: I8
-    IdentificationTuple: IdentificationTuple
-    IdentityFields: IdentityFields
-    IdentityInfo: IdentityInfo
-    IdentityInfoAdditional: IdentityInfoAdditional
-    IdentityJudgement: IdentityJudgement
-    ImmortalEra: ImmortalEra
-    ImportedAux: ImportedAux
-    InboundDownwardMessage: InboundDownwardMessage
-    InboundHrmpMessage: InboundHrmpMessage
-    InboundHrmpMessages: InboundHrmpMessages
-    InboundLaneData: InboundLaneData
-    InboundRelayer: InboundRelayer
-    InboundStatus: InboundStatus
-    IncludedBlocks: IncludedBlocks
-    InclusionFee: InclusionFee
-    IncomingParachain: IncomingParachain
-    IncomingParachainDeploy: IncomingParachainDeploy
-    IncomingParachainFixed: IncomingParachainFixed
-    Index: Index
-    IndicesLookupSource: IndicesLookupSource
-    IndividualExposure: IndividualExposure
-    InitializationData: InitializationData
-    InitTransactionalStatus: InitTransactionalStatus
-    InputValidationLengthConstraintU64: InputValidationLengthConstraintU64
-    InstanceDetails: InstanceDetails
-    InstanceId: InstanceId
-    InstanceMetadata: InstanceMetadata
-    InstantiateRequest: InstantiateRequest
-    InstantiateReturnValue: InstantiateReturnValue
-    InstructionV2: InstructionV2
-    InstructionWeights: InstructionWeights
-    InteriorMultiLocation: InteriorMultiLocation
-    InvalidDisputeStatementKind: InvalidDisputeStatementKind
-    InvalidTransaction: InvalidTransaction
-    InviteMembershipParameters: InviteMembershipParameters
-    IsCensored: IsCensored
-    JoyBalance: JoyBalance
-    Json: Json
-    Junction: Junction
-    Junctions: Junctions
-    JunctionsV1: JunctionsV1
-    JunctionsV2: JunctionsV2
-    JunctionV0: JunctionV0
-    JunctionV1: JunctionV1
-    JunctionV2: JunctionV2
-    Justification: Justification
-    JustificationNotification: JustificationNotification
-    Justifications: Justifications
-    Key: Key
-    KeyOwnerProof: KeyOwnerProof
-    Keys: Keys
-    KeyType: KeyType
-    KeyTypeId: KeyTypeId
-    KeyValue: KeyValue
-    KeyValueOption: KeyValueOption
-    Kind: Kind
-    LaneId: LaneId
-    LastContribution: LastContribution
-    LastRuntimeUpgradeInfo: LastRuntimeUpgradeInfo
-    LeasePeriod: LeasePeriod
-    LeasePeriodOf: LeasePeriodOf
-    LimitPerPeriod: LimitPerPeriod
-    Limits: Limits
-    LimitsTo264: LimitsTo264
-    LocalValidationData: LocalValidationData
-    LockIdentifier: LockIdentifier
-    LookupSource: LookupSource
-    LookupTarget: LookupTarget
-    LotteryConfig: LotteryConfig
-    MaxNumber: MaxNumber
-    MaybeRandomness: MaybeRandomness
-    MaybeVrf: MaybeVrf
-    MemberCount: MemberCount
-    MemberId: MemberId
-    Membership: Membership
-    MembershipProof: MembershipProof
-    MerkleProof: MerkleProof
-    MerkleSide: MerkleSide
-    MessageData: MessageData
-    MessageId: MessageId
-    MessageIngestionType: MessageIngestionType
-    MessageKey: MessageKey
-    MessageNonce: MessageNonce
-    MessageQueueChain: MessageQueueChain
-    MessagesDeliveryProofOf: MessagesDeliveryProofOf
-    MessagesProofOf: MessagesProofOf
-    MessagingStateSnapshot: MessagingStateSnapshot
-    MessagingStateSnapshotEgressEntry: MessagingStateSnapshotEgressEntry
-    MetadataAll: MetadataAll
-    MetadataLatest: MetadataLatest
-    MetadataV10: MetadataV10
-    MetadataV11: MetadataV11
-    MetadataV12: MetadataV12
-    MetadataV13: MetadataV13
-    MetadataV14: MetadataV14
-    MetadataV9: MetadataV9
-    MmrLeafProof: MmrLeafProof
-    MmrRootHash: MmrRootHash
-    ModerationPermissionsByLevel: ModerationPermissionsByLevel
-    ModeratorId: ModeratorId
-    ModuleConstantMetadataLatest: ModuleConstantMetadataLatest
-    ModuleConstantMetadataV10: ModuleConstantMetadataV10
-    ModuleConstantMetadataV11: ModuleConstantMetadataV11
-    ModuleConstantMetadataV12: ModuleConstantMetadataV12
-    ModuleConstantMetadataV13: ModuleConstantMetadataV13
-    ModuleConstantMetadataV9: ModuleConstantMetadataV9
-    ModuleId: ModuleId
-    ModuleMetadataLatest: ModuleMetadataLatest
-    ModuleMetadataV10: ModuleMetadataV10
-    ModuleMetadataV11: ModuleMetadataV11
-    ModuleMetadataV12: ModuleMetadataV12
-    ModuleMetadataV13: ModuleMetadataV13
-    ModuleMetadataV9: ModuleMetadataV9
-    Moment: Moment
-    MomentOf: MomentOf
-    MoreAttestations: MoreAttestations
-    MortalEra: MortalEra
-    MultiAddress: MultiAddress
-    MultiAsset: MultiAsset
-    MultiAssetFilter: MultiAssetFilter
-    MultiAssetFilterV1: MultiAssetFilterV1
-    MultiAssetFilterV2: MultiAssetFilterV2
-    MultiAssets: MultiAssets
-    MultiAssetsV1: MultiAssetsV1
-    MultiAssetsV2: MultiAssetsV2
-    MultiAssetV0: MultiAssetV0
-    MultiAssetV1: MultiAssetV1
-    MultiAssetV2: MultiAssetV2
-    MultiDisputeStatementSet: MultiDisputeStatementSet
-    MultiLocation: MultiLocation
-    MultiLocationV0: MultiLocationV0
-    MultiLocationV1: MultiLocationV1
-    MultiLocationV2: MultiLocationV2
-    Multiplier: Multiplier
-    Multisig: Multisig
-    MultiSignature: MultiSignature
-    MultiSigner: MultiSigner
-    NetworkId: NetworkId
-    NetworkState: NetworkState
-    NetworkStatePeerset: NetworkStatePeerset
-    NetworkStatePeersetInfo: NetworkStatePeersetInfo
-    NewBidder: NewBidder
-    NextAuthority: NextAuthority
-    NextConfigDescriptor: NextConfigDescriptor
-    NextConfigDescriptorV1: NextConfigDescriptorV1
-    NftCounter: NftCounter
-    NftIssuanceParameters: NftIssuanceParameters
-    NftLimitId: NftLimitId
-    NftLimitPeriod: NftLimitPeriod
-    NftMetadata: NftMetadata
-    NftOwner: NftOwner
-    NodeRole: NodeRole
-    Nominations: Nominations
-    NominatorIndex: NominatorIndex
-    NominatorIndexCompact: NominatorIndexCompact
-    NotConnectedPeer: NotConnectedPeer
-    Null: Null
-    OffchainAccuracy: OffchainAccuracy
-    OffchainAccuracyCompact: OffchainAccuracyCompact
-    OffenceDetails: OffenceDetails
-    Offender: Offender
-    OfferingState: OfferingState
-    OpaqueCall: OpaqueCall
-    OpaqueMultiaddr: OpaqueMultiaddr
-    OpaqueNetworkState: OpaqueNetworkState
-    OpaquePeerId: OpaquePeerId
-    OpaqueTimeSlot: OpaqueTimeSlot
-    OpenAuction: OpenAuction
-    OpenAuctionBid: OpenAuctionBid
-    OpenAuctionId: OpenAuctionId
-    OpenAuctionParams: OpenAuctionParams
-    Opening: Opening
-    OpeningId: OpeningId
-    OpeningType: OpeningType
-    OpenTip: OpenTip
-    OpenTipFinderTo225: OpenTipFinderTo225
-    OpenTipTip: OpenTipTip
-    OpenTipTo225: OpenTipTo225
-    OperatingMode: OperatingMode
-    OptionResult: OptionResult
-    OracleJudgment: OracleJudgment
-    OracleWorkEntryJudgment: OracleWorkEntryJudgment
-    OracleWorkEntryJudgment_Winner: OracleWorkEntryJudgment_Winner
-    Origin: Origin
-    OriginCaller: OriginCaller
-    OriginKindV0: OriginKindV0
-    OriginKindV1: OriginKindV1
-    OriginKindV2: OriginKindV2
-    OutboundHrmpMessage: OutboundHrmpMessage
-    OutboundLaneData: OutboundLaneData
-    OutboundMessageFee: OutboundMessageFee
-    OutboundPayload: OutboundPayload
-    OutboundStatus: OutboundStatus
-    Outcome: Outcome
-    OverweightIndex: OverweightIndex
-    OwnedNft: OwnedNft
-    Owner: Owner
-    PageCounter: PageCounter
-    PageIndexData: PageIndexData
-    PalletCallMetadataLatest: PalletCallMetadataLatest
-    PalletCallMetadataV14: PalletCallMetadataV14
-    PalletConstantMetadataLatest: PalletConstantMetadataLatest
-    PalletConstantMetadataV14: PalletConstantMetadataV14
-    PalletErrorMetadataLatest: PalletErrorMetadataLatest
-    PalletErrorMetadataV14: PalletErrorMetadataV14
-    PalletEventMetadataLatest: PalletEventMetadataLatest
-    PalletEventMetadataV14: PalletEventMetadataV14
-    PalletId: PalletId
-    PalletMetadataLatest: PalletMetadataLatest
-    PalletMetadataV14: PalletMetadataV14
-    PalletsOrigin: PalletsOrigin
-    PalletStorageMetadataLatest: PalletStorageMetadataLatest
-    PalletStorageMetadataV14: PalletStorageMetadataV14
-    PalletVersion: PalletVersion
-    ParachainDispatchOrigin: ParachainDispatchOrigin
-    ParachainInherentData: ParachainInherentData
-    ParachainProposal: ParachainProposal
-    ParachainsInherentData: ParachainsInherentData
-    ParaGenesisArgs: ParaGenesisArgs
-    ParaId: ParaId
-    ParaInfo: ParaInfo
-    ParaLifecycle: ParaLifecycle
-    Parameter: Parameter
-    ParaPastCodeMeta: ParaPastCodeMeta
-    ParaScheduling: ParaScheduling
-    ParathreadClaim: ParathreadClaim
-    ParathreadClaimQueue: ParathreadClaimQueue
-    ParathreadEntry: ParathreadEntry
-    ParaValidatorIndex: ParaValidatorIndex
-    ParticipantId: ParticipantId
-    PausableChannelFeature: PausableChannelFeature
-    Payment: Payment
-    PaymentWithVesting: PaymentWithVesting
-    Pays: Pays
-    Peer: Peer
-    PeerEndpoint: PeerEndpoint
-    PeerEndpointAddr: PeerEndpointAddr
-    PeerInfo: PeerInfo
-    PeerPing: PeerPing
-    Penalty: Penalty
-    PendingChange: PendingChange
-    PendingPause: PendingPause
-    PendingResume: PendingResume
-    Perbill: Perbill
-    Percent: Percent
-    PerDispatchClassU32: PerDispatchClassU32
-    PerDispatchClassWeight: PerDispatchClassWeight
-    PerDispatchClassWeightsPerClass: PerDispatchClassWeightsPerClass
-    Period: Period
-    Permill: Permill
-    PermissionLatest: PermissionLatest
-    PermissionsV1: PermissionsV1
-    PermissionVersions: PermissionVersions
-    Perquintill: Perquintill
-    PersistedValidationData: PersistedValidationData
-    PerU16: PerU16
-    Phantom: Phantom
-    PhantomData: PhantomData
-    Phase: Phase
-    PhragmenScore: PhragmenScore
-    Points: Points
-    Poll: Poll
-    PollAlternative: PollAlternative
-    PollInput: PollInput
-    PortableRegistry: PortableRegistry
-    PortableType: PortableType
-    Post: Post
-    PostId: PostId
-    PostReactionId: PostReactionId
-    Precommits: Precommits
-    PrefabWasmModule: PrefabWasmModule
-    PrefixedStorageKey: PrefixedStorageKey
-    PreimageStatus: PreimageStatus
-    PreimageStatusAvailable: PreimageStatusAvailable
-    PreRuntime: PreRuntime
-    Prevotes: Prevotes
-    Priority: Priority
-    PriorLock: PriorLock
-    PrivilegedActor: PrivilegedActor
-    ProofElement: ProofElement
-    PropIndex: PropIndex
-    Proposal: Proposal
-    ProposalDecision: ProposalDecision
-    ProposalDetails: ProposalDetails
-    ProposalDetailsOf: ProposalDetailsOf
-    ProposalId: ProposalId
-    ProposalIndex: ProposalIndex
-    ProposalOf: ProposalOf
-    ProposalParameters: ProposalParameters
-    ProposalStatus: ProposalStatus
-    ProxyAnnouncement: ProxyAnnouncement
-    ProxyDefinition: ProxyDefinition
-    ProxyState: ProxyState
-    ProxyType: ProxyType
-    PullPayment: PullPayment
-    QueryId: QueryId
-    QueryStatus: QueryStatus
-    QueueConfigData: QueueConfigData
-    QueuedParathread: QueuedParathread
-    Randomness: Randomness
-    Raw: Raw
-    RawAuraPreDigest: RawAuraPreDigest
-    RawBabePreDigest: RawBabePreDigest
-    RawBabePreDigestCompat: RawBabePreDigestCompat
-    RawBabePreDigestPrimary: RawBabePreDigestPrimary
-    RawBabePreDigestPrimaryTo159: RawBabePreDigestPrimaryTo159
-    RawBabePreDigestSecondaryPlain: RawBabePreDigestSecondaryPlain
-    RawBabePreDigestSecondaryTo159: RawBabePreDigestSecondaryTo159
-    RawBabePreDigestSecondaryVRF: RawBabePreDigestSecondaryVRF
-    RawBabePreDigestTo159: RawBabePreDigestTo159
-    RawOrigin: RawOrigin
-    RawSolution: RawSolution
-    RawSolutionTo265: RawSolutionTo265
-    RawSolutionWith16: RawSolutionWith16
-    RawSolutionWith24: RawSolutionWith24
-    RawVRFOutput: RawVRFOutput
-    ReadProof: ReadProof
-    ReadySolution: ReadySolution
-    Reasons: Reasons
-    RecoveryConfig: RecoveryConfig
-    RefCount: RefCount
-    RefCountTo259: RefCountTo259
-    ReferendumIndex: ReferendumIndex
-    ReferendumInfo: ReferendumInfo
-    ReferendumInfoFinished: ReferendumInfoFinished
-    ReferendumInfoTo239: ReferendumInfoTo239
-    ReferendumStage: ReferendumStage
-    ReferendumStageRevealing: ReferendumStageRevealing
-    ReferendumStageVoting: ReferendumStageVoting
-    ReferendumStatus: ReferendumStatus
-    RegisteredParachainInfo: RegisteredParachainInfo
-    RegistrarIndex: RegistrarIndex
-    RegistrarInfo: RegistrarInfo
-    Registration: Registration
-    RegistrationJudgement: RegistrationJudgement
-    RelayBlockNumber: RelayBlockNumber
-    RelayChainBlockNumber: RelayChainBlockNumber
-    RelayChainHash: RelayChainHash
-    RelayerId: RelayerId
-    RelayHash: RelayHash
-    Releases: Releases
-    Remark: Remark
-    Renouncing: Renouncing
-    RentProjection: RentProjection
-    ReplacementTimes: ReplacementTimes
-    Reply: Reply
-    ReplyId: ReplyId
-    ReplyToDelete: ReplyToDelete
-    ReportedRoundStates: ReportedRoundStates
-    Reporter: Reporter
-    ReportIdOf: ReportIdOf
-    ReserveData: ReserveData
-    ReserveIdentifier: ReserveIdentifier
-    Response: Response
-    ResponseV0: ResponseV0
-    ResponseV1: ResponseV1
-    ResponseV2: ResponseV2
-    ResponseV2Error: ResponseV2Error
-    ResponseV2Result: ResponseV2Result
-    Retriable: Retriable
-    RewardDestination: RewardDestination
-    RewardPaymentType: RewardPaymentType
-    RewardPoint: RewardPoint
-    RoundSnapshot: RoundSnapshot
-    RoundState: RoundState
-    Royalty: Royalty
-    RpcMethods: RpcMethods
-    RuntimeDbWeight: RuntimeDbWeight
-    RuntimeDispatchInfo: RuntimeDispatchInfo
-    RuntimeVersion: RuntimeVersion
-    RuntimeVersionApi: RuntimeVersionApi
-    RuntimeVersionPartial: RuntimeVersionPartial
-    Schedule: Schedule
-    Scheduled: Scheduled
-    ScheduledTo254: ScheduledTo254
-    SchedulePeriod: SchedulePeriod
-    SchedulePriority: SchedulePriority
-    ScheduleTo212: ScheduleTo212
-    ScheduleTo258: ScheduleTo258
-    ScheduleTo264: ScheduleTo264
-    Scheduling: Scheduling
-    Seal: Seal
-    SealV0: SealV0
-    SeatHolder: SeatHolder
-    SeedOf: SeedOf
-    ServiceQuality: ServiceQuality
-    SessionIndex: SessionIndex
-    SessionInfo: SessionInfo
-    SessionInfoValidatorGroup: SessionInfoValidatorGroup
-    SessionKeys1: SessionKeys1
-    SessionKeys10: SessionKeys10
-    SessionKeys10B: SessionKeys10B
-    SessionKeys2: SessionKeys2
-    SessionKeys3: SessionKeys3
-    SessionKeys4: SessionKeys4
-    SessionKeys5: SessionKeys5
-    SessionKeys6: SessionKeys6
-    SessionKeys6B: SessionKeys6B
-    SessionKeys7: SessionKeys7
-    SessionKeys7B: SessionKeys7B
-    SessionKeys8: SessionKeys8
-    SessionKeys8B: SessionKeys8B
-    SessionKeys9: SessionKeys9
-    SessionKeys9B: SessionKeys9B
-    SetId: SetId
-    SetIndex: SetIndex
-    SetLeadParams: SetLeadParams
-    Si0Field: Si0Field
-    Si0LookupTypeId: Si0LookupTypeId
-    Si0Path: Si0Path
-    Si0Type: Si0Type
-    Si0TypeDef: Si0TypeDef
-    Si0TypeDefArray: Si0TypeDefArray
-    Si0TypeDefBitSequence: Si0TypeDefBitSequence
-    Si0TypeDefCompact: Si0TypeDefCompact
-    Si0TypeDefComposite: Si0TypeDefComposite
-    Si0TypeDefPhantom: Si0TypeDefPhantom
-    Si0TypeDefPrimitive: Si0TypeDefPrimitive
-    Si0TypeDefSequence: Si0TypeDefSequence
-    Si0TypeDefTuple: Si0TypeDefTuple
-    Si0TypeDefVariant: Si0TypeDefVariant
-    Si0TypeParameter: Si0TypeParameter
-    Si0Variant: Si0Variant
-    Side: Side
-    SiField: SiField
-    Signature: Signature
-    SignedAvailabilityBitfield: SignedAvailabilityBitfield
-    SignedAvailabilityBitfields: SignedAvailabilityBitfields
-    SignedBlock: SignedBlock
-    SignedBlockWithJustification: SignedBlockWithJustification
-    SignedBlockWithJustifications: SignedBlockWithJustifications
-    SignedExtensionMetadataLatest: SignedExtensionMetadataLatest
-    SignedExtensionMetadataV14: SignedExtensionMetadataV14
-    SignedSubmission: SignedSubmission
-    SignedSubmissionOf: SignedSubmissionOf
-    SignedSubmissionTo276: SignedSubmissionTo276
-    SignerPayload: SignerPayload
-    SigningContext: SigningContext
-    SiLookupTypeId: SiLookupTypeId
-    SingleDataObjectUploadParams: SingleDataObjectUploadParams
-    SiPath: SiPath
-    SiType: SiType
-    SiTypeDef: SiTypeDef
-    SiTypeDefArray: SiTypeDefArray
-    SiTypeDefBitSequence: SiTypeDefBitSequence
-    SiTypeDefCompact: SiTypeDefCompact
-    SiTypeDefComposite: SiTypeDefComposite
-    SiTypeDefPrimitive: SiTypeDefPrimitive
-    SiTypeDefSequence: SiTypeDefSequence
-    SiTypeDefTuple: SiTypeDefTuple
-    SiTypeDefVariant: SiTypeDefVariant
-    SiTypeParameter: SiTypeParameter
-    SiVariant: SiVariant
-    SlashingSpans: SlashingSpans
-    SlashingSpansTo204: SlashingSpansTo204
-    SlashJournalEntry: SlashJournalEntry
-    Slot: Slot
-    SlotNumber: SlotNumber
-    SlotRange: SlotRange
-    SocietyJudgement: SocietyJudgement
-    SocietyVote: SocietyVote
-    SolutionOrSnapshotSize: SolutionOrSnapshotSize
-    SolutionSupport: SolutionSupport
-    SolutionSupports: SolutionSupports
-    SpanIndex: SpanIndex
-    SpanRecord: SpanRecord
-    Sr25519Signature: Sr25519Signature
-    StakeParameters: StakeParameters
-    StakePolicy: StakePolicy
-    StakingAccountMemberBinding: StakingAccountMemberBinding
-    StakingLedger: StakingLedger
-    StakingLedgerTo223: StakingLedgerTo223
-    StakingLedgerTo240: StakingLedgerTo240
-    Statement: Statement
-    StatementKind: StatementKind
-    Static: Static
-    StaticBagId: StaticBagId
-    StorageAssets: StorageAssets
-    StorageBucket: StorageBucket
-    StorageBucketId: StorageBucketId
-    StorageBucketIdSet: StorageBucketIdSet
-    StorageBucketOperatorStatus: StorageBucketOperatorStatus
-    StorageBucketsPerBagValueConstraint: StorageBucketsPerBagValueConstraint
-    StorageChangeSet: StorageChangeSet
-    StorageData: StorageData
-    StorageEntryMetadataLatest: StorageEntryMetadataLatest
-    StorageEntryMetadataV10: StorageEntryMetadataV10
-    StorageEntryMetadataV11: StorageEntryMetadataV11
-    StorageEntryMetadataV12: StorageEntryMetadataV12
-    StorageEntryMetadataV13: StorageEntryMetadataV13
-    StorageEntryMetadataV14: StorageEntryMetadataV14
-    StorageEntryMetadataV9: StorageEntryMetadataV9
-    StorageEntryModifierLatest: StorageEntryModifierLatest
-    StorageEntryModifierV10: StorageEntryModifierV10
-    StorageEntryModifierV11: StorageEntryModifierV11
-    StorageEntryModifierV12: StorageEntryModifierV12
-    StorageEntryModifierV13: StorageEntryModifierV13
-    StorageEntryModifierV14: StorageEntryModifierV14
-    StorageEntryModifierV9: StorageEntryModifierV9
-    StorageEntryTypeLatest: StorageEntryTypeLatest
-    StorageEntryTypeV10: StorageEntryTypeV10
-    StorageEntryTypeV11: StorageEntryTypeV11
-    StorageEntryTypeV12: StorageEntryTypeV12
-    StorageEntryTypeV13: StorageEntryTypeV13
-    StorageEntryTypeV14: StorageEntryTypeV14
-    StorageEntryTypeV9: StorageEntryTypeV9
-    StorageHasher: StorageHasher
-    StorageHasherV10: StorageHasherV10
-    StorageHasherV11: StorageHasherV11
-    StorageHasherV12: StorageHasherV12
-    StorageHasherV13: StorageHasherV13
-    StorageHasherV14: StorageHasherV14
-    StorageHasherV9: StorageHasherV9
-    StorageKey: StorageKey
-    StorageKind: StorageKind
-    StorageMetadataLatest: StorageMetadataLatest
-    StorageMetadataV10: StorageMetadataV10
-    StorageMetadataV11: StorageMetadataV11
-    StorageMetadataV12: StorageMetadataV12
-    StorageMetadataV13: StorageMetadataV13
-    StorageMetadataV9: StorageMetadataV9
-    StorageProof: StorageProof
-    StorageProviderId: StorageProviderId
-    StoredPendingChange: StoredPendingChange
-    StoredState: StoredState
-    StrikeCount: StrikeCount
-    SubId: SubId
-    SubmissionIndicesOf: SubmissionIndicesOf
-    Supports: Supports
-    SyncState: SyncState
-    SystemInherentData: SystemInherentData
-    SystemOrigin: SystemOrigin
-    Tally: Tally
-    TaskAddress: TaskAddress
-    TAssetBalance: TAssetBalance
-    TAssetDepositBalance: TAssetDepositBalance
-    TerminateRoleParameters: TerminateRoleParameters
-    Text: Text
-    Thread: Thread
-    ThreadId: ThreadId
-    ThreadMode: ThreadMode
-    ThreadOf: ThreadOf
-    Timepoint: Timepoint
-    Title: Title
-    TokenAllocation: TokenAllocation
-    TokenError: TokenError
-    TokenId: TokenId
-    TokenIssuanceParams: TokenIssuanceParams
-    TokenSale: TokenSale
-    TokenSaleId: TokenSaleId
-    TokenSaleParams: TokenSaleParams
-    TombstoneContractInfo: TombstoneContractInfo
-    TraceBlockResponse: TraceBlockResponse
-    TraceError: TraceError
-    TransactionalStatus: TransactionalStatus
-    TransactionInfo: TransactionInfo
-    TransactionPriority: TransactionPriority
-    TransactionStorageProof: TransactionStorageProof
-    TransactionValidityError: TransactionValidityError
-    TransferParameters: TransferParameters
-    TransferPolicy: TransferPolicy
-    TransferPolicyParams: TransferPolicyParams
-    TransientValidationData: TransientValidationData
-    TreasuryProposal: TreasuryProposal
-    TrieId: TrieId
-    TrieIndex: TrieIndex
-    Type: Type
-    u128: u128
-    U128: U128
-    u16: u16
-    U16: U16
-    u256: u256
-    U256: U256
-    u32: u32
-    U32: U32
-    U32F32: U32F32
-    u64: u64
-    U64: U64
-    u8: u8
-    U8: U8
-    UnappliedSlash: UnappliedSlash
-    UnappliedSlashOther: UnappliedSlashOther
-    UncleEntryItem: UncleEntryItem
-    UnknownTransaction: UnknownTransaction
-    UnlockChunk: UnlockChunk
-    UnrewardedRelayer: UnrewardedRelayer
-    UnrewardedRelayersState: UnrewardedRelayersState
-    UpdateChannelPayoutsParameters: UpdateChannelPayoutsParameters
-    UpdatedBody: UpdatedBody
-    UpdatedTitle: UpdatedTitle
-    UpgradeGoAhead: UpgradeGoAhead
-    UpgradeRestriction: UpgradeRestriction
-    UploadContent: UploadContent
-    UploadParameters: UploadParameters
-    UpwardMessage: UpwardMessage
-    Url: Url
-    usize: usize
-    USize: USize
-    ValidatedPayment: ValidatedPayment
-    ValidationCode: ValidationCode
-    ValidationCodeHash: ValidationCodeHash
-    ValidationData: ValidationData
-    ValidationDataType: ValidationDataType
-    ValidationFunctionParams: ValidationFunctionParams
-    ValidatorCount: ValidatorCount
-    ValidatorId: ValidatorId
-    ValidatorIdOf: ValidatorIdOf
-    ValidatorIndex: ValidatorIndex
-    ValidatorIndexCompact: ValidatorIndexCompact
-    ValidatorPrefs: ValidatorPrefs
-    ValidatorPrefsTo145: ValidatorPrefsTo145
-    ValidatorPrefsTo196: ValidatorPrefsTo196
-    ValidatorPrefsWithBlocked: ValidatorPrefsWithBlocked
-    ValidatorPrefsWithCommission: ValidatorPrefsWithCommission
-    ValidatorSetId: ValidatorSetId
-    ValidatorSignature: ValidatorSignature
-    ValidDisputeStatementKind: ValidDisputeStatementKind
-    ValidityAttestation: ValidityAttestation
-    VecInboundHrmpMessage: VecInboundHrmpMessage
-    VersionedMultiAsset: VersionedMultiAsset
-    VersionedMultiAssets: VersionedMultiAssets
-    VersionedMultiLocation: VersionedMultiLocation
-    VersionedResponse: VersionedResponse
-    VersionedXcm: VersionedXcm
-    VersionMigrationStage: VersionMigrationStage
-    VestingInfo: VestingInfo
-    VestingSchedule: VestingSchedule
-    VestingScheduleParams: VestingScheduleParams
-    VestingSource: VestingSource
-    Video: Video
-    VideoCreationParameters: VideoCreationParameters
-    VideoId: VideoId
-    VideoUpdateParameters: VideoUpdateParameters
-    Vote: Vote
-    VoteIndex: VoteIndex
-    VoteKind: VoteKind
-    VotePower: VotePower
-    Voter: Voter
-    VoterInfo: VoterInfo
-    Votes: Votes
-    VotesTo230: VotesTo230
-    VoteThreshold: VoteThreshold
-    VoteWeight: VoteWeight
-    Voting: Voting
-    VotingDelegating: VotingDelegating
-    VotingDirect: VotingDirect
-    VotingDirectVote: VotingDirectVote
-    VotingResults: VotingResults
-    Voucher: Voucher
-    VouchingStatus: VouchingStatus
-    VrfData: VrfData
-    VrfOutput: VrfOutput
-    VrfProof: VrfProof
-    Weight: Weight
-    WeightLimitV2: WeightLimitV2
-    WeightMultiplier: WeightMultiplier
-    WeightPerClass: WeightPerClass
-    WeightToFeeCoefficient: WeightToFeeCoefficient
-    WhitelistParams: WhitelistParams
-    WildFungibility: WildFungibility
-    WildMultiAsset: WildMultiAsset
-    WildMultiAssetV1: WildMultiAssetV1
-    WinnersData: WinnersData
-    WinnersDataTuple: WinnersDataTuple
-    WinningData: WinningData
-    WinningDataEntry: WinningDataEntry
-    WithdrawReasons: WithdrawReasons
-    Worker: Worker
-    WorkerId: WorkerId
-    WorkerInfo: WorkerInfo
-    WorkingGroup: WorkingGroup
-    Xcm: Xcm
-    XcmAssetId: XcmAssetId
-    XcmError: XcmError
-    XcmErrorV0: XcmErrorV0
-    XcmErrorV1: XcmErrorV1
-    XcmErrorV2: XcmErrorV2
-    XcmOrder: XcmOrder
-    XcmOrderV0: XcmOrderV0
-    XcmOrderV1: XcmOrderV1
-    XcmOrigin: XcmOrigin
-    XcmOriginKind: XcmOriginKind
-    XcmpMessageFormat: XcmpMessageFormat
-    XcmV0: XcmV0
-    XcmV1: XcmV1
-    XcmV2: XcmV2
-    XcmVersion: XcmVersion
-    YearlyRate: YearlyRate
-  }
-}
diff --git a/node_modules/@joystream/types/lib/augment/augment-api-consts.d.ts b/node_modules/@joystream/types/lib/augment/augment-api-consts.d.ts
index 9799689..d73fad2 100644
--- a/node_modules/@joystream/types/lib/augment/augment-api-consts.d.ts
+++ b/node_modules/@joystream/types/lib/augment/augment-api-consts.d.ts
@@ -157,6 +157,10 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports const - default global weekly NFT limit.
              **/
             defaultGlobalWeeklyNftLimit: PalletContentLimitPerPeriod & AugmentedConst<ApiType>;
+            /**
+             * Export const - max cashout allowed limits
+             **/
+            maximumCashoutAllowedLimit: u128 & AugmentedConst<ApiType>;
             /**
              * Exports const - max number of keys per curator_group.permissions_by_level map instance
              **/
@@ -169,6 +173,10 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports const - max number of curators per group
              **/
             maxNumberOfCuratorsPerGroup: u32 & AugmentedConst<ApiType>;
+            /**
+             * Export const - min cashout allowed limits
+             **/
+            minimumCashoutAllowedLimit: u128 & AugmentedConst<ApiType>;
         };
         contentWorkingGroup: {
             /**
@@ -640,6 +648,10 @@ declare module '@polkadot/api-base/types/consts' {
             terminateWorkingGroupLeadProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateChannelPayoutsProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateGlobalNftLimitProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * Max yearly patronage rate update proposal
+             **/
+            updateMaxYearlyPatronageRate: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
              * Exports 'Update Working Group Budget' proposal parameters.
              **/
diff --git a/node_modules/@joystream/types/lib/augment/augment-api-errors.d.ts b/node_modules/@joystream/types/lib/augment/augment-api-errors.d.ts
index 7e3d672..fb7f6f4 100644
--- a/node_modules/@joystream/types/lib/augment/augment-api-errors.d.ts
+++ b/node_modules/@joystream/types/lib/augment/augment-api-errors.d.ts
@@ -509,6 +509,10 @@ declare module '@polkadot/api-base/types/errors' {
              * Invalid extrinsic call: Channel state bloat bond changed.
              **/
             ChannelStateBloatBondChanged: AugmentedError<ApiType>;
+            /**
+             * Channel Transfers are blocked during active AMM
+             **/
+            ChannelTransfersBlockedDuringActiveAmm: AugmentedError<ApiType>;
             /**
              * Channel Transfers are blocked during revenue splits
              **/
@@ -1607,6 +1611,10 @@ declare module '@polkadot/api-base/types/errors' {
              * Handle must be provided during registration.
              **/
             HandleMustBeProvidedDuringRegistration: AugmentedError<ApiType>;
+            /**
+             * Insufficient balance to cover payment.
+             **/
+            InsufficientBalanceToCoverPayment: AugmentedError<ApiType>;
             /**
              * Insufficient balance to cover stake.
              **/
@@ -2272,6 +2280,10 @@ declare module '@polkadot/api-base/types/errors' {
              * Cannot Deissue Token with outstanding accounts
              **/
             CannotDeissueTokenWithOutstandingAccounts: AugmentedError<ApiType>;
+            /**
+             * No Sale if Amm is active
+             **/
+            CannotInitSaleIfAmmIsActive: AugmentedError<ApiType>;
             /**
              * Attempt to issue in a split with zero allocation amount
              **/
@@ -2288,6 +2300,14 @@ declare module '@polkadot/api-base/types/errors' {
              * Attempt to participate in a split with zero token to stake
              **/
             CannotParticipateInSplitWithZeroAmount: AugmentedError<ApiType>;
+            /**
+             * Curve slope parameters below minimum allowed
+             **/
+            CurveSlopeParametersTooLow: AugmentedError<ApiType>;
+            /**
+             * Deadline constraint not satisfied
+             **/
+            DeadlineExpired: AugmentedError<ApiType>;
             /**
              * At least one of the members provided as part of InitialAllocation does not exist
              **/
@@ -2304,10 +2324,18 @@ declare module '@polkadot/api-base/types/errors' {
              * Insufficient JOY Balance to cover the transaction costs
              **/
             InsufficientJoyBalance: AugmentedError<ApiType>;
+            /**
+             * Creator token balance is insufficient
+             **/
+            InsufficientTokenBalance: AugmentedError<ApiType>;
             /**
              * Account's transferrable balance is insufficient to perform the transfer or initialize token sale
              **/
             InsufficientTransferrableBalance: AugmentedError<ApiType>;
+            /**
+             * Invalid bonding curve construction parameters
+             **/
+            InvalidCurveParameters: AugmentedError<ApiType>;
             /**
              * The amount of JOY to be transferred is not enough to keep the destination account alive
              **/
@@ -2329,6 +2357,11 @@ declare module '@polkadot/api-base/types/errors' {
              * Amount of tokens to purchase on sale exceeds the quantity of tokens still available on the sale
              **/
             NotEnoughTokensOnSale: AugmentedError<ApiType>;
+            /**
+             * ------ AMM ---------------------------------------------------------
+             * not in AMM state
+             **/
+            NotInAmmState: AugmentedError<ApiType>;
             /**
              * There are no remaining tokes to recover from the previous token sale.
              **/
@@ -2337,6 +2370,10 @@ declare module '@polkadot/api-base/types/errors' {
              * The token has no upcoming sale
              **/
             NoUpcomingSale: AugmentedError<ApiType>;
+            /**
+             * Oustanding AMM-provided supply constitutes too large percentage of the token's total supply
+             **/
+            OutstandingAmmProvidedSupplyTooLarge: AugmentedError<ApiType>;
             /**
              * Previous sale was still not finalized, finalize it first.
              **/
@@ -2412,6 +2449,11 @@ declare module '@polkadot/api-base/types/errors' {
              **/
             SaleUpperBoundQuantityIsZero: AugmentedError<ApiType>;
             /**
+             * Slippage tolerance constraint tolerance not satisfied
+             **/
+            SlippageToleranceExceeded: AugmentedError<ApiType>;
+            /**
+             * -------- Patronage --------------------------------------------------
              * Target Rate is higher than current patronage rate
              **/
             TargetPatronageRateIsHigherThanCurrentRate: AugmentedError<ApiType>;
@@ -2430,6 +2472,10 @@ declare module '@polkadot/api-base/types/errors' {
             /**
              * Transfer destination member id invalid
              **/
+            TooManyTransferOutputs: AugmentedError<ApiType>;
+            /**
+             * At least one of the transfer destinations is not an existing member id
+             **/
             TransferDestinationMemberDoesNotExist: AugmentedError<ApiType>;
             /**
              * User already participating in the revenue split
@@ -2439,6 +2485,10 @@ declare module '@polkadot/api-base/types/errors' {
              * User is not participating in any split
              **/
             UserNotParticipantingInAnySplit: AugmentedError<ApiType>;
+            /**
+             * Provided value for patronage is too big (yearly format)
+             **/
+            YearlyPatronageRateLimitExceeded: AugmentedError<ApiType>;
         };
         proposalsCodex: {
             /**
@@ -2529,6 +2579,10 @@ declare module '@polkadot/api-base/types/errors' {
              * Invalid working group budget capacity parameter
              **/
             InvalidWorkingGroupBudgetCapacity: AugmentedError<ApiType>;
+            /**
+             * Max yearly patronage rate cannot be zero
+             **/
+            MaxYearlyPatronageRateCannotBeZero: AugmentedError<ApiType>;
             /**
              * Require root origin in extrinsics
              **/
@@ -2684,6 +2738,10 @@ declare module '@polkadot/api-base/types/errors' {
             ZeroExactExecutionBlock: AugmentedError<ApiType>;
         };
         referendum: {
+            /**
+             * A vote cannot be cast from an account that already opted out of voting.
+             **/
+            AccountAlreadyOptedOutOfVoting: AugmentedError<ApiType>;
             /**
              * Trying to vote multiple time in the same cycle
              **/
@@ -3259,12 +3317,6 @@ declare module '@polkadot/api-base/types/errors' {
              **/
             ZeroTokensFunding: AugmentedError<ApiType>;
         };
-        sudo: {
-            /**
-             * Sender must be the Sudo account
-             **/
-            RequireSudo: AugmentedError<ApiType>;
-        };
         system: {
             /**
              * The origin filter prevent the call to be dispatched.
diff --git a/node_modules/@joystream/types/lib/augment/augment-api-events.d.ts b/node_modules/@joystream/types/lib/augment/augment-api-events.d.ts
index 557e0b3..e2dae49 100644
--- a/node_modules/@joystream/types/lib/augment/augment-api-events.d.ts
+++ b/node_modules/@joystream/types/lib/augment/augment-api-events.d.ts
@@ -1,8 +1,8 @@
 import type { ApiTypes } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Null, Option, Result, U8aFixed, Vec, bool, u128, u32, u64, u8 } from '@polkadot/types-codec';
 import type { ITuple } from '@polkadot/types-codec/types';
-import type { AccountId32, H256, Perquintill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchInfo, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpFinalityGrandpaAppPublic, SpRuntimeDispatchError } from '@polkadot/types/lookup';
+import type { AccountId32, H256, Permill } from '@polkadot/types/interfaces/runtime';
+import type { FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchInfo, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpFinalityGrandpaAppPublic, SpRuntimeDispatchError } from '@polkadot/types/lookup';
 declare module '@polkadot/api-base/types/events' {
     interface AugmentedEvents<ApiType extends ApiTypes> {
         appWorkingGroup: {
@@ -497,15 +497,14 @@ declare module '@polkadot/api-base/types/events' {
              **/
             ChannelOwnerRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
             ChannelPausedFeaturesUpdatedByModerator: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature>, Bytes]>;
-            ChannelPayoutsUpdated: AugmentedEvent<ApiType, [PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>]>;
+            ChannelPayoutsUpdated: AugmentedEvent<ApiType, [PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>, AccountId32]>;
             ChannelPrivilegeLevelUpdated: AugmentedEvent<ApiType, [u64, u8]>;
             ChannelRewardClaimedAndWithdrawn: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, u128, PalletContentChannelFundsDestination]>;
-            ChannelRewardUpdated: AugmentedEvent<ApiType, [u128, u64]>;
+            ChannelRewardUpdated: AugmentedEvent<ApiType, [u128, u128, u64]>;
             ChannelStateBloatBondValueUpdated: AugmentedEvent<ApiType, [u128]>;
             ChannelTransferAccepted: AugmentedEvent<ApiType, [u64, PalletContentTransferCommitmentParametersBTreeMap]>;
             ChannelUpdated: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, PalletContentChannelUpdateParametersRecord, BTreeSet<u64>]>;
             ChannelVisibilitySetByModerator: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, bool, Bytes]>;
-            CouncilRewardClaimed: AugmentedEvent<ApiType, [u64, u128]>;
             CreatorTokenIssued: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, u64]>;
             CuratorAdded: AugmentedEvent<ApiType, [u64, u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>]>;
             CuratorGroupCreated: AugmentedEvent<ApiType, [u64]>;
@@ -1355,9 +1354,9 @@ declare module '@polkadot/api-base/types/events' {
             LeaderInvitationQuotaUpdated: AugmentedEvent<ApiType, [u32]>;
             MemberAccountsUpdated: AugmentedEvent<ApiType, [u64, Option<AccountId32>, Option<AccountId32>]>;
             MemberCreated: AugmentedEvent<ApiType, [u64, PalletMembershipCreateMemberParameters, u32]>;
-            MemberInvited: AugmentedEvent<ApiType, [u64, PalletMembershipInviteMembershipParameters]>;
+            MemberInvited: AugmentedEvent<ApiType, [u64, PalletMembershipInviteMembershipParameters, u128]>;
             MemberProfileUpdated: AugmentedEvent<ApiType, [u64, Option<Bytes>, Option<Bytes>]>;
-            MemberRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
+            MemberRemarked: AugmentedEvent<ApiType, [u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
             MembershipBought: AugmentedEvent<ApiType, [u64, PalletMembershipBuyMembershipParameters, u32]>;
             MembershipGifted: AugmentedEvent<ApiType, [u64, PalletMembershipGiftMembershipParameters]>;
             MembershipPriceUpdated: AugmentedEvent<ApiType, [u128]>;
@@ -2150,6 +2149,28 @@ declare module '@polkadot/api-base/types/events' {
              * - ongoing policy
              **/
             AccountDustedBy: AugmentedEvent<ApiType, [u64, u64, AccountId32, PalletProjectTokenTransferPolicy]>;
+            /**
+             * AMM activated
+             * Params:
+             * - token id
+             * - member id
+             * - params for the bonding curve
+             **/
+            AmmActivated: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenAmmCurve]>;
+            /**
+             * AMM deactivated
+             * Params:
+             * - token id
+             * - member id
+             * - amm treasury amount burned upon deactivation
+             **/
+            AmmDeactivated: AugmentedEvent<ApiType, [u64, u64, u128]>;
+            /**
+             * Max patronage yearly rate updated
+             * Params:
+             * - new rate
+             **/
+            MaxYearlyPatronageRateUpdated: AugmentedEvent<ApiType, [Permill]>;
             /**
              * Member joined whitelist
              * Params:
@@ -2172,7 +2193,7 @@ declare module '@polkadot/api-base/types/events' {
              * - token identifier
              * - new patronage rate
              **/
-            PatronageRateDecreasedTo: AugmentedEvent<ApiType, [u64, Perquintill]>;
+            PatronageRateDecreasedTo: AugmentedEvent<ApiType, [u64, Permill]>;
             /**
              * Revenue Split finalized
              * Params:
@@ -2206,7 +2227,7 @@ declare module '@polkadot/api-base/types/events' {
              * - map containing validated outputs (amount indexed by (member_id + account existance))
              * - transfer's metadata
              **/
-            TokenAmountTransferred: AugmentedEvent<ApiType, [u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+            TokenAmountTransferred: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
             /**
              * Token amount transferred by issuer
              * Params:
@@ -2217,7 +2238,7 @@ declare module '@polkadot/api-base/types/events' {
              * (account_id + account existance)
              * - transfer's metadata
              **/
-            TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+            TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
             /**
              * Token Deissued
              * Params:
@@ -2249,6 +2270,15 @@ declare module '@polkadot/api-base/types/events' {
              * - token sale metadata
              **/
             TokenSaleInitialized: AugmentedEvent<ApiType, [u64, u32, PalletProjectTokenTokenSale, Option<Bytes>]>;
+            /**
+             * Tokens Bought on AMM
+             * Params:
+             * - token id
+             * - member id
+             * - amount of CRT minted
+             * - amount of JOY deposited into curve treasury
+             **/
+            TokensBoughtOnAmm: AugmentedEvent<ApiType, [u64, u64, u128, u128]>;
             /**
              * Tokens Burned
              * Params:
@@ -2266,6 +2296,15 @@ declare module '@polkadot/api-base/types/events' {
              * - buyer's member id
              **/
             TokensPurchasedOnSale: AugmentedEvent<ApiType, [u64, u32, u128, u64]>;
+            /**
+             * Tokens Sold on AMM
+             * Params:
+             * - token id
+             * - member id
+             * - amount of CRT burned
+             * - amount of JOY withdrawn from curve treasury
+             **/
+            TokensSoldOnAmm: AugmentedEvent<ApiType, [u64, u64, u128, u128]>;
             /**
              * Transfer Policy Changed To Permissionless
              * Params:
@@ -2372,6 +2411,10 @@ declare module '@polkadot/api-base/types/events' {
             Voted: AugmentedEvent<ApiType, [u64, u32, PalletProposalsEngineVoteKind, Bytes]>;
         };
         referendum: {
+            /**
+             * Account permanently opted out of voting in referendum.
+             **/
+            AccountOptedOutOfVoting: AugmentedEvent<ApiType, [AccountId32]>;
             /**
              * Referendum ended and winning option was selected
              **/
@@ -2956,26 +2999,6 @@ declare module '@polkadot/api-base/types/events' {
              **/
             WorkingGroupBudgetFunded: AugmentedEvent<ApiType, [u64, u128, Bytes]>;
         };
-        sudo: {
-            /**
-             * The \[sudoer\] just switched identity; the old key is supplied if one existed.
-             **/
-            KeyChanged: AugmentedEvent<ApiType, [oldSudoer: Option<AccountId32>], {
-                oldSudoer: Option<AccountId32>;
-            }>;
-            /**
-             * A sudo just took place. \[result\]
-             **/
-            Sudid: AugmentedEvent<ApiType, [sudoResult: Result<Null, SpRuntimeDispatchError>], {
-                sudoResult: Result<Null, SpRuntimeDispatchError>;
-            }>;
-            /**
-             * A sudo just took place. \[result\]
-             **/
-            SudoAsDone: AugmentedEvent<ApiType, [sudoResult: Result<Null, SpRuntimeDispatchError>], {
-                sudoResult: Result<Null, SpRuntimeDispatchError>;
-            }>;
-        };
         system: {
             /**
              * `:code` was updated.
diff --git a/node_modules/@joystream/types/lib/augment/augment-api-query.d.ts b/node_modules/@joystream/types/lib/augment/augment-api-query.d.ts
index 51a9e80..e89ee70 100644
--- a/node_modules/@joystream/types/lib/augment/augment-api-query.d.ts
+++ b/node_modules/@joystream/types/lib/augment/augment-api-query.d.ts
@@ -946,10 +946,30 @@ declare module '@polkadot/api-base/types/storage' {
              * Double map TokenId x MemberId => AccountData for managing account data
              **/
             accountInfoByTokenAndMember: AugmentedQuery<ApiType, (arg1: u64 | AnyNumber | Uint8Array, arg2: u64 | AnyNumber | Uint8Array) => Observable<PalletProjectTokenAccountData>, [u64, u64]>;
+            /**
+             * AMM buy transaction fee percentage
+             **/
+            ammBuyTxFees: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+            /**
+             * Percentage threshold for deactivating the amm functionality
+             **/
+            ammDeactivationThreshold: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+            /**
+             * AMM sell transaction fee percentage
+             **/
+            ammSellTxFees: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
             /**
              * Bloat Bond value used during account creation
              **/
             bloatBond: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+            /**
+             * Max patronage rate allowed
+             **/
+            maxYearlyPatronageRate: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+            /**
+             * Minimum slope parameters allowed for AMM curve
+             **/
+            minAmmSlopeParameter: AugmentedQuery<ApiType, () => Observable<u128>, []>;
             /**
              * Minimum revenue split duration constraint
              **/
@@ -1034,6 +1054,10 @@ declare module '@polkadot/api-base/types/storage' {
             randomMaterial: AugmentedQuery<ApiType, () => Observable<Vec<H256>>, []>;
         };
         referendum: {
+            /**
+             * Accounts that permanently opted out of voting in referendum.
+             **/
+            accountsOptedOut: AugmentedQuery<ApiType, (arg: AccountId32 | string | Uint8Array) => Observable<Null>, [AccountId32]>;
             /**
              * Current referendum stage.
              **/
@@ -1454,12 +1478,6 @@ declare module '@polkadot/api-base/types/storage' {
              **/
             workerById: AugmentedQuery<ApiType, (arg: u64 | AnyNumber | Uint8Array) => Observable<Option<PalletWorkingGroupGroupWorker>>, [u64]>;
         };
-        sudo: {
-            /**
-             * The `AccountId` of the sudo key.
-             **/
-            key: AugmentedQuery<ApiType, () => Observable<Option<AccountId32>>, []>;
-        };
         system: {
             /**
              * The full account information for a particular account ID.
diff --git a/node_modules/@joystream/types/lib/augment/augment-api-tx.d.ts b/node_modules/@joystream/types/lib/augment/augment-api-tx.d.ts
index d14be1e..cd2cee3 100644
--- a/node_modules/@joystream/types/lib/augment/augment-api-tx.d.ts
+++ b/node_modules/@joystream/types/lib/augment/augment-api-tx.d.ts
@@ -2,7 +2,7 @@ import type { ApiTypes } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Compact, Option, U8aFixed, Vec, WrapperKeepOpaque, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, IMethod, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, Call, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenMerkleProof, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransfersPayment, PalletProjectTokenTransfersPaymentWithVesting, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusSlotsEquivocationProof, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeHeader, SpSessionMembershipProof } from '@polkadot/types/lookup';
+import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusSlotsEquivocationProof, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeHeader, SpSessionMembershipProof } from '@polkadot/types/lookup';
 declare module '@polkadot/api-base/types/submittable' {
     interface AugmentedSubmittables<ApiType extends ApiTypes> {
         appWorkingGroup: {
@@ -700,6 +700,19 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             acceptIncomingOffer: AugmentedSubmittable<(videoId: u64 | AnyNumber | Uint8Array, witnessPrice: Option<u128> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Option<u128>]>;
+            /**
+             * Activate Amm functionality for token
+             **/
+            activateAmm: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | {
+                Curator: any;
+            } | {
+                Member: any;
+            } | {
+                Lead: any;
+            } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, params: PalletProjectTokenAmmParams | {
+                slope?: any;
+                intercept?: any;
+            } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, PalletProjectTokenAmmParams]>;
             /**
              * Add curator to curator group under given `curator_group_id`
              *
@@ -1011,7 +1024,20 @@ declare module '@polkadot/api-base/types/submittable' {
                 Member: any;
             } | {
                 Lead: any;
-            } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, outputs: PalletProjectTokenTransfersPaymentWithVesting, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, PalletProjectTokenTransfersPaymentWithVesting, Bytes]>;
+            } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>> | ([u64 | AnyNumber | Uint8Array, PalletProjectTokenPaymentWithVesting | {
+                amount?: any;
+                vestingSchedule?: any;
+            } | string | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>>, Bytes]>;
+            /**
+             * Deactivate Amm functionality for token
+             **/
+            deactivateAmm: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | {
+                Curator: any;
+            } | {
+                Member: any;
+            } | {
+                Lead: any;
+            } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64]>;
             /**
              * Deissue channel's creator token
              *
@@ -1692,7 +1718,7 @@ declare module '@polkadot/api-base/types/submittable' {
                 minCashoutAllowed?: any;
                 maxCashoutAllowed?: any;
                 channelCashoutsEnabled?: any;
-            } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentUpdateChannelPayoutsParametersRecord]>;
+            } | string | Uint8Array, uploaderAccount: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentUpdateChannelPayoutsParametersRecord, AccountId32]>;
             /**
              * Extrinsic for updating channel privilege level (requires lead access)
              *
@@ -3302,7 +3328,7 @@ declare module '@polkadot/api-base/types/submittable' {
              * - O(1) doesn't depend on the state or parameters
              * # </weight>
              **/
-            memberRemark: AugmentedSubmittable<(memberId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
+            memberRemark: AugmentedSubmittable<(memberId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array, payment: Option<ITuple<[AccountId32, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
             /**
              * Remove staking account for a member.
              *
@@ -4638,6 +4664,21 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             burn: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128]>;
+            /**
+             * Mint desired `token_id` amount into user account via JOY exchnage
+             * Preconditions
+             * - origin, member_id pair must be a valid authentication pair
+             * - token_id must exist
+             * - user usable JOY balance must be enough for buying (+ existential deposit)
+             * - slippage tolerance constraints respected if provided
+             * - token total supply and amount value must be s.t. `eval` function doesn't overflow
+             *
+             * Postconditions
+             * - `amount` CRT minted into account (which is created if necessary with existential deposit transferred to it)
+             * - respective JOY amount transferred from user balance to amm treasury account
+             * - event deposited
+             **/
+            buyOnAmm: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array, slippageTolerance: Option<ITuple<[Permill, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128, Option<ITuple<[Permill, u128]>>]>;
             /**
              * Allow any user to remove an account
              *
@@ -4796,6 +4837,24 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             purchaseTokensOnSale: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128]>;
+            /**
+             * Burn desired `token_id` amount from user account and get JOY from treasury account
+             * Preconditions
+             * - origin, member_id pair must be a valid authentication pair
+             * - token_id must exist
+             * - token_id, member_id must be valid account coordinates
+             * - user usable CRT balance must be at least `amount`
+             * - slippage tolerance constraints respected if provided
+             * - token total supply and amount value must be s.t. `eval` function doesn't overflow
+             * - amm treasury account must have sufficient JOYs for the operation
+             *
+             * Postconditions
+             * - `amount` burned from user account
+             * - total supply decreased by amount
+             * - respective JOY amount transferred from amm treasury account to user account
+             * - event deposited
+             **/
+            sellOnAmm: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array, slippageTolerance: Option<ITuple<[Permill, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128, Option<ITuple<[Permill, u128]>>]>;
             /**
              * Allow to transfer from `src_member_id` account to the various `outputs` beneficiaries
              * in the specified amounts.
@@ -4824,7 +4883,8 @@ declare module '@polkadot/api-base/types/submittable' {
              * - `O(T)` - from the the generated weights
              * # </weight>
              **/
-            transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: PalletProjectTokenTransfersPayment, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, PalletProjectTokenTransfersPayment, Bytes]>;
+            transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, u128]>> | ([u64 | AnyNumber | Uint8Array, u128 | AnyNumber | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Vec<ITuple<[u64, u128]>>, Bytes]>;
+            updateMaxYearlyPatronageRate: AugmentedSubmittable<(rate: Permill | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Permill]>;
         };
         proposalsCodex: {
             /**
@@ -4894,6 +4954,8 @@ declare module '@polkadot/api-base/types/submittable' {
                 UpdateGlobalNftLimit: any;
             } | {
                 UpdateChannelPayouts: any;
+            } | {
+                UpdateMaxYearlyPatronageRate: any;
             } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
         };
         proposalsDiscussion: {
@@ -5007,6 +5069,18 @@ declare module '@polkadot/api-base/types/submittable' {
             vote: AugmentedSubmittable<(voterId: u64 | AnyNumber | Uint8Array, proposalId: u32 | AnyNumber | Uint8Array, vote: PalletProposalsEngineVoteKind | 'Approve' | 'Reject' | 'Slash' | 'Abstain' | number | Uint8Array, rationale: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u32, PalletProposalsEngineVoteKind, Bytes]>;
         };
         referendum: {
+            /**
+             * Permanently opt out of voting from a given account.
+             *
+             * # <weight>
+             *
+             * ## weight
+             * `O (1)`
+             * - db:
+             * - `O(1)` doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            optOutOfVoting: AugmentedSubmittable<() => SubmittableExtrinsic<ApiType>, []>;
             /**
              * Release a locked stake.
              * # <weight>
@@ -5800,7 +5874,8 @@ declare module '@polkadot/api-base/types/submittable' {
              **/
             setStorageOperatorMetadata: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, storageBucketId: u64 | AnyNumber | Uint8Array, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Bytes]>;
             /**
-             * Create a dynamic bag. Development mode.
+             * Deposit a StorageOperatorRemarked event
+             * containing a generic message.
              * <weight>
              *
              * ## Weight
@@ -5811,16 +5886,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             storageOperatorRemark: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, storageBucketId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Bytes]>;
-            /**
-             * Upload new data objects. Development mode.
-             **/
-            sudoUploadDataObjects: AugmentedSubmittable<(params: PalletStorageUploadParametersRecord | {
-                bagId?: any;
-                objectCreationList?: any;
-                stateBloatBondSourceAccountId?: any;
-                expectedDataSizeFee?: any;
-                expectedDataObjectStateBloatBond?: any;
-            } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletStorageUploadParametersRecord]>;
             /**
              * Add and remove hashes to the current blacklist.
              * <weight>
@@ -6257,61 +6322,6 @@ declare module '@polkadot/api-base/types/submittable' {
              **/
             workerRemark: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
         };
-        sudo: {
-            /**
-             * Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo
-             * key.
-             *
-             * The dispatch origin for this call must be _Signed_.
-             *
-             * # <weight>
-             * - O(1).
-             * - Limited storage reads.
-             * - One DB change.
-             * # </weight>
-             **/
-            setKey: AugmentedSubmittable<(updated: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [AccountId32]>;
-            /**
-             * Authenticates the sudo key and dispatches a function call with `Root` origin.
-             *
-             * The dispatch origin for this call must be _Signed_.
-             *
-             * # <weight>
-             * - O(1).
-             * - Limited storage reads.
-             * - One DB write (event).
-             * - Weight of derivative `call` execution + 10,000.
-             * # </weight>
-             **/
-            sudo: AugmentedSubmittable<(call: Call | IMethod | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [Call]>;
-            /**
-             * Authenticates the sudo key and dispatches a function call with `Signed` origin from
-             * a given account.
-             *
-             * The dispatch origin for this call must be _Signed_.
-             *
-             * # <weight>
-             * - O(1).
-             * - Limited storage reads.
-             * - One DB write (event).
-             * - Weight of derivative `call` execution + 10,000.
-             * # </weight>
-             **/
-            sudoAs: AugmentedSubmittable<(who: AccountId32 | string | Uint8Array, call: Call | IMethod | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [AccountId32, Call]>;
-            /**
-             * Authenticates the sudo key and dispatches a function call with `Root` origin.
-             * This function does not check the weight of the call, and instead allows the
-             * Sudo user to specify the weight of the call.
-             *
-             * The dispatch origin for this call must be _Signed_.
-             *
-             * # <weight>
-             * - O(1).
-             * - The weight of this call is defined by the caller.
-             * # </weight>
-             **/
-            sudoUncheckedWeight: AugmentedSubmittable<(call: Call | IMethod | string | Uint8Array, weight: u64 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Call, u64]>;
-        };
         system: {
             /**
              * A dispatch that will fill the block weight up to the given ratio.
diff --git a/node_modules/@joystream/types/lib/augment/lookup.d.ts b/node_modules/@joystream/types/lib/augment/lookup.d.ts
index ae9bbdb..a4ee928 100644
--- a/node_modules/@joystream/types/lib/augment/lookup.d.ts
+++ b/node_modules/@joystream/types/lib/augment/lookup.d.ts
@@ -363,23 +363,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup57: pallet_sudo::pallet::Event<T>
-     **/
-    PalletSudoEvent: {
-        _enum: {
-            Sudid: {
-                sudoResult: string;
-            };
-            KeyChanged: {
-                oldSudoer: string;
-            };
-            SudoAsDone: {
-                sudoResult: string;
-            };
-        };
-    };
-    /**
-     * Lookup59: pallet_bags_list::pallet::Event<T, I>
+     * Lookup57: pallet_bags_list::pallet::Event<T, I>
      **/
     PalletBagsListEvent: {
         _enum: {
@@ -395,7 +379,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup60: pallet_vesting::pallet::Event<T>
+     * Lookup58: pallet_vesting::pallet::Event<T>
      **/
     PalletVestingEvent: {
         _enum: {
@@ -409,7 +393,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup61: pallet_multisig::pallet::Event<T>
+     * Lookup59: pallet_multisig::pallet::Event<T>
      **/
     PalletMultisigEvent: {
         _enum: {
@@ -440,14 +424,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup62: pallet_multisig::Timepoint<BlockNumber>
+     * Lookup60: pallet_multisig::Timepoint<BlockNumber>
      **/
     PalletMultisigTimepoint: {
         height: string;
         index: string;
     };
     /**
-     * Lookup63: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
+     * Lookup61: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletCouncilRawEvent: {
         _enum: {
@@ -473,7 +457,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup65: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup63: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -484,21 +468,22 @@ declare const _default: {
             VoteCast: string;
             VoteRevealed: string;
             StakeReleased: string;
+            AccountOptedOutOfVoting: string;
         };
     };
     /**
-     * Lookup66: pallet_referendum::Instance1
+     * Lookup64: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: string;
     /**
-     * Lookup68: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup66: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: string;
         votePower: string;
     };
     /**
-     * Lookup69: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup67: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
@@ -522,7 +507,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup70: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup68: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: string;
@@ -532,7 +517,7 @@ declare const _default: {
         referrerId: string;
     };
     /**
-     * Lookup73: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup71: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: string;
@@ -542,7 +527,7 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup74: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup72: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: string;
@@ -552,7 +537,7 @@ declare const _default: {
         isFoundingMember: string;
     };
     /**
-     * Lookup75: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup73: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: string;
@@ -565,7 +550,7 @@ declare const _default: {
         applyRootAccountInvitationLock: string;
     };
     /**
-     * Lookup77: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup78: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -589,7 +574,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup78: pallet_forum::PrivilegedActor<T>
+     * Lookup79: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -598,7 +583,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup79: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup80: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: string;
@@ -606,7 +591,7 @@ declare const _default: {
         postId: string;
     };
     /**
-     * Lookup84: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup85: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -614,7 +599,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup85: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup86: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -644,7 +629,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup86: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup87: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: string;
@@ -656,7 +641,7 @@ declare const _default: {
         fundingType: string;
     };
     /**
-     * Lookup87: pallet_bounty::BountyActor<MemberId>
+     * Lookup88: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -665,7 +650,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup88: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup89: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -674,7 +659,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup89: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup90: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -688,7 +673,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup91: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup92: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -702,7 +687,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup94: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup95: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletUtilityRawEvent: {
         _enum: {
@@ -713,19 +698,19 @@ declare const _default: {
         };
     };
     /**
-     * Lookup95: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup96: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: string[];
     };
     /**
-     * Lookup96: pallet_common::BalanceKind
+     * Lookup97: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: string[];
     };
     /**
-     * Lookup97: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup98: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -755,7 +740,6 @@ declare const _default: {
             VideoAssetsDeletedByModerator: string;
             ChannelPayoutsUpdated: string;
             ChannelRewardUpdated: string;
-            CouncilRewardClaimed: string;
             EnglishAuctionStarted: string;
             OpenAuctionStarted: string;
             NftIssued: string;
@@ -787,7 +771,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup98: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup99: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -797,7 +781,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup99: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup100: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: string;
@@ -816,26 +800,26 @@ declare const _default: {
         channelStateBloatBond: string;
     };
     /**
-     * Lookup103: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup104: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
         _enum: string[];
     };
     /**
-     * Lookup110: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup111: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: string[];
     };
     /**
-     * Lookup113: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup114: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: string;
         amount: string;
     };
     /**
-     * Lookup114: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup115: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -844,7 +828,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup115: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup116: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -853,14 +837,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup116: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup117: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: string;
         transferParams: string;
     };
     /**
-     * Lookup117: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup118: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: string;
@@ -868,21 +852,21 @@ declare const _default: {
         transferId: string;
     };
     /**
-     * Lookup118: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup119: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: string;
         blockNumberPeriod: string;
     };
     /**
-     * Lookup119: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup120: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: string;
         lastUpdated: string;
     };
     /**
-     * Lookup120: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup121: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: string;
@@ -894,7 +878,7 @@ declare const _default: {
         minBidStep: string;
     };
     /**
-     * Lookup122: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup123: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: string;
@@ -904,7 +888,7 @@ declare const _default: {
         bidLockDuration: string;
     };
     /**
-     * Lookup123: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup124: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: string;
@@ -913,7 +897,7 @@ declare const _default: {
         initTransactionalStatus: string;
     };
     /**
-     * Lookup124: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup125: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -925,7 +909,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup126: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup127: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: string;
@@ -937,14 +921,14 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup127: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup128: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: string;
         expectedDataSizeFee: string;
     };
     /**
-     * Lookup129: pallet_storage::DataObjectCreationParameters
+     * Lookup130: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -954,14 +938,14 @@ declare const _default: {
         ipfsContentId: string;
     };
     /**
-     * Lookup130: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup131: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: string;
         distributionBucketIndex: string;
     };
     /**
-     * Lookup137: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup138: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: string;
@@ -972,7 +956,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup139: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup140: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: string;
@@ -983,7 +967,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup141: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup142: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: string;
@@ -994,7 +978,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup144: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup145: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1009,7 +993,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup148: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup149: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: string;
@@ -1017,7 +1001,7 @@ declare const _default: {
         transferId: string;
     };
     /**
-     * Lookup149: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>
+     * Lookup150: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: string;
@@ -1027,16 +1011,15 @@ declare const _default: {
         channelCashoutsEnabled: string;
     };
     /**
-     * Lookup150: pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>
+     * Lookup151: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
-        uploaderAccount: string;
         objectCreationParams: string;
         expectedDataSizeFee: string;
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup154: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup155: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1045,13 +1028,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup155: pallet_content::types::NftLimitPeriod
+     * Lookup156: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: string[];
     };
     /**
-     * Lookup156: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup157: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1100,7 +1083,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup157: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup158: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: string;
@@ -1110,7 +1093,7 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup158: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup159: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1119,7 +1102,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup159: pallet_storage::StaticBagId
+     * Lookup160: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1128,7 +1111,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup160: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup161: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1137,7 +1120,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup161: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup162: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: string;
@@ -1149,7 +1132,7 @@ declare const _default: {
         distributionBuckets: string;
     };
     /**
-     * Lookup164: pallet_storage::Voucher
+     * Lookup165: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: string;
@@ -1158,13 +1141,13 @@ declare const _default: {
         objectsUsed: string;
     };
     /**
-     * Lookup165: pallet_storage::DynamicBagType
+     * Lookup166: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: string[];
     };
     /**
-     * Lookup169: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>>
+     * Lookup170: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
@@ -1186,10 +1169,15 @@ declare const _default: {
             TokenSaleFinalized: string;
             TransferPolicyChangedToPermissionless: string;
             TokensBurned: string;
+            AmmActivated: string;
+            TokensBoughtOnAmm: string;
+            TokensSoldOnAmm: string;
+            AmmDeactivated: string;
+            MaxYearlyPatronageRateUpdated: string;
         };
     };
     /**
-     * Lookup170: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup171: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1198,7 +1186,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup171: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup172: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: string;
@@ -1208,14 +1196,14 @@ declare const _default: {
         revenueSplitRate: string;
     };
     /**
-     * Lookup172: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup173: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: string;
         vestingScheduleParams: string;
     };
     /**
-     * Lookup173: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup174: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: string;
@@ -1223,7 +1211,7 @@ declare const _default: {
         cliffAmountPercentage: string;
     };
     /**
-     * Lookup176: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup177: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1232,14 +1220,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup177: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup178: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: string;
         payload: string;
     };
     /**
-     * Lookup178: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup179: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: string;
@@ -1247,7 +1235,11 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup185: pallet_project_token::types::Validated<MemberId>
+     * Lookup185: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     **/
+    PalletProjectTokenTransfers: string;
+    /**
+     * Lookup186: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1256,21 +1248,21 @@ declare const _default: {
         };
     };
     /**
-     * Lookup186: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup187: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: string;
         vestingCleanupCandidate: string;
     };
     /**
-     * Lookup187: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup188: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: string;
         vestingSchedule: string;
     };
     /**
-     * Lookup189: pallet_project_token::types::VestingSource
+     * Lookup190: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1280,7 +1272,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup193: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup194: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: string;
@@ -1295,7 +1287,15 @@ declare const _default: {
         autoFinalize: string;
     };
     /**
-     * Lookup195: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup195: pallet_project_token::types::AmmCurve<Balance>
+     **/
+    PalletProjectTokenAmmCurve: {
+        slope: string;
+        intercept: string;
+        providedSupply: string;
+    };
+    /**
+     * Lookup196: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1308,7 +1308,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup196: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1318,7 +1318,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1332,13 +1332,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: string[];
     };
     /**
-     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup200: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1349,13 +1349,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup200: pallet_proposals_engine::types::VoteKind
+     * Lookup201: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: string[];
     };
     /**
-     * Lookup201: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup202: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1367,7 +1367,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup202: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup203: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1376,7 +1376,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup203: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup204: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1384,7 +1384,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup204: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup205: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: string;
@@ -1394,7 +1394,7 @@ declare const _default: {
         exactExecutionBlock: string;
     };
     /**
-     * Lookup205: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>
+     * Lookup206: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1421,17 +1421,18 @@ declare const _default: {
             VetoProposal: string;
             UpdateGlobalNftLimit: string;
             UpdateChannelPayouts: string;
+            UpdateMaxYearlyPatronageRate: string;
         };
     };
     /**
-     * Lookup207: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup208: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: string;
         amount: string;
     };
     /**
-     * Lookup208: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup209: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: string;
@@ -1440,14 +1441,14 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup209: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup210: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: string;
         leavingUnstakingPeriod: string;
     };
     /**
-     * Lookup210: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup211: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: string;
@@ -1455,7 +1456,7 @@ declare const _default: {
         workingGroup: string;
     };
     /**
-     * Lookup211: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup212: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: string;
@@ -1463,7 +1464,7 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup212: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup213: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1495,13 +1496,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup216: pallet_working_group::types::OpeningType
+     * Lookup217: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: string[];
     };
     /**
-     * Lookup217: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup218: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: string;
@@ -1512,24 +1513,24 @@ declare const _default: {
         stakeParameters: string;
     };
     /**
-     * Lookup218: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup219: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: string;
         stakingAccountId: string;
     };
     /**
-     * Lookup219: pallet_working_group::Instance1
+     * Lookup220: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: string;
     /**
-     * Lookup220: pallet_working_group::types::RewardPaymentType
+     * Lookup221: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: string[];
     };
     /**
-     * Lookup221: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup222: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1561,11 +1562,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup222: pallet_working_group::Instance2
+     * Lookup223: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: string;
     /**
-     * Lookup223: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1597,11 +1598,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup224: pallet_working_group::Instance3
+     * Lookup225: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: string;
     /**
-     * Lookup225: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup226: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1633,11 +1634,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup226: pallet_working_group::Instance4
+     * Lookup227: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: string;
     /**
-     * Lookup227: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup228: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1669,11 +1670,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup228: pallet_working_group::Instance5
+     * Lookup229: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: string;
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1705,11 +1706,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup230: pallet_working_group::Instance6
+     * Lookup231: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: string;
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup232: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1741,11 +1742,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup232: pallet_working_group::Instance7
+     * Lookup233: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: string;
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1777,11 +1778,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup234: pallet_working_group::Instance8
+     * Lookup235: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: string;
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1813,11 +1814,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup236: pallet_working_group::Instance9
+     * Lookup237: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: string;
     /**
-     * Lookup237: frame_system::Phase
+     * Lookup238: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1827,14 +1828,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup241: frame_system::LastRuntimeUpgradeInfo
+     * Lookup242: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: string;
         specName: string;
     };
     /**
-     * Lookup244: frame_system::pallet::Call<T>
+     * Lookup245: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1872,7 +1873,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup247: frame_system::limits::BlockWeights
+     * Lookup248: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: string;
@@ -1880,7 +1881,7 @@ declare const _default: {
         perClass: string;
     };
     /**
-     * Lookup248: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup249: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportWeightsPerDispatchClassWeightsPerClass: {
         normal: string;
@@ -1888,7 +1889,7 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup249: frame_system::limits::WeightsPerClass
+     * Lookup250: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: string;
@@ -1897,13 +1898,13 @@ declare const _default: {
         reserved: string;
     };
     /**
-     * Lookup250: frame_system::limits::BlockLength
+     * Lookup251: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: string;
     };
     /**
-     * Lookup251: frame_support::weights::PerDispatchClass<T>
+     * Lookup252: frame_support::weights::PerDispatchClass<T>
      **/
     FrameSupportWeightsPerDispatchClassU32: {
         normal: string;
@@ -1911,14 +1912,14 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup252: frame_support::weights::RuntimeDbWeight
+     * Lookup253: frame_support::weights::RuntimeDbWeight
      **/
     FrameSupportWeightsRuntimeDbWeight: {
         read: string;
         write: string;
     };
     /**
-     * Lookup253: sp_version::RuntimeVersion
+     * Lookup254: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: string;
@@ -1931,13 +1932,13 @@ declare const _default: {
         stateVersion: string;
     };
     /**
-     * Lookup259: frame_system::pallet::Error<T>
+     * Lookup260: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: string[];
     };
     /**
-     * Lookup260: pallet_utility::pallet::Call<T>
+     * Lookup261: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -1961,7 +1962,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup263: pallet_babe::pallet::Call<T>
+     * Lookup264: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -1979,7 +1980,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup264: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup265: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: string;
@@ -1988,7 +1989,7 @@ declare const _default: {
         secondHeader: string;
     };
     /**
-     * Lookup265: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup266: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: string;
@@ -1998,15 +1999,15 @@ declare const _default: {
         digest: string;
     };
     /**
-     * Lookup266: sp_runtime::traits::BlakeTwo256
+     * Lookup267: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: string;
     /**
-     * Lookup267: sp_consensus_babe::app::Public
+     * Lookup268: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: string;
     /**
-     * Lookup269: sp_session::MembershipProof
+     * Lookup270: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: string;
@@ -2014,7 +2015,7 @@ declare const _default: {
         validatorCount: string;
     };
     /**
-     * Lookup270: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup271: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2026,13 +2027,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup271: sp_consensus_babe::AllowedSlots
+     * Lookup272: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: string[];
     };
     /**
-     * Lookup272: pallet_timestamp::pallet::Call<T>
+     * Lookup273: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2042,7 +2043,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup274: pallet_authorship::pallet::Call<T>
+     * Lookup275: pallet_authorship::pallet::Call<T>
      **/
     PalletAuthorshipCall: {
         _enum: {
@@ -2052,7 +2053,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup276: pallet_balances::pallet::Call<T, I>
+     * Lookup277: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2085,7 +2086,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup277: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup278: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2109,7 +2110,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup278: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup279: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: string;
@@ -2117,7 +2118,7 @@ declare const _default: {
         round: string;
     };
     /**
-     * Lookup279: joystream_node_runtime::NposSolution16
+     * Lookup280: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: string;
@@ -2138,7 +2139,7 @@ declare const _default: {
         votes16: string;
     };
     /**
-     * Lookup330: sp_npos_elections::ElectionScore
+     * Lookup331: sp_npos_elections::ElectionScore
      **/
     SpNposElectionsElectionScore: {
         minimalStake: string;
@@ -2146,14 +2147,14 @@ declare const _default: {
         sumStakeSquared: string;
     };
     /**
-     * Lookup331: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup332: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup335: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup336: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: string;
@@ -2443,31 +2444,7 @@ declare const _default: {
      **/
     SpCoreSr25519Signature: string;
     /**
-     * Lookup370: pallet_sudo::pallet::Call<T>
-     **/
-    PalletSudoCall: {
-        _enum: {
-            sudo: {
-                call: string;
-            };
-            sudo_unchecked_weight: {
-                call: string;
-                weight: string;
-            };
-            set_key: {
-                _alias: {
-                    new_: string;
-                };
-                new_: string;
-            };
-            sudo_as: {
-                who: string;
-                call: string;
-            };
-        };
-    };
-    /**
-     * Lookup371: pallet_bags_list::pallet::Call<T, I>
+     * Lookup370: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2480,7 +2457,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup372: pallet_vesting::pallet::Call<T>
+     * Lookup371: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2504,7 +2481,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup373: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup372: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: string;
@@ -2512,7 +2489,7 @@ declare const _default: {
         startingBlock: string;
     };
     /**
-     * Lookup374: pallet_multisig::pallet::Call<T>
+     * Lookup373: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2544,7 +2521,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup377: pallet_council::Call<T>
+     * Lookup376: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2595,7 +2572,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup378: pallet_referendum::Call<T, I>
+     * Lookup377: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2608,10 +2585,11 @@ declare const _default: {
                 voteOptionId: string;
             };
             release_vote_stake: string;
+            opt_out_of_voting: string;
         };
     };
     /**
-     * Lookup379: pallet_membership::Call<T>
+     * Lookup378: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2672,6 +2650,7 @@ declare const _default: {
             member_remark: {
                 memberId: string;
                 msg: string;
+                payment: string;
             };
             create_member: {
                 params: string;
@@ -2679,7 +2658,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup380: pallet_forum::Call<T>
+     * Lookup379: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2776,7 +2755,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup381: pallet_constitution::Call<T>
+     * Lookup380: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2786,7 +2765,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup382: pallet_bounty::Call<T>
+     * Lookup381: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2862,7 +2841,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup384: pallet_content::Call<T>
+     * Lookup383: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -2970,6 +2949,7 @@ declare const _default: {
             };
             update_channel_payouts: {
                 params: string;
+                uploaderAccount: string;
             };
             claim_channel_reward: {
                 actor: string;
@@ -3172,17 +3152,26 @@ declare const _default: {
                 actor: string;
                 channelId: string;
             };
+            activate_amm: {
+                actor: string;
+                channelId: string;
+                params: string;
+            };
+            deactivate_amm: {
+                actor: string;
+                channelId: string;
+            };
         };
     };
     /**
-     * Lookup385: pallet_content::types::ChannelBagWitness
+     * Lookup384: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: string;
         distributionBucketsNum: string;
     };
     /**
-     * Lookup387: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup386: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3192,13 +3181,13 @@ declare const _default: {
         side: string;
     };
     /**
-     * Lookup388: pallet_common::merkle_tree::Side
+     * Lookup387: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: string[];
     };
     /**
-     * Lookup389: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup388: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: string;
@@ -3206,7 +3195,7 @@ declare const _default: {
         reason: string;
     };
     /**
-     * Lookup390: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup389: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: string;
@@ -3214,7 +3203,7 @@ declare const _default: {
         newOwner: string;
     };
     /**
-     * Lookup391: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup390: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: string;
@@ -3226,11 +3215,14 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup392: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup394: pallet_project_token::types::AmmParams<Balance>
      **/
-    PalletProjectTokenTransfersPaymentWithVesting: string;
+    PalletProjectTokenAmmParams: {
+        slope: string;
+        intercept: string;
+    };
     /**
-     * Lookup396: pallet_storage::Call<T>
+     * Lookup395: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3364,9 +3356,6 @@ declare const _default: {
                 bucketId: string;
                 metadata: string;
             };
-            sudo_upload_data_objects: {
-                params: string;
-            };
             storage_operator_remark: {
                 workerId: string;
                 storageBucketId: string;
@@ -3380,7 +3369,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup397: pallet_project_token::Call<T>
+     * Lookup396: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
@@ -3418,30 +3407,35 @@ declare const _default: {
                 tokenId: string;
                 memberId: string;
             };
+            buy_on_amm: {
+                tokenId: string;
+                memberId: string;
+                amount: string;
+                slippageTolerance: string;
+            };
+            sell_on_amm: {
+                tokenId: string;
+                memberId: string;
+                amount: string;
+                slippageTolerance: string;
+            };
+            update_max_yearly_patronage_rate: {
+                rate: string;
+            };
         };
     };
     /**
-     * Lookup398: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::Payment<Balance>>
-     **/
-    PalletProjectTokenTransfersPayment: string;
-    /**
-     * Lookup399: pallet_project_token::types::Payment<Balance>
-     **/
-    PalletProjectTokenPayment: {
-        amount: string;
-    };
-    /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup400: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: string;
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup403: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: string[];
     };
     /**
-     * Lookup407: pallet_proposals_engine::Call<T>
+     * Lookup406: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3466,7 +3460,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup408: pallet_proposals_discussion::Call<T>
+     * Lookup407: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3495,7 +3489,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup409: pallet_proposals_codex::Call<T>
+     * Lookup408: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3506,7 +3500,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup410: pallet_working_group::Call<T, I>
+     * Lookup409: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3589,7 +3583,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup419: joystream_node_runtime::OriginCaller
+     * Lookup418: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3598,7 +3592,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup420: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup419: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3608,17 +3602,17 @@ declare const _default: {
         };
     };
     /**
-     * Lookup421: sp_core::Void
+     * Lookup420: sp_core::Void
      **/
     SpCoreVoid: string;
     /**
-     * Lookup422: pallet_utility::pallet::Error<T>
+     * Lookup421: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: string[];
     };
     /**
-     * Lookup429: sp_consensus_babe::digests::PreDigest
+     * Lookup428: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3629,7 +3623,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup430: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup429: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: string;
@@ -3638,14 +3632,14 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup431: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup430: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: string;
         slot: string;
     };
     /**
-     * Lookup432: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup431: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: string;
@@ -3654,20 +3648,20 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup434: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup433: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: string;
         allowedSlots: string;
     };
     /**
-     * Lookup435: pallet_babe::pallet::Error<T>
+     * Lookup434: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: string[];
     };
     /**
-     * Lookup437: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
+     * Lookup436: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
      **/
     PalletAuthorshipUncleEntryItem: {
         _enum: {
@@ -3676,13 +3670,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup438: pallet_authorship::pallet::Error<T>
+     * Lookup437: pallet_authorship::pallet::Error<T>
      **/
     PalletAuthorshipError: {
         _enum: string[];
     };
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup439: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: string;
@@ -3690,38 +3684,38 @@ declare const _default: {
         reasons: string;
     };
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup440: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: string[];
     };
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup443: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: string;
         amount: string;
     };
     /**
-     * Lookup446: pallet_balances::Releases
+     * Lookup445: pallet_balances::Releases
      **/
     PalletBalancesReleases: {
         _enum: string[];
     };
     /**
-     * Lookup447: pallet_balances::pallet::Error<T, I>
+     * Lookup446: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: string[];
     };
     /**
-     * Lookup449: pallet_transaction_payment::Releases
+     * Lookup448: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: string[];
     };
     /**
-     * Lookup450: pallet_election_provider_multi_phase::Phase<Bn>
+     * Lookup449: pallet_election_provider_multi_phase::Phase<Bn>
      **/
     PalletElectionProviderMultiPhasePhase: {
         _enum: {
@@ -3732,7 +3726,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
+     * Lookup451: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: string;
@@ -3740,14 +3734,14 @@ declare const _default: {
         compute: string;
     };
     /**
-     * Lookup453: pallet_election_provider_multi_phase::RoundSnapshot<T>
+     * Lookup452: pallet_election_provider_multi_phase::RoundSnapshot<T>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup460: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: string;
@@ -3756,13 +3750,13 @@ declare const _default: {
         callFee: string;
     };
     /**
-     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup461: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: string[];
     };
     /**
-     * Lookup463: pallet_staking::StakingLedger<T>
+     * Lookup462: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: string;
@@ -3772,14 +3766,14 @@ declare const _default: {
         claimedRewards: string;
     };
     /**
-     * Lookup465: pallet_staking::UnlockChunk<Balance>
+     * Lookup464: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: string;
         era: string;
     };
     /**
-     * Lookup467: pallet_staking::Nominations<T>
+     * Lookup466: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: string;
@@ -3787,27 +3781,27 @@ declare const _default: {
         suppressed: string;
     };
     /**
-     * Lookup468: pallet_staking::ActiveEraInfo
+     * Lookup467: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: string;
         start: string;
     };
     /**
-     * Lookup470: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup469: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: string;
         individual: string;
     };
     /**
-     * Lookup474: pallet_staking::Forcing
+     * Lookup473: pallet_staking::Forcing
      **/
     PalletStakingForcing: {
         _enum: string[];
     };
     /**
-     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup475: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: string;
@@ -3817,7 +3811,7 @@ declare const _default: {
         payout: string;
     };
     /**
-     * Lookup478: pallet_staking::slashing::SlashingSpans
+     * Lookup477: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: string;
@@ -3826,36 +3820,36 @@ declare const _default: {
         prior: string;
     };
     /**
-     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup478: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: string;
         paidOut: string;
     };
     /**
-     * Lookup482: pallet_staking::Releases
+     * Lookup481: pallet_staking::Releases
      **/
     PalletStakingReleases: {
         _enum: string[];
     };
     /**
-     * Lookup483: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: string[];
     };
     /**
-     * Lookup487: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: string;
     /**
-     * Lookup488: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: string[];
     };
     /**
-     * Lookup490: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3872,7 +3866,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup491: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: string;
@@ -3881,39 +3875,33 @@ declare const _default: {
         forced: string;
     };
     /**
-     * Lookup493: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: string[];
     };
     /**
-     * Lookup499: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: string;
         externalAddresses: string;
     };
     /**
-     * Lookup503: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: string[];
     };
     /**
-     * Lookup504: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: string;
         reporters: string;
     };
     /**
-     * Lookup507: pallet_sudo::pallet::Error<T>
-     **/
-    PalletSudoError: {
-        _enum: string[];
-    };
-    /**
-     * Lookup508: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: string;
@@ -3923,14 +3911,14 @@ declare const _default: {
         score: string;
     };
     /**
-     * Lookup509: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: string;
         tail: string;
     };
     /**
-     * Lookup510: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3938,25 +3926,25 @@ declare const _default: {
         };
     };
     /**
-     * Lookup511: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: string[];
     };
     /**
-     * Lookup514: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: string[];
     };
     /**
-     * Lookup515: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: string[];
     };
     /**
-     * Lookup517: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
      **/
     PalletMultisigMultisig: {
         when: string;
@@ -3965,20 +3953,20 @@ declare const _default: {
         approvals: string;
     };
     /**
-     * Lookup519: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: string[];
     };
     /**
-     * Lookup520: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: string;
         changedAt: string;
     };
     /**
-     * Lookup521: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -3988,26 +3976,26 @@ declare const _default: {
         };
     };
     /**
-     * Lookup522: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: string;
         endsAt: string;
     };
     /**
-     * Lookup523: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: string;
     };
     /**
-     * Lookup524: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: string;
     };
     /**
-     * Lookup526: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: string;
@@ -4018,7 +4006,7 @@ declare const _default: {
         unpaidReward: string;
     };
     /**
-     * Lookup528: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: string;
@@ -4029,13 +4017,13 @@ declare const _default: {
         noteHash: string;
     };
     /**
-     * Lookup529: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: string[];
     };
     /**
-     * Lookup530: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4045,7 +4033,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup532: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: string;
@@ -4054,7 +4042,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup533: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: string;
@@ -4064,7 +4052,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup534: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: string;
@@ -4073,13 +4061,13 @@ declare const _default: {
         voteFor: string;
     };
     /**
-     * Lookup535: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: string[];
     };
     /**
-     * Lookup536: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: string;
@@ -4089,20 +4077,20 @@ declare const _default: {
         invites: string;
     };
     /**
-     * Lookup537: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: string;
         confirmed: string;
     };
     /**
-     * Lookup538: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: string[];
     };
     /**
-     * Lookup539: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: string;
@@ -4115,7 +4103,7 @@ declare const _default: {
         stickyThreadIds: string;
     };
     /**
-     * Lookup541: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: string;
@@ -4124,7 +4112,7 @@ declare const _default: {
         numberOfEditablePosts: string;
     };
     /**
-     * Lookup542: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: string;
@@ -4134,19 +4122,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup543: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: string[];
     };
     /**
-     * Lookup544: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: string;
     };
     /**
-     * Lookup545: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: string;
@@ -4156,7 +4144,7 @@ declare const _default: {
         hasUnpaidOracleReward: string;
     };
     /**
-     * Lookup547: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: string;
@@ -4168,7 +4156,7 @@ declare const _default: {
         fundingType: string;
     };
     /**
-     * Lookup548: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4177,7 +4165,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup549: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4194,14 +4182,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup551: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: string;
         funderStateBloatBondAmount: string;
     };
     /**
-     * Lookup552: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: string;
@@ -4210,13 +4198,13 @@ declare const _default: {
         workSubmitted: string;
     };
     /**
-     * Lookup553: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: string[];
     };
     /**
-     * Lookup555: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: string;
@@ -4225,7 +4213,7 @@ declare const _default: {
         videoStateBloatBond: string;
     };
     /**
-     * Lookup556: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: string;
@@ -4234,7 +4222,7 @@ declare const _default: {
         openAuctionsNonce: string;
     };
     /**
-     * Lookup557: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4246,7 +4234,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup558: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: string;
@@ -4259,14 +4247,14 @@ declare const _default: {
         topBid: string;
     };
     /**
-     * Lookup561: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: string;
         bidderId: string;
     };
     /**
-     * Lookup562: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: string;
@@ -4277,7 +4265,7 @@ declare const _default: {
         start: string;
     };
     /**
-     * Lookup563: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4286,7 +4274,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup566: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: string;
@@ -4294,7 +4282,7 @@ declare const _default: {
         permissionsByLevel: string;
     };
     /**
-     * Lookup573: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: string;
@@ -4302,13 +4290,13 @@ declare const _default: {
         auctionId: string;
     };
     /**
-     * Lookup574: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup575: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: string;
@@ -4317,7 +4305,7 @@ declare const _default: {
         objectsNumber: string;
     };
     /**
-     * Lookup578: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: string;
@@ -4326,7 +4314,7 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup579: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4336,14 +4324,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup581: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: string;
         families: string;
     };
     /**
-     * Lookup584: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4355,13 +4343,13 @@ declare const _default: {
         ipfsContentId: string;
     };
     /**
-     * Lookup585: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: string;
     };
     /**
-     * Lookup586: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: string;
@@ -4371,13 +4359,13 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup589: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: string[];
     };
     /**
-     * Lookup590: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: string;
@@ -4388,14 +4376,14 @@ declare const _default: {
         lastSaleTotalPurchasedAmount: string;
     };
     /**
-     * Lookup591: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: string;
         amount: string;
     };
     /**
-     * Lookup593: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: string;
@@ -4405,7 +4393,7 @@ declare const _default: {
         burnedAmount: string;
     };
     /**
-     * Lookup600: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: string;
@@ -4419,9 +4407,10 @@ declare const _default: {
         revenueSplitRate: string;
         revenueSplit: string;
         nextRevenueSplitId: string;
+        ammCurve: string;
     };
     /**
-     * Lookup601: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4430,7 +4419,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup602: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: string;
@@ -4438,14 +4427,14 @@ declare const _default: {
         dividendsClaimed: string;
     };
     /**
-     * Lookup603: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: string;
         duration: string;
     };
     /**
-     * Lookup605: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: string;
@@ -4453,13 +4442,13 @@ declare const _default: {
         lastUnclaimedPatronageTallyBlock: string;
     };
     /**
-     * Lookup607: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup608: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: string;
@@ -4472,7 +4461,7 @@ declare const _default: {
         stakingAccountId: string;
     };
     /**
-     * Lookup609: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: string;
@@ -4485,7 +4474,7 @@ declare const _default: {
         constitutionality: string;
     };
     /**
-     * Lookup610: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: string;
@@ -4494,13 +4483,13 @@ declare const _default: {
         slashes: string;
     };
     /**
-     * Lookup613: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: string[];
     };
     /**
-     * Lookup614: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: string;
@@ -4508,7 +4497,7 @@ declare const _default: {
         mode: string;
     };
     /**
-     * Lookup616: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4517,7 +4506,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup617: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: string;
@@ -4525,19 +4514,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup618: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: string[];
     };
     /**
-     * Lookup619: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
         _enum: string[];
     };
     /**
-     * Lookup620: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: string;
@@ -4548,7 +4537,7 @@ declare const _default: {
         creationStake: string;
     };
     /**
-     * Lookup621: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: string;
@@ -4559,7 +4548,7 @@ declare const _default: {
         openingId: string;
     };
     /**
-     * Lookup622: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: string;
@@ -4573,13 +4562,13 @@ declare const _default: {
         createdAt: string;
     };
     /**
-     * Lookup623: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup633: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4589,39 +4578,39 @@ declare const _default: {
         };
     };
     /**
-     * Lookup634: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: string;
     /**
-     * Lookup637: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: string;
     /**
-     * Lookup638: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: string;
     /**
-     * Lookup639: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: string;
     /**
-     * Lookup640: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: string;
     /**
-     * Lookup643: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: string;
     /**
-     * Lookup644: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: string;
     /**
-     * Lookup645: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: string;
     /**
-     * Lookup646: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: string;
 };
diff --git a/node_modules/@joystream/types/lib/augment/registry.d.ts b/node_modules/@joystream/types/lib/augment/registry.d.ts
index a1514a1..65b6fcd 100644
--- a/node_modules/@joystream/types/lib/augment/registry.d.ts
+++ b/node_modules/@joystream/types/lib/augment/registry.d.ts
@@ -1,4 +1,4 @@
-import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchClass, FrameSupportWeightsDispatchInfo, FrameSupportWeightsPays, FrameSupportWeightsPerDispatchClassU32, FrameSupportWeightsPerDispatchClassU64, FrameSupportWeightsPerDispatchClassWeightsPerClass, FrameSupportWeightsRuntimeDbWeight, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletAuthorshipCall, PalletAuthorshipError, PalletAuthorshipUncleEntryItem, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReleases, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPayment, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfersPayment, PalletProjectTokenTransfersPaymentWithVesting, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingReleases, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletSudoCall, PalletSudoError, PalletSudoEvent, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletUtilityRawEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpFinalityGrandpaAppPublic, SpFinalityGrandpaAppSignature, SpFinalityGrandpaEquivocation, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeArithmeticError, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion } from '@polkadot/types/lookup';
+import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchClass, FrameSupportWeightsDispatchInfo, FrameSupportWeightsPays, FrameSupportWeightsPerDispatchClassU32, FrameSupportWeightsPerDispatchClassU64, FrameSupportWeightsPerDispatchClassWeightsPerClass, FrameSupportWeightsRuntimeDbWeight, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletAuthorshipCall, PalletAuthorshipError, PalletAuthorshipUncleEntryItem, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReleases, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingReleases, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletUtilityRawEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpFinalityGrandpaAppPublic, SpFinalityGrandpaAppSignature, SpFinalityGrandpaEquivocation, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeArithmeticError, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion } from '@polkadot/types/lookup';
 declare module '@polkadot/types/types/registry' {
     interface InterfaceTypes {
         FinalityGrandpaEquivocationPrecommit: FinalityGrandpaEquivocationPrecommit;
@@ -172,13 +172,14 @@ declare module '@polkadot/types/types/registry' {
         PalletMultisigTimepoint: PalletMultisigTimepoint;
         PalletOffencesEvent: PalletOffencesEvent;
         PalletProjectTokenAccountData: PalletProjectTokenAccountData;
+        PalletProjectTokenAmmCurve: PalletProjectTokenAmmCurve;
+        PalletProjectTokenAmmParams: PalletProjectTokenAmmParams;
         PalletProjectTokenCall: PalletProjectTokenCall;
         PalletProjectTokenErrorsError: PalletProjectTokenErrorsError;
         PalletProjectTokenEventsRawEvent: PalletProjectTokenEventsRawEvent;
         PalletProjectTokenMerkleProof: PalletProjectTokenMerkleProof;
         PalletProjectTokenMerkleSide: PalletProjectTokenMerkleSide;
         PalletProjectTokenPatronageData: PalletProjectTokenPatronageData;
-        PalletProjectTokenPayment: PalletProjectTokenPayment;
         PalletProjectTokenPaymentWithVesting: PalletProjectTokenPaymentWithVesting;
         PalletProjectTokenRevenueSplitInfo: PalletProjectTokenRevenueSplitInfo;
         PalletProjectTokenRevenueSplitState: PalletProjectTokenRevenueSplitState;
@@ -192,8 +193,7 @@ declare module '@polkadot/types/types/registry' {
         PalletProjectTokenTokenSaleParams: PalletProjectTokenTokenSaleParams;
         PalletProjectTokenTransferPolicy: PalletProjectTokenTransferPolicy;
         PalletProjectTokenTransferPolicyParams: PalletProjectTokenTransferPolicyParams;
-        PalletProjectTokenTransfersPayment: PalletProjectTokenTransfersPayment;
-        PalletProjectTokenTransfersPaymentWithVesting: PalletProjectTokenTransfersPaymentWithVesting;
+        PalletProjectTokenTransfers: PalletProjectTokenTransfers;
         PalletProjectTokenValidated: PalletProjectTokenValidated;
         PalletProjectTokenValidatedPayment: PalletProjectTokenValidatedPayment;
         PalletProjectTokenVestingSchedule: PalletProjectTokenVestingSchedule;
@@ -278,9 +278,6 @@ declare module '@polkadot/types/types/registry' {
         PalletStorageStorageBucketRecord: PalletStorageStorageBucketRecord;
         PalletStorageUploadParametersRecord: PalletStorageUploadParametersRecord;
         PalletStorageVoucher: PalletStorageVoucher;
-        PalletSudoCall: PalletSudoCall;
-        PalletSudoError: PalletSudoError;
-        PalletSudoEvent: PalletSudoEvent;
         PalletTimestampCall: PalletTimestampCall;
         PalletTransactionPaymentChargeTransactionPayment: PalletTransactionPaymentChargeTransactionPayment;
         PalletTransactionPaymentReleases: PalletTransactionPaymentReleases;
diff --git a/node_modules/@joystream/types/lib/augment/types-lookup.d.ts b/node_modules/@joystream/types/lib/augment/types-lookup.d.ts
index 3896f19..eb608c8 100644
--- a/node_modules/@joystream/types/lib/augment/types-lookup.d.ts
+++ b/node_modules/@joystream/types/lib/augment/types-lookup.d.ts
@@ -1,7 +1,7 @@
 declare module '@polkadot/types/lookup' {
     import type { BTreeMap, BTreeSet, Bytes, Compact, Enum, Null, Option, Result, Struct, Text, U8aFixed, Vec, WrapperKeepOpaque, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
     import type { ITuple } from '@polkadot/types-codec/types';
-    import type { AccountId32, Call, H256, PerU16, Perbill, Percent, Permill, Perquintill } from '@polkadot/types/interfaces/runtime';
+    import type { AccountId32, Call, H256, PerU16, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
     import type { Event } from '@polkadot/types/interfaces/system';
     /** @name FrameSystemAccountInfo (3) */
     interface FrameSystemAccountInfo extends Struct {
@@ -360,23 +360,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Offence';
     }
-    /** @name PalletSudoEvent (57) */
-    interface PalletSudoEvent extends Enum {
-        readonly isSudid: boolean;
-        readonly asSudid: {
-            readonly sudoResult: Result<Null, SpRuntimeDispatchError>;
-        } & Struct;
-        readonly isKeyChanged: boolean;
-        readonly asKeyChanged: {
-            readonly oldSudoer: Option<AccountId32>;
-        } & Struct;
-        readonly isSudoAsDone: boolean;
-        readonly asSudoAsDone: {
-            readonly sudoResult: Result<Null, SpRuntimeDispatchError>;
-        } & Struct;
-        readonly type: 'Sudid' | 'KeyChanged' | 'SudoAsDone';
-    }
-    /** @name PalletBagsListEvent (59) */
+    /** @name PalletBagsListEvent (57) */
     interface PalletBagsListEvent extends Enum {
         readonly isRebagged: boolean;
         readonly asRebagged: {
@@ -391,7 +375,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Rebagged' | 'ScoreUpdated';
     }
-    /** @name PalletVestingEvent (60) */
+    /** @name PalletVestingEvent (58) */
     interface PalletVestingEvent extends Enum {
         readonly isVestingUpdated: boolean;
         readonly asVestingUpdated: {
@@ -404,7 +388,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'VestingUpdated' | 'VestingCompleted';
     }
-    /** @name PalletMultisigEvent (61) */
+    /** @name PalletMultisigEvent (59) */
     interface PalletMultisigEvent extends Enum {
         readonly isNewMultisig: boolean;
         readonly asNewMultisig: {
@@ -436,12 +420,12 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'NewMultisig' | 'MultisigApproval' | 'MultisigExecuted' | 'MultisigCancelled';
     }
-    /** @name PalletMultisigTimepoint (62) */
+    /** @name PalletMultisigTimepoint (60) */
     interface PalletMultisigTimepoint extends Struct {
         readonly height: u32;
         readonly index: u32;
     }
-    /** @name PalletCouncilRawEvent (63) */
+    /** @name PalletCouncilRawEvent (61) */
     interface PalletCouncilRawEvent extends Enum {
         readonly isAnnouncingPeriodStarted: boolean;
         readonly asAnnouncingPeriodStarted: u32;
@@ -483,7 +467,7 @@ declare module '@polkadot/types/lookup' {
         readonly asCandidateRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked';
     }
-    /** @name PalletReferendumRawEvent (65) */
+    /** @name PalletReferendumRawEvent (63) */
     interface PalletReferendumRawEvent extends Enum {
         readonly isReferendumStarted: boolean;
         readonly asReferendumStarted: ITuple<[u32, u32]>;
@@ -499,19 +483,21 @@ declare module '@polkadot/types/lookup' {
         readonly asVoteRevealed: ITuple<[AccountId32, u64, Bytes]>;
         readonly isStakeReleased: boolean;
         readonly asStakeReleased: AccountId32;
-        readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased';
+        readonly isAccountOptedOutOfVoting: boolean;
+        readonly asAccountOptedOutOfVoting: AccountId32;
+        readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased' | 'AccountOptedOutOfVoting';
     }
-    /** @name PalletReferendumInstance1 (66) */
+    /** @name PalletReferendumInstance1 (64) */
     type PalletReferendumInstance1 = Null;
-    /** @name PalletReferendumOptionResult (68) */
+    /** @name PalletReferendumOptionResult (66) */
     interface PalletReferendumOptionResult extends Struct {
         readonly optionId: u64;
         readonly votePower: u128;
     }
-    /** @name PalletMembershipRawEvent (69) */
+    /** @name PalletMembershipRawEvent (67) */
     interface PalletMembershipRawEvent extends Enum {
         readonly isMemberInvited: boolean;
-        readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters]>;
+        readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters, u128]>;
         readonly isMembershipGifted: boolean;
         readonly asMembershipGifted: ITuple<[u64, PalletMembershipGiftMembershipParameters]>;
         readonly isMembershipBought: boolean;
@@ -541,12 +527,12 @@ declare module '@polkadot/types/lookup' {
         readonly isStakingAccountConfirmed: boolean;
         readonly asStakingAccountConfirmed: ITuple<[AccountId32, u64]>;
         readonly isMemberRemarked: boolean;
-        readonly asMemberRemarked: ITuple<[u64, Bytes]>;
+        readonly asMemberRemarked: ITuple<[u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
         readonly isMemberCreated: boolean;
         readonly asMemberCreated: ITuple<[u64, PalletMembershipCreateMemberParameters, u32]>;
         readonly type: 'MemberInvited' | 'MembershipGifted' | 'MembershipBought' | 'MemberProfileUpdated' | 'MemberAccountsUpdated' | 'MemberVerificationStatusUpdated' | 'ReferralCutUpdated' | 'InvitesTransferred' | 'MembershipPriceUpdated' | 'InitialInvitationBalanceUpdated' | 'LeaderInvitationQuotaUpdated' | 'InitialInvitationCountUpdated' | 'StakingAccountAdded' | 'StakingAccountRemoved' | 'StakingAccountConfirmed' | 'MemberRemarked' | 'MemberCreated';
     }
-    /** @name PalletMembershipBuyMembershipParameters (70) */
+    /** @name PalletMembershipBuyMembershipParameters (68) */
     interface PalletMembershipBuyMembershipParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -554,7 +540,7 @@ declare module '@polkadot/types/lookup' {
         readonly metadata: Bytes;
         readonly referrerId: Option<u64>;
     }
-    /** @name PalletMembershipInviteMembershipParameters (73) */
+    /** @name PalletMembershipInviteMembershipParameters (71) */
     interface PalletMembershipInviteMembershipParameters extends Struct {
         readonly invitingMemberId: u64;
         readonly rootAccount: AccountId32;
@@ -562,7 +548,7 @@ declare module '@polkadot/types/lookup' {
         readonly handle: Option<Bytes>;
         readonly metadata: Bytes;
     }
-    /** @name PalletMembershipCreateMemberParameters (74) */
+    /** @name PalletMembershipCreateMemberParameters (72) */
     interface PalletMembershipCreateMemberParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -570,7 +556,7 @@ declare module '@polkadot/types/lookup' {
         readonly metadata: Bytes;
         readonly isFoundingMember: bool;
     }
-    /** @name PalletMembershipGiftMembershipParameters (75) */
+    /** @name PalletMembershipGiftMembershipParameters (73) */
     interface PalletMembershipGiftMembershipParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -581,7 +567,7 @@ declare module '@polkadot/types/lookup' {
         readonly creditRootAccount: u128;
         readonly applyRootAccountInvitationLock: Option<u128>;
     }
-    /** @name PalletForumRawEvent (77) */
+    /** @name PalletForumRawEvent (78) */
     interface PalletForumRawEvent extends Enum {
         readonly isCategoryCreated: boolean;
         readonly asCategoryCreated: ITuple<[u64, Option<u64>, Bytes, Bytes]>;
@@ -619,26 +605,26 @@ declare module '@polkadot/types/lookup' {
         readonly asCategoryMembershipOfModeratorUpdated: ITuple<[u64, u64, bool]>;
         readonly type: 'CategoryCreated' | 'CategoryArchivalStatusUpdated' | 'CategoryTitleUpdated' | 'CategoryDescriptionUpdated' | 'CategoryDeleted' | 'ThreadCreated' | 'ThreadModerated' | 'ThreadUpdated' | 'ThreadMetadataUpdated' | 'ThreadDeleted' | 'ThreadMoved' | 'PostAdded' | 'PostModerated' | 'PostDeleted' | 'PostTextUpdated' | 'CategoryStickyThreadUpdate' | 'CategoryMembershipOfModeratorUpdated';
     }
-    /** @name PalletForumPrivilegedActor (78) */
+    /** @name PalletForumPrivilegedActor (79) */
     interface PalletForumPrivilegedActor extends Enum {
         readonly isLead: boolean;
         readonly isModerator: boolean;
         readonly asModerator: u64;
         readonly type: 'Lead' | 'Moderator';
     }
-    /** @name PalletForumExtendedPostIdObject (79) */
+    /** @name PalletForumExtendedPostIdObject (80) */
     interface PalletForumExtendedPostIdObject extends Struct {
         readonly categoryId: u64;
         readonly threadId: u64;
         readonly postId: u64;
     }
-    /** @name PalletConstitutionRawEvent (84) */
+    /** @name PalletConstitutionRawEvent (85) */
     interface PalletConstitutionRawEvent extends Enum {
         readonly isConstutionAmended: boolean;
         readonly asConstutionAmended: ITuple<[H256, Bytes]>;
         readonly type: 'ConstutionAmended';
     }
-    /** @name PalletBountyRawEvent (85) */
+    /** @name PalletBountyRawEvent (86) */
     interface PalletBountyRawEvent extends Enum {
         readonly isBountyCreated: boolean;
         readonly asBountyCreated: ITuple<[u64, PalletBountyBountyParametersBTreeSet, Bytes]>;
@@ -688,7 +674,7 @@ declare module '@polkadot/types/lookup' {
         readonly asCreatorStateBloatBondWithdrawn: ITuple<[u64, PalletBountyBountyActor, u128]>;
         readonly type: 'BountyCreated' | 'BountyOracleSwitched' | 'BountyTerminated' | 'BountyFunded' | 'BountyMaxFundingReached' | 'BountyFundingWithdrawal' | 'BountyCreatorCherryWithdrawal' | 'BountyCreatorOracleRewardWithdrawal' | 'BountyOracleRewardWithdrawal' | 'BountyRemoved' | 'WorkEntryAnnounced' | 'WorkSubmitted' | 'OracleJudgmentSubmitted' | 'WorkEntrantFundsWithdrawn' | 'BountyContributorRemarked' | 'BountyOracleRemarked' | 'BountyEntrantRemarked' | 'BountyCreatorRemarked' | 'WorkSubmissionPeriodEnded' | 'WorkEntrantStakeUnlocked' | 'WorkEntrantStakeSlashed' | 'FunderStateBloatBondWithdrawn' | 'CreatorStateBloatBondWithdrawn';
     }
-    /** @name PalletBountyBountyParametersBTreeSet (86) */
+    /** @name PalletBountyBountyParametersBTreeSet (87) */
     interface PalletBountyBountyParametersBTreeSet extends Struct {
         readonly oracle: PalletBountyBountyActor;
         readonly contractType: PalletBountyAssuranceContractTypeBTreeSet;
@@ -698,21 +684,21 @@ declare module '@polkadot/types/lookup' {
         readonly entrantStake: u128;
         readonly fundingType: PalletBountyFundingType;
     }
-    /** @name PalletBountyBountyActor (87) */
+    /** @name PalletBountyBountyActor (88) */
     interface PalletBountyBountyActor extends Enum {
         readonly isCouncil: boolean;
         readonly isMember: boolean;
         readonly asMember: u64;
         readonly type: 'Council' | 'Member';
     }
-    /** @name PalletBountyAssuranceContractTypeBTreeSet (88) */
+    /** @name PalletBountyAssuranceContractTypeBTreeSet (89) */
     interface PalletBountyAssuranceContractTypeBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletBountyFundingType (89) */
+    /** @name PalletBountyFundingType (90) */
     interface PalletBountyFundingType extends Enum {
         readonly isPerpetual: boolean;
         readonly asPerpetual: {
@@ -725,7 +711,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Perpetual' | 'Limited';
     }
-    /** @name PalletBountyOracleWorkEntryJudgment (91) */
+    /** @name PalletBountyOracleWorkEntryJudgment (92) */
     interface PalletBountyOracleWorkEntryJudgment extends Enum {
         readonly isWinner: boolean;
         readonly asWinner: {
@@ -738,7 +724,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Winner' | 'Rejected';
     }
-    /** @name PalletUtilityRawEvent (94) */
+    /** @name PalletUtilityRawEvent (95) */
     interface PalletUtilityRawEvent extends Enum {
         readonly isSignaled: boolean;
         readonly asSignaled: Bytes;
@@ -750,7 +736,7 @@ declare module '@polkadot/types/lookup' {
         readonly asTokensBurned: ITuple<[AccountId32, u128]>;
         readonly type: 'Signaled' | 'RuntimeUpgraded' | 'UpdatedWorkingGroupBudget' | 'TokensBurned';
     }
-    /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (95) */
+    /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (96) */
     interface PalletCommonWorkingGroupIterableEnumsWorkingGroup extends Enum {
         readonly isForum: boolean;
         readonly isStorage: boolean;
@@ -763,13 +749,13 @@ declare module '@polkadot/types/lookup' {
         readonly isMembership: boolean;
         readonly type: 'Forum' | 'Storage' | 'Content' | 'OperationsAlpha' | 'App' | 'Distribution' | 'OperationsBeta' | 'OperationsGamma' | 'Membership';
     }
-    /** @name PalletCommonBalanceKind (96) */
+    /** @name PalletCommonBalanceKind (97) */
     interface PalletCommonBalanceKind extends Enum {
         readonly isPositive: boolean;
         readonly isNegative: boolean;
         readonly type: 'Positive' | 'Negative';
     }
-    /** @name PalletContentRawEvent (97) */
+    /** @name PalletContentRawEvent (98) */
     interface PalletContentRawEvent extends Enum {
         readonly isCuratorGroupCreated: boolean;
         readonly asCuratorGroupCreated: u64;
@@ -820,11 +806,9 @@ declare module '@polkadot/types/lookup' {
         readonly isVideoAssetsDeletedByModerator: boolean;
         readonly asVideoAssetsDeletedByModerator: ITuple<[PalletContentPermissionsContentActor, u64, BTreeSet<u64>, bool, Bytes]>;
         readonly isChannelPayoutsUpdated: boolean;
-        readonly asChannelPayoutsUpdated: ITuple<[PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>]>;
+        readonly asChannelPayoutsUpdated: ITuple<[PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>, AccountId32]>;
         readonly isChannelRewardUpdated: boolean;
-        readonly asChannelRewardUpdated: ITuple<[u128, u64]>;
-        readonly isCouncilRewardClaimed: boolean;
-        readonly asCouncilRewardClaimed: ITuple<[u64, u128]>;
+        readonly asChannelRewardUpdated: ITuple<[u128, u128, u64]>;
         readonly isEnglishAuctionStarted: boolean;
         readonly asEnglishAuctionStarted: ITuple<[PalletContentPermissionsContentActor, u64, PalletContentNftTypesEnglishAuctionParamsRecord]>;
         readonly isOpenAuctionStarted: boolean;
@@ -881,9 +865,9 @@ declare module '@polkadot/types/lookup' {
         readonly asToggledNftLimits: bool;
         readonly isCreatorTokenIssued: boolean;
         readonly asCreatorTokenIssued: ITuple<[PalletContentPermissionsContentActor, u64, u64]>;
-        readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelDeletedByModerator' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoDeletedByModerator' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'CouncilRewardClaimed' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued';
+        readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelDeletedByModerator' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoDeletedByModerator' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued';
     }
-    /** @name PalletContentPermissionsContentActor (98) */
+    /** @name PalletContentPermissionsContentActor (99) */
     interface PalletContentPermissionsContentActor extends Enum {
         readonly isCurator: boolean;
         readonly asCurator: ITuple<[u64, u64]>;
@@ -892,7 +876,7 @@ declare module '@polkadot/types/lookup' {
         readonly isLead: boolean;
         readonly type: 'Curator' | 'Member' | 'Lead';
     }
-    /** @name PalletContentChannelRecord (99) */
+    /** @name PalletContentChannelRecord (100) */
     interface PalletContentChannelRecord extends Struct {
         readonly owner: PalletContentChannelOwner;
         readonly numVideos: u64;
@@ -909,7 +893,7 @@ declare module '@polkadot/types/lookup' {
         readonly creatorTokenId: Option<u64>;
         readonly channelStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
     }
-    /** @name PalletContentIterableEnumsChannelActionPermission (103) */
+    /** @name PalletContentIterableEnumsChannelActionPermission (104) */
     interface PalletContentIterableEnumsChannelActionPermission extends Enum {
         readonly isUpdateChannelMetadata: boolean;
         readonly isManageNonVideoChannelAssets: boolean;
@@ -932,9 +916,10 @@ declare module '@polkadot/types/lookup' {
         readonly isReduceCreatorTokenPatronageRate: boolean;
         readonly isManageRevenueSplits: boolean;
         readonly isDeissueCreatorToken: boolean;
-        readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken';
+        readonly isAmmControl: boolean;
+        readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken' | 'AmmControl';
     }
-    /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (110) */
+    /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (111) */
     interface PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature extends Enum {
         readonly isChannelFundsTransfer: boolean;
         readonly isCreatorCashout: boolean;
@@ -945,12 +930,12 @@ declare module '@polkadot/types/lookup' {
         readonly isCreatorTokenIssuance: boolean;
         readonly type: 'ChannelFundsTransfer' | 'CreatorCashout' | 'VideoNftIssuance' | 'VideoCreation' | 'VideoUpdate' | 'ChannelUpdate' | 'CreatorTokenIssuance';
     }
-    /** @name PalletCommonBloatBondRepayableBloatBond (113) */
+    /** @name PalletCommonBloatBondRepayableBloatBond (114) */
     interface PalletCommonBloatBondRepayableBloatBond extends Struct {
         readonly repaymentRestrictedTo: Option<AccountId32>;
         readonly amount: u128;
     }
-    /** @name PalletContentChannelOwner (114) */
+    /** @name PalletContentChannelOwner (115) */
     interface PalletContentChannelOwner extends Enum {
         readonly isMember: boolean;
         readonly asMember: u64;
@@ -958,35 +943,35 @@ declare module '@polkadot/types/lookup' {
         readonly asCuratorGroup: u64;
         readonly type: 'Member' | 'CuratorGroup';
     }
-    /** @name PalletContentChannelTransferStatus (115) */
+    /** @name PalletContentChannelTransferStatus (116) */
     interface PalletContentChannelTransferStatus extends Enum {
         readonly isNoActiveTransfer: boolean;
         readonly isPendingTransfer: boolean;
         readonly asPendingTransfer: PalletContentPendingTransfer;
         readonly type: 'NoActiveTransfer' | 'PendingTransfer';
     }
-    /** @name PalletContentPendingTransfer (116) */
+    /** @name PalletContentPendingTransfer (117) */
     interface PalletContentPendingTransfer extends Struct {
         readonly newOwner: PalletContentChannelOwner;
         readonly transferParams: PalletContentTransferCommitmentParametersBoundedBTreeMap;
     }
-    /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (117) */
+    /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (118) */
     interface PalletContentTransferCommitmentParametersBoundedBTreeMap extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly transferId: u64;
     }
-    /** @name PalletContentLimitPerPeriod (118) */
+    /** @name PalletContentLimitPerPeriod (119) */
     interface PalletContentLimitPerPeriod extends Struct {
         readonly limit: u64;
         readonly blockNumberPeriod: u32;
     }
-    /** @name PalletContentNftCounter (119) */
+    /** @name PalletContentNftCounter (120) */
     interface PalletContentNftCounter extends Struct {
         readonly counter: u64;
         readonly lastUpdated: u32;
     }
-    /** @name PalletContentNftTypesEnglishAuctionParamsRecord (120) */
+    /** @name PalletContentNftTypesEnglishAuctionParamsRecord (121) */
     interface PalletContentNftTypesEnglishAuctionParamsRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -996,7 +981,7 @@ declare module '@polkadot/types/lookup' {
         readonly extensionPeriod: u32;
         readonly minBidStep: u128;
     }
-    /** @name PalletContentNftTypesOpenAuctionParamsRecord (122) */
+    /** @name PalletContentNftTypesOpenAuctionParamsRecord (123) */
     interface PalletContentNftTypesOpenAuctionParamsRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -1004,14 +989,14 @@ declare module '@polkadot/types/lookup' {
         readonly whitelist: BTreeSet<u64>;
         readonly bidLockDuration: u32;
     }
-    /** @name PalletContentNftTypesNftIssuanceParametersRecord (123) */
+    /** @name PalletContentNftTypesNftIssuanceParametersRecord (124) */
     interface PalletContentNftTypesNftIssuanceParametersRecord extends Struct {
         readonly royalty: Option<Perbill>;
         readonly nftMetadata: Bytes;
         readonly nonChannelOwner: Option<u64>;
         readonly initTransactionalStatus: PalletContentNftTypesInitTransactionalStatusRecord;
     }
-    /** @name PalletContentNftTypesInitTransactionalStatusRecord (124) */
+    /** @name PalletContentNftTypesInitTransactionalStatusRecord (125) */
     interface PalletContentNftTypesInitTransactionalStatusRecord extends Enum {
         readonly isIdle: boolean;
         readonly isBuyNow: boolean;
@@ -1024,7 +1009,7 @@ declare module '@polkadot/types/lookup' {
         readonly asOpenAuction: PalletContentNftTypesOpenAuctionParamsRecord;
         readonly type: 'Idle' | 'BuyNow' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction';
     }
-    /** @name PalletContentChannelCreationParametersRecord (126) */
+    /** @name PalletContentChannelCreationParametersRecord (127) */
     interface PalletContentChannelCreationParametersRecord extends Struct {
         readonly assets: Option<PalletContentStorageAssetsRecord>;
         readonly meta: Option<Bytes>;
@@ -1034,22 +1019,22 @@ declare module '@polkadot/types/lookup' {
         readonly expectedChannelStateBloatBond: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletContentStorageAssetsRecord (127) */
+    /** @name PalletContentStorageAssetsRecord (128) */
     interface PalletContentStorageAssetsRecord extends Struct {
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
         readonly expectedDataSizeFee: u128;
     }
-    /** @name PalletStorageDataObjectCreationParameters (129) */
+    /** @name PalletStorageDataObjectCreationParameters (130) */
     interface PalletStorageDataObjectCreationParameters extends Struct {
         readonly size_: u64;
         readonly ipfsContentId: Bytes;
     }
-    /** @name PalletStorageDistributionBucketIdRecord (130) */
+    /** @name PalletStorageDistributionBucketIdRecord (131) */
     interface PalletStorageDistributionBucketIdRecord extends Struct {
         readonly distributionBucketFamilyId: u64;
         readonly distributionBucketIndex: u64;
     }
-    /** @name PalletContentChannelUpdateParametersRecord (137) */
+    /** @name PalletContentChannelUpdateParametersRecord (138) */
     interface PalletContentChannelUpdateParametersRecord extends Struct {
         readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
         readonly newMeta: Option<Bytes>;
@@ -1058,7 +1043,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: Option<u32>;
     }
-    /** @name PalletContentVideoCreationParametersRecord (139) */
+    /** @name PalletContentVideoCreationParametersRecord (140) */
     interface PalletContentVideoCreationParametersRecord extends Struct {
         readonly assets: Option<PalletContentStorageAssetsRecord>;
         readonly meta: Option<Bytes>;
@@ -1067,7 +1052,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: u32;
     }
-    /** @name PalletContentVideoUpdateParametersRecord (141) */
+    /** @name PalletContentVideoUpdateParametersRecord (142) */
     interface PalletContentVideoUpdateParametersRecord extends Struct {
         readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
         readonly newMeta: Option<Bytes>;
@@ -1076,7 +1061,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: Option<u32>;
     }
-    /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (144) */
+    /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (145) */
     interface PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction extends Enum {
         readonly isHideVideo: boolean;
         readonly isHideChannel: boolean;
@@ -1090,13 +1075,13 @@ declare module '@polkadot/types/lookup' {
         readonly isUpdateChannelNftLimits: boolean;
         readonly type: 'HideVideo' | 'HideChannel' | 'ChangeChannelFeatureStatus' | 'DeleteVideo' | 'DeleteChannel' | 'DeleteVideoAssets' | 'DeleteNonVideoChannelAssets' | 'UpdateChannelNftLimits';
     }
-    /** @name PalletContentTransferCommitmentParametersBTreeMap (148) */
+    /** @name PalletContentTransferCommitmentParametersBTreeMap (149) */
     interface PalletContentTransferCommitmentParametersBTreeMap extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly transferId: u64;
     }
-    /** @name PalletContentUpdateChannelPayoutsParametersRecord (149) */
+    /** @name PalletContentUpdateChannelPayoutsParametersRecord (150) */
     interface PalletContentUpdateChannelPayoutsParametersRecord extends Struct {
         readonly commitment: Option<H256>;
         readonly payload: Option<PalletContentChannelPayoutsPayloadParametersRecord>;
@@ -1104,27 +1089,26 @@ declare module '@polkadot/types/lookup' {
         readonly maxCashoutAllowed: Option<u128>;
         readonly channelCashoutsEnabled: Option<bool>;
     }
-    /** @name PalletContentChannelPayoutsPayloadParametersRecord (150) */
+    /** @name PalletContentChannelPayoutsPayloadParametersRecord (151) */
     interface PalletContentChannelPayoutsPayloadParametersRecord extends Struct {
-        readonly uploaderAccount: AccountId32;
         readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletContentChannelFundsDestination (154) */
+    /** @name PalletContentChannelFundsDestination (155) */
     interface PalletContentChannelFundsDestination extends Enum {
         readonly isAccountId: boolean;
         readonly asAccountId: AccountId32;
         readonly isCouncilBudget: boolean;
         readonly type: 'AccountId' | 'CouncilBudget';
     }
-    /** @name PalletContentNftLimitPeriod (155) */
+    /** @name PalletContentNftLimitPeriod (156) */
     interface PalletContentNftLimitPeriod extends Enum {
         readonly isDaily: boolean;
         readonly isWeekly: boolean;
         readonly type: 'Daily' | 'Weekly';
     }
-    /** @name PalletStorageRawEvent (156) */
+    /** @name PalletStorageRawEvent (157) */
     interface PalletStorageRawEvent extends Enum {
         readonly isStorageBucketCreated: boolean;
         readonly asStorageBucketCreated: ITuple<[u64, Option<u64>, bool, u64, u64]>;
@@ -1212,7 +1196,7 @@ declare module '@polkadot/types/lookup' {
         readonly asDistributionOperatorRemarked: ITuple<[u64, PalletStorageDistributionBucketIdRecord, Bytes]>;
         readonly type: 'StorageBucketCreated' | 'StorageBucketInvitationAccepted' | 'StorageBucketsUpdatedForBag' | 'DataObjectsUploaded' | 'StorageOperatorMetadataSet' | 'StorageBucketVoucherLimitsSet' | 'PendingDataObjectsAccepted' | 'StorageBucketInvitationCancelled' | 'StorageBucketOperatorInvited' | 'StorageBucketOperatorRemoved' | 'UploadingBlockStatusUpdated' | 'DataObjectPerMegabyteFeeUpdated' | 'StorageBucketsPerBagLimitUpdated' | 'StorageBucketsVoucherMaxLimitsUpdated' | 'DataObjectsMoved' | 'DataObjectsDeleted' | 'StorageBucketStatusUpdated' | 'UpdateBlacklist' | 'DynamicBagDeleted' | 'DynamicBagCreated' | 'VoucherChanged' | 'StorageBucketDeleted' | 'NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated' | 'DistributionBucketFamilyCreated' | 'DistributionBucketFamilyDeleted' | 'DistributionBucketCreated' | 'DistributionBucketStatusUpdated' | 'DistributionBucketDeleted' | 'DistributionBucketsUpdatedForBag' | 'DistributionBucketsPerBagLimitUpdated' | 'DistributionBucketModeUpdated' | 'FamiliesInDynamicBagCreationPolicyUpdated' | 'DistributionBucketOperatorInvited' | 'DistributionBucketInvitationCancelled' | 'DistributionBucketInvitationAccepted' | 'DistributionBucketMetadataSet' | 'DistributionBucketOperatorRemoved' | 'DistributionBucketFamilyMetadataSet' | 'DataObjectStateBloatBondValueUpdated' | 'DataObjectsUpdated' | 'StorageOperatorRemarked' | 'DistributionOperatorRemarked';
     }
-    /** @name PalletStorageUploadParametersRecord (157) */
+    /** @name PalletStorageUploadParametersRecord (158) */
     interface PalletStorageUploadParametersRecord extends Struct {
         readonly bagId: PalletStorageBagIdType;
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1220,7 +1204,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletStorageBagIdType (158) */
+    /** @name PalletStorageBagIdType (159) */
     interface PalletStorageBagIdType extends Enum {
         readonly isStatic: boolean;
         readonly asStatic: PalletStorageStaticBagId;
@@ -1228,14 +1212,14 @@ declare module '@polkadot/types/lookup' {
         readonly asDynamic: PalletStorageDynamicBagIdType;
         readonly type: 'Static' | 'Dynamic';
     }
-    /** @name PalletStorageStaticBagId (159) */
+    /** @name PalletStorageStaticBagId (160) */
     interface PalletStorageStaticBagId extends Enum {
         readonly isCouncil: boolean;
         readonly isWorkingGroup: boolean;
         readonly asWorkingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
         readonly type: 'Council' | 'WorkingGroup';
     }
-    /** @name PalletStorageDynamicBagIdType (160) */
+    /** @name PalletStorageDynamicBagIdType (161) */
     interface PalletStorageDynamicBagIdType extends Enum {
         readonly isMember: boolean;
         readonly asMember: u64;
@@ -1243,7 +1227,7 @@ declare module '@polkadot/types/lookup' {
         readonly asChannel: u64;
         readonly type: 'Member' | 'Channel';
     }
-    /** @name PalletStorageDynBagCreationParametersRecord (161) */
+    /** @name PalletStorageDynBagCreationParametersRecord (162) */
     interface PalletStorageDynBagCreationParametersRecord extends Struct {
         readonly bagId: PalletStorageDynamicBagIdType;
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1253,27 +1237,27 @@ declare module '@polkadot/types/lookup' {
         readonly storageBuckets: BTreeSet<u64>;
         readonly distributionBuckets: BTreeSet<PalletStorageDistributionBucketIdRecord>;
     }
-    /** @name PalletStorageVoucher (164) */
+    /** @name PalletStorageVoucher (165) */
     interface PalletStorageVoucher extends Struct {
         readonly sizeLimit: u64;
         readonly objectsLimit: u64;
         readonly sizeUsed: u64;
         readonly objectsUsed: u64;
     }
-    /** @name PalletStorageDynamicBagType (165) */
+    /** @name PalletStorageDynamicBagType (166) */
     interface PalletStorageDynamicBagType extends Enum {
         readonly isMember: boolean;
         readonly isChannel: boolean;
         readonly type: 'Member' | 'Channel';
     }
-    /** @name PalletProjectTokenEventsRawEvent (169) */
+    /** @name PalletProjectTokenEventsRawEvent (170) */
     interface PalletProjectTokenEventsRawEvent extends Enum {
         readonly isTokenAmountTransferred: boolean;
-        readonly asTokenAmountTransferred: ITuple<[u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+        readonly asTokenAmountTransferred: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
         readonly isTokenAmountTransferredByIssuer: boolean;
-        readonly asTokenAmountTransferredByIssuer: ITuple<[u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+        readonly asTokenAmountTransferredByIssuer: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
         readonly isPatronageRateDecreasedTo: boolean;
-        readonly asPatronageRateDecreasedTo: ITuple<[u64, Perquintill]>;
+        readonly asPatronageRateDecreasedTo: ITuple<[u64, Permill]>;
         readonly isPatronageCreditClaimed: boolean;
         readonly asPatronageCreditClaimed: ITuple<[u64, u128, u64]>;
         readonly isRevenueSplitIssued: boolean;
@@ -1304,16 +1288,26 @@ declare module '@polkadot/types/lookup' {
         readonly asTransferPolicyChangedToPermissionless: u64;
         readonly isTokensBurned: boolean;
         readonly asTokensBurned: ITuple<[u64, u64, u128]>;
-        readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned';
-    }
-    /** @name PalletProjectTokenTransferPolicy (170) */
+        readonly isAmmActivated: boolean;
+        readonly asAmmActivated: ITuple<[u64, u64, PalletProjectTokenAmmCurve]>;
+        readonly isTokensBoughtOnAmm: boolean;
+        readonly asTokensBoughtOnAmm: ITuple<[u64, u64, u128, u128]>;
+        readonly isTokensSoldOnAmm: boolean;
+        readonly asTokensSoldOnAmm: ITuple<[u64, u64, u128, u128]>;
+        readonly isAmmDeactivated: boolean;
+        readonly asAmmDeactivated: ITuple<[u64, u64, u128]>;
+        readonly isMaxYearlyPatronageRateUpdated: boolean;
+        readonly asMaxYearlyPatronageRateUpdated: Permill;
+        readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'MaxYearlyPatronageRateUpdated';
+    }
+    /** @name PalletProjectTokenTransferPolicy (171) */
     interface PalletProjectTokenTransferPolicy extends Enum {
         readonly isPermissionless: boolean;
         readonly isPermissioned: boolean;
         readonly asPermissioned: H256;
         readonly type: 'Permissionless' | 'Permissioned';
     }
-    /** @name PalletProjectTokenTokenIssuanceParameters (171) */
+    /** @name PalletProjectTokenTokenIssuanceParameters (172) */
     interface PalletProjectTokenTokenIssuanceParameters extends Struct {
         readonly initialAllocation: BTreeMap<u64, PalletProjectTokenTokenAllocation>;
         readonly symbol: H256;
@@ -1321,36 +1315,39 @@ declare module '@polkadot/types/lookup' {
         readonly patronageRate: Permill;
         readonly revenueSplitRate: Permill;
     }
-    /** @name PalletProjectTokenTokenAllocation (172) */
+    /** @name PalletProjectTokenTokenAllocation (173) */
     interface PalletProjectTokenTokenAllocation extends Struct {
         readonly amount: u128;
         readonly vestingScheduleParams: Option<PalletProjectTokenVestingScheduleParams>;
     }
-    /** @name PalletProjectTokenVestingScheduleParams (173) */
+    /** @name PalletProjectTokenVestingScheduleParams (174) */
     interface PalletProjectTokenVestingScheduleParams extends Struct {
         readonly linearVestingDuration: u32;
         readonly blocksBeforeCliff: u32;
         readonly cliffAmountPercentage: Permill;
     }
-    /** @name PalletProjectTokenTransferPolicyParams (176) */
+    /** @name PalletProjectTokenTransferPolicyParams (177) */
     interface PalletProjectTokenTransferPolicyParams extends Enum {
         readonly isPermissionless: boolean;
         readonly isPermissioned: boolean;
         readonly asPermissioned: PalletProjectTokenWhitelistParams;
         readonly type: 'Permissionless' | 'Permissioned';
     }
-    /** @name PalletProjectTokenWhitelistParams (177) */
+    /** @name PalletProjectTokenWhitelistParams (178) */
     interface PalletProjectTokenWhitelistParams extends Struct {
         readonly commitment: H256;
         readonly payload: Option<PalletProjectTokenSingleDataObjectUploadParams>;
     }
-    /** @name PalletProjectTokenSingleDataObjectUploadParams (178) */
+    /** @name PalletProjectTokenSingleDataObjectUploadParams (179) */
     interface PalletProjectTokenSingleDataObjectUploadParams extends Struct {
         readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletProjectTokenValidated (185) */
+    /** @name PalletProjectTokenTransfers (185) */
+    interface PalletProjectTokenTransfers extends BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment> {
+    }
+    /** @name PalletProjectTokenValidated (186) */
     interface PalletProjectTokenValidated extends Enum {
         readonly isExisting: boolean;
         readonly asExisting: u64;
@@ -1358,17 +1355,17 @@ declare module '@polkadot/types/lookup' {
         readonly asNonExisting: u64;
         readonly type: 'Existing' | 'NonExisting';
     }
-    /** @name PalletProjectTokenValidatedPayment (186) */
+    /** @name PalletProjectTokenValidatedPayment (187) */
     interface PalletProjectTokenValidatedPayment extends Struct {
         readonly payment: PalletProjectTokenPaymentWithVesting;
         readonly vestingCleanupCandidate: Option<PalletProjectTokenVestingSource>;
     }
-    /** @name PalletProjectTokenPaymentWithVesting (187) */
+    /** @name PalletProjectTokenPaymentWithVesting (188) */
     interface PalletProjectTokenPaymentWithVesting extends Struct {
         readonly amount: u128;
         readonly vestingSchedule: Option<PalletProjectTokenVestingScheduleParams>;
     }
-    /** @name PalletProjectTokenVestingSource (189) */
+    /** @name PalletProjectTokenVestingSource (190) */
     interface PalletProjectTokenVestingSource extends Enum {
         readonly isInitialIssuance: boolean;
         readonly isSale: boolean;
@@ -1377,7 +1374,7 @@ declare module '@polkadot/types/lookup' {
         readonly asIssuerTransfer: u64;
         readonly type: 'InitialIssuance' | 'Sale' | 'IssuerTransfer';
     }
-    /** @name PalletProjectTokenTokenSale (193) */
+    /** @name PalletProjectTokenTokenSale (194) */
     interface PalletProjectTokenTokenSale extends Struct {
         readonly unitPrice: u128;
         readonly quantityLeft: u128;
@@ -1390,7 +1387,13 @@ declare module '@polkadot/types/lookup' {
         readonly capPerMember: Option<u128>;
         readonly autoFinalize: bool;
     }
-    /** @name PalletProposalsEngineRawEvent (195) */
+    /** @name PalletProjectTokenAmmCurve (195) */
+    interface PalletProjectTokenAmmCurve extends Struct {
+        readonly slope: u128;
+        readonly intercept: u128;
+        readonly providedSupply: u128;
+    }
+    /** @name PalletProposalsEngineRawEvent (196) */
     interface PalletProposalsEngineRawEvent extends Enum {
         readonly isProposalStatusUpdated: boolean;
         readonly asProposalStatusUpdated: ITuple<[u32, PalletProposalsEngineProposalStatusesProposalStatus]>;
@@ -1406,7 +1409,7 @@ declare module '@polkadot/types/lookup' {
         readonly asProposerRemarked: ITuple<[u64, u32, Bytes]>;
         readonly type: 'ProposalStatusUpdated' | 'ProposalDecisionMade' | 'ProposalExecuted' | 'Voted' | 'ProposalCancelled' | 'ProposerRemarked';
     }
-    /** @name PalletProposalsEngineProposalStatusesProposalStatus (196) */
+    /** @name PalletProposalsEngineProposalStatusesProposalStatus (197) */
     interface PalletProposalsEngineProposalStatusesProposalStatus extends Enum {
         readonly isActive: boolean;
         readonly isPendingExecution: boolean;
@@ -1414,7 +1417,7 @@ declare module '@polkadot/types/lookup' {
         readonly isPendingConstitutionality: boolean;
         readonly type: 'Active' | 'PendingExecution' | 'PendingConstitutionality';
     }
-    /** @name PalletProposalsEngineProposalStatusesProposalDecision (197) */
+    /** @name PalletProposalsEngineProposalStatusesProposalDecision (198) */
     interface PalletProposalsEngineProposalStatusesProposalDecision extends Enum {
         readonly isCanceled: boolean;
         readonly isCanceledByRuntime: boolean;
@@ -1426,13 +1429,13 @@ declare module '@polkadot/types/lookup' {
         readonly asApproved: PalletProposalsEngineProposalStatusesApprovedProposalDecision;
         readonly type: 'Canceled' | 'CanceledByRuntime' | 'Vetoed' | 'Rejected' | 'Slashed' | 'Expired' | 'Approved';
     }
-    /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (198) */
+    /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (199) */
     interface PalletProposalsEngineProposalStatusesApprovedProposalDecision extends Enum {
         readonly isPendingExecution: boolean;
         readonly isPendingConstitutionality: boolean;
         readonly type: 'PendingExecution' | 'PendingConstitutionality';
     }
-    /** @name PalletProposalsEngineProposalStatusesExecutionStatus (199) */
+    /** @name PalletProposalsEngineProposalStatusesExecutionStatus (200) */
     interface PalletProposalsEngineProposalStatusesExecutionStatus extends Enum {
         readonly isExecuted: boolean;
         readonly isExecutionFailed: boolean;
@@ -1441,7 +1444,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Executed' | 'ExecutionFailed';
     }
-    /** @name PalletProposalsEngineVoteKind (200) */
+    /** @name PalletProposalsEngineVoteKind (201) */
     interface PalletProposalsEngineVoteKind extends Enum {
         readonly isApprove: boolean;
         readonly isReject: boolean;
@@ -1449,7 +1452,7 @@ declare module '@polkadot/types/lookup' {
         readonly isAbstain: boolean;
         readonly type: 'Approve' | 'Reject' | 'Slash' | 'Abstain';
     }
-    /** @name PalletProposalsDiscussionRawEvent (201) */
+    /** @name PalletProposalsDiscussionRawEvent (202) */
     interface PalletProposalsDiscussionRawEvent extends Enum {
         readonly isThreadCreated: boolean;
         readonly asThreadCreated: ITuple<[u64, u64]>;
@@ -1463,20 +1466,20 @@ declare module '@polkadot/types/lookup' {
         readonly asPostDeleted: ITuple<[u64, u64, u64, bool]>;
         readonly type: 'ThreadCreated' | 'PostCreated' | 'PostUpdated' | 'ThreadModeChanged' | 'PostDeleted';
     }
-    /** @name PalletProposalsDiscussionThreadModeBTreeSet (202) */
+    /** @name PalletProposalsDiscussionThreadModeBTreeSet (203) */
     interface PalletProposalsDiscussionThreadModeBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletProposalsCodexRawEvent (203) */
+    /** @name PalletProposalsCodexRawEvent (204) */
     interface PalletProposalsCodexRawEvent extends Enum {
         readonly isProposalCreated: boolean;
         readonly asProposalCreated: ITuple<[u32, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, u64]>;
         readonly type: 'ProposalCreated';
     }
-    /** @name PalletProposalsCodexGeneralProposalParams (204) */
+    /** @name PalletProposalsCodexGeneralProposalParams (205) */
     interface PalletProposalsCodexGeneralProposalParams extends Struct {
         readonly memberId: u64;
         readonly title: Bytes;
@@ -1484,7 +1487,7 @@ declare module '@polkadot/types/lookup' {
         readonly stakingAccountId: Option<AccountId32>;
         readonly exactExecutionBlock: Option<u32>;
     }
-    /** @name PalletProposalsCodexProposalDetails (205) */
+    /** @name PalletProposalsCodexProposalDetails (206) */
     interface PalletProposalsCodexProposalDetails extends Enum {
         readonly isSignal: boolean;
         readonly asSignal: Bytes;
@@ -1532,38 +1535,40 @@ declare module '@polkadot/types/lookup' {
         readonly asUpdateGlobalNftLimit: ITuple<[PalletContentNftLimitPeriod, u64]>;
         readonly isUpdateChannelPayouts: boolean;
         readonly asUpdateChannelPayouts: PalletContentUpdateChannelPayoutsParametersRecord;
-        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts';
+        readonly isUpdateMaxYearlyPatronageRate: boolean;
+        readonly asUpdateMaxYearlyPatronageRate: Permill;
+        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'UpdateMaxYearlyPatronageRate';
     }
-    /** @name PalletCommonFundingRequestParameters (207) */
+    /** @name PalletCommonFundingRequestParameters (208) */
     interface PalletCommonFundingRequestParameters extends Struct {
         readonly account: AccountId32;
         readonly amount: u128;
     }
-    /** @name PalletProposalsCodexCreateOpeningParameters (208) */
+    /** @name PalletProposalsCodexCreateOpeningParameters (209) */
     interface PalletProposalsCodexCreateOpeningParameters extends Struct {
         readonly description: Bytes;
         readonly stakePolicy: PalletWorkingGroupStakePolicy;
         readonly rewardPerBlock: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletWorkingGroupStakePolicy (209) */
+    /** @name PalletWorkingGroupStakePolicy (210) */
     interface PalletWorkingGroupStakePolicy extends Struct {
         readonly stakeAmount: u128;
         readonly leavingUnstakingPeriod: u32;
     }
-    /** @name PalletProposalsCodexFillOpeningParameters (210) */
+    /** @name PalletProposalsCodexFillOpeningParameters (211) */
     interface PalletProposalsCodexFillOpeningParameters extends Struct {
         readonly openingId: u64;
         readonly applicationId: u64;
         readonly workingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletProposalsCodexTerminateRoleParameters (211) */
+    /** @name PalletProposalsCodexTerminateRoleParameters (212) */
     interface PalletProposalsCodexTerminateRoleParameters extends Struct {
         readonly workerId: u64;
         readonly slashingAmount: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletWorkingGroupRawEventInstance1 (212) */
+    /** @name PalletWorkingGroupRawEventInstance1 (213) */
     interface PalletWorkingGroupRawEventInstance1 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1616,13 +1621,13 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupOpeningType (216) */
+    /** @name PalletWorkingGroupOpeningType (217) */
     interface PalletWorkingGroupOpeningType extends Enum {
         readonly isLeader: boolean;
         readonly isRegular: boolean;
         readonly type: 'Leader' | 'Regular';
     }
-    /** @name PalletWorkingGroupApplyOnOpeningParams (217) */
+    /** @name PalletWorkingGroupApplyOnOpeningParams (218) */
     interface PalletWorkingGroupApplyOnOpeningParams extends Struct {
         readonly memberId: u64;
         readonly openingId: u64;
@@ -1631,20 +1636,20 @@ declare module '@polkadot/types/lookup' {
         readonly description: Bytes;
         readonly stakeParameters: PalletWorkingGroupStakeParameters;
     }
-    /** @name PalletWorkingGroupStakeParameters (218) */
+    /** @name PalletWorkingGroupStakeParameters (219) */
     interface PalletWorkingGroupStakeParameters extends Struct {
         readonly stake: u128;
         readonly stakingAccountId: AccountId32;
     }
-    /** @name PalletWorkingGroupInstance1 (219) */
+    /** @name PalletWorkingGroupInstance1 (220) */
     type PalletWorkingGroupInstance1 = Null;
-    /** @name PalletWorkingGroupRewardPaymentType (220) */
+    /** @name PalletWorkingGroupRewardPaymentType (221) */
     interface PalletWorkingGroupRewardPaymentType extends Enum {
         readonly isMissedReward: boolean;
         readonly isRegularReward: boolean;
         readonly type: 'MissedReward' | 'RegularReward';
     }
-    /** @name PalletWorkingGroupRawEventInstance2 (221) */
+    /** @name PalletWorkingGroupRawEventInstance2 (222) */
     interface PalletWorkingGroupRawEventInstance2 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1697,9 +1702,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance2 (222) */
+    /** @name PalletWorkingGroupInstance2 (223) */
     type PalletWorkingGroupInstance2 = Null;
-    /** @name PalletWorkingGroupRawEventInstance3 (223) */
+    /** @name PalletWorkingGroupRawEventInstance3 (224) */
     interface PalletWorkingGroupRawEventInstance3 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1752,9 +1757,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance3 (224) */
+    /** @name PalletWorkingGroupInstance3 (225) */
     type PalletWorkingGroupInstance3 = Null;
-    /** @name PalletWorkingGroupRawEventInstance4 (225) */
+    /** @name PalletWorkingGroupRawEventInstance4 (226) */
     interface PalletWorkingGroupRawEventInstance4 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1807,9 +1812,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance4 (226) */
+    /** @name PalletWorkingGroupInstance4 (227) */
     type PalletWorkingGroupInstance4 = Null;
-    /** @name PalletWorkingGroupRawEventInstance5 (227) */
+    /** @name PalletWorkingGroupRawEventInstance5 (228) */
     interface PalletWorkingGroupRawEventInstance5 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1862,9 +1867,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance5 (228) */
+    /** @name PalletWorkingGroupInstance5 (229) */
     type PalletWorkingGroupInstance5 = Null;
-    /** @name PalletWorkingGroupRawEventInstance6 (229) */
+    /** @name PalletWorkingGroupRawEventInstance6 (230) */
     interface PalletWorkingGroupRawEventInstance6 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1917,9 +1922,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance6 (230) */
+    /** @name PalletWorkingGroupInstance6 (231) */
     type PalletWorkingGroupInstance6 = Null;
-    /** @name PalletWorkingGroupRawEventInstance7 (231) */
+    /** @name PalletWorkingGroupRawEventInstance7 (232) */
     interface PalletWorkingGroupRawEventInstance7 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1972,9 +1977,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance7 (232) */
+    /** @name PalletWorkingGroupInstance7 (233) */
     type PalletWorkingGroupInstance7 = Null;
-    /** @name PalletWorkingGroupRawEventInstance8 (233) */
+    /** @name PalletWorkingGroupRawEventInstance8 (234) */
     interface PalletWorkingGroupRawEventInstance8 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2027,9 +2032,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance8 (234) */
+    /** @name PalletWorkingGroupInstance8 (235) */
     type PalletWorkingGroupInstance8 = Null;
-    /** @name PalletWorkingGroupRawEventInstance9 (235) */
+    /** @name PalletWorkingGroupRawEventInstance9 (236) */
     interface PalletWorkingGroupRawEventInstance9 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2082,9 +2087,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance9 (236) */
+    /** @name PalletWorkingGroupInstance9 (237) */
     type PalletWorkingGroupInstance9 = Null;
-    /** @name FrameSystemPhase (237) */
+    /** @name FrameSystemPhase (238) */
     interface FrameSystemPhase extends Enum {
         readonly isApplyExtrinsic: boolean;
         readonly asApplyExtrinsic: u32;
@@ -2092,12 +2097,12 @@ declare module '@polkadot/types/lookup' {
         readonly isInitialization: boolean;
         readonly type: 'ApplyExtrinsic' | 'Finalization' | 'Initialization';
     }
-    /** @name FrameSystemLastRuntimeUpgradeInfo (241) */
+    /** @name FrameSystemLastRuntimeUpgradeInfo (242) */
     interface FrameSystemLastRuntimeUpgradeInfo extends Struct {
         readonly specVersion: Compact<u32>;
         readonly specName: Text;
     }
-    /** @name FrameSystemCall (244) */
+    /** @name FrameSystemCall (245) */
     interface FrameSystemCall extends Enum {
         readonly isFillBlock: boolean;
         readonly asFillBlock: {
@@ -2138,41 +2143,41 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'FillBlock' | 'Remark' | 'SetHeapPages' | 'SetCode' | 'SetCodeWithoutChecks' | 'SetStorage' | 'KillStorage' | 'KillPrefix' | 'RemarkWithEvent';
     }
-    /** @name FrameSystemLimitsBlockWeights (247) */
+    /** @name FrameSystemLimitsBlockWeights (248) */
     interface FrameSystemLimitsBlockWeights extends Struct {
         readonly baseBlock: u64;
         readonly maxBlock: u64;
         readonly perClass: FrameSupportWeightsPerDispatchClassWeightsPerClass;
     }
-    /** @name FrameSupportWeightsPerDispatchClassWeightsPerClass (248) */
+    /** @name FrameSupportWeightsPerDispatchClassWeightsPerClass (249) */
     interface FrameSupportWeightsPerDispatchClassWeightsPerClass extends Struct {
         readonly normal: FrameSystemLimitsWeightsPerClass;
         readonly operational: FrameSystemLimitsWeightsPerClass;
         readonly mandatory: FrameSystemLimitsWeightsPerClass;
     }
-    /** @name FrameSystemLimitsWeightsPerClass (249) */
+    /** @name FrameSystemLimitsWeightsPerClass (250) */
     interface FrameSystemLimitsWeightsPerClass extends Struct {
         readonly baseExtrinsic: u64;
         readonly maxExtrinsic: Option<u64>;
         readonly maxTotal: Option<u64>;
         readonly reserved: Option<u64>;
     }
-    /** @name FrameSystemLimitsBlockLength (250) */
+    /** @name FrameSystemLimitsBlockLength (251) */
     interface FrameSystemLimitsBlockLength extends Struct {
         readonly max: FrameSupportWeightsPerDispatchClassU32;
     }
-    /** @name FrameSupportWeightsPerDispatchClassU32 (251) */
+    /** @name FrameSupportWeightsPerDispatchClassU32 (252) */
     interface FrameSupportWeightsPerDispatchClassU32 extends Struct {
         readonly normal: u32;
         readonly operational: u32;
         readonly mandatory: u32;
     }
-    /** @name FrameSupportWeightsRuntimeDbWeight (252) */
+    /** @name FrameSupportWeightsRuntimeDbWeight (253) */
     interface FrameSupportWeightsRuntimeDbWeight extends Struct {
         readonly read: u64;
         readonly write: u64;
     }
-    /** @name SpVersionRuntimeVersion (253) */
+    /** @name SpVersionRuntimeVersion (254) */
     interface SpVersionRuntimeVersion extends Struct {
         readonly specName: Text;
         readonly implName: Text;
@@ -2183,7 +2188,7 @@ declare module '@polkadot/types/lookup' {
         readonly transactionVersion: u32;
         readonly stateVersion: u8;
     }
-    /** @name FrameSystemError (259) */
+    /** @name FrameSystemError (260) */
     interface FrameSystemError extends Enum {
         readonly isInvalidSpecName: boolean;
         readonly isSpecVersionNeedsToIncrease: boolean;
@@ -2193,7 +2198,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallFiltered: boolean;
         readonly type: 'InvalidSpecName' | 'SpecVersionNeedsToIncrease' | 'FailedToExtractRuntimeVersion' | 'NonDefaultComposite' | 'NonZeroRefCount' | 'CallFiltered';
     }
-    /** @name PalletUtilityCall (260) */
+    /** @name PalletUtilityCall (261) */
     interface PalletUtilityCall extends Enum {
         readonly isBatch: boolean;
         readonly asBatch: {
@@ -2219,7 +2224,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Batch' | 'AsDerivative' | 'BatchAll' | 'DispatchAs' | 'ForceBatch';
     }
-    /** @name PalletBabeCall (263) */
+    /** @name PalletBabeCall (264) */
     interface PalletBabeCall extends Enum {
         readonly isReportEquivocation: boolean;
         readonly asReportEquivocation: {
@@ -2237,14 +2242,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'PlanConfigChange';
     }
-    /** @name SpConsensusSlotsEquivocationProof (264) */
+    /** @name SpConsensusSlotsEquivocationProof (265) */
     interface SpConsensusSlotsEquivocationProof extends Struct {
         readonly offender: SpConsensusBabeAppPublic;
         readonly slot: u64;
         readonly firstHeader: SpRuntimeHeader;
         readonly secondHeader: SpRuntimeHeader;
     }
-    /** @name SpRuntimeHeader (265) */
+    /** @name SpRuntimeHeader (266) */
     interface SpRuntimeHeader extends Struct {
         readonly parentHash: H256;
         readonly number: Compact<u32>;
@@ -2252,18 +2257,18 @@ declare module '@polkadot/types/lookup' {
         readonly extrinsicsRoot: H256;
         readonly digest: SpRuntimeDigest;
     }
-    /** @name SpRuntimeBlakeTwo256 (266) */
+    /** @name SpRuntimeBlakeTwo256 (267) */
     type SpRuntimeBlakeTwo256 = Null;
-    /** @name SpConsensusBabeAppPublic (267) */
+    /** @name SpConsensusBabeAppPublic (268) */
     interface SpConsensusBabeAppPublic extends SpCoreSr25519Public {
     }
-    /** @name SpSessionMembershipProof (269) */
+    /** @name SpSessionMembershipProof (270) */
     interface SpSessionMembershipProof extends Struct {
         readonly session: u32;
         readonly trieNodes: Vec<Bytes>;
         readonly validatorCount: u32;
     }
-    /** @name SpConsensusBabeDigestsNextConfigDescriptor (270) */
+    /** @name SpConsensusBabeDigestsNextConfigDescriptor (271) */
     interface SpConsensusBabeDigestsNextConfigDescriptor extends Enum {
         readonly isV1: boolean;
         readonly asV1: {
@@ -2272,14 +2277,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'V1';
     }
-    /** @name SpConsensusBabeAllowedSlots (271) */
+    /** @name SpConsensusBabeAllowedSlots (272) */
     interface SpConsensusBabeAllowedSlots extends Enum {
         readonly isPrimarySlots: boolean;
         readonly isPrimaryAndSecondaryPlainSlots: boolean;
         readonly isPrimaryAndSecondaryVRFSlots: boolean;
         readonly type: 'PrimarySlots' | 'PrimaryAndSecondaryPlainSlots' | 'PrimaryAndSecondaryVRFSlots';
     }
-    /** @name PalletTimestampCall (272) */
+    /** @name PalletTimestampCall (273) */
     interface PalletTimestampCall extends Enum {
         readonly isSet: boolean;
         readonly asSet: {
@@ -2287,7 +2292,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Set';
     }
-    /** @name PalletAuthorshipCall (274) */
+    /** @name PalletAuthorshipCall (275) */
     interface PalletAuthorshipCall extends Enum {
         readonly isSetUncles: boolean;
         readonly asSetUncles: {
@@ -2295,7 +2300,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'SetUncles';
     }
-    /** @name PalletBalancesCall (276) */
+    /** @name PalletBalancesCall (277) */
     interface PalletBalancesCall extends Enum {
         readonly isTransfer: boolean;
         readonly asTransfer: {
@@ -2331,7 +2336,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Transfer' | 'SetBalance' | 'ForceTransfer' | 'TransferKeepAlive' | 'TransferAll' | 'ForceUnreserve';
     }
-    /** @name PalletElectionProviderMultiPhaseCall (277) */
+    /** @name PalletElectionProviderMultiPhaseCall (278) */
     interface PalletElectionProviderMultiPhaseCall extends Enum {
         readonly isSubmitUnsigned: boolean;
         readonly asSubmitUnsigned: {
@@ -2357,13 +2362,13 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'SubmitUnsigned' | 'SetMinimumUntrustedScore' | 'SetEmergencyElectionResult' | 'Submit' | 'GovernanceFallback';
     }
-    /** @name PalletElectionProviderMultiPhaseRawSolution (278) */
+    /** @name PalletElectionProviderMultiPhaseRawSolution (279) */
     interface PalletElectionProviderMultiPhaseRawSolution extends Struct {
         readonly solution: JoystreamNodeRuntimeNposSolution16;
         readonly score: SpNposElectionsElectionScore;
         readonly round: u32;
     }
-    /** @name JoystreamNodeRuntimeNposSolution16 (279) */
+    /** @name JoystreamNodeRuntimeNposSolution16 (280) */
     interface JoystreamNodeRuntimeNposSolution16 extends Struct {
         readonly votes1: Vec<ITuple<[Compact<u32>, Compact<u16>]>>;
         readonly votes2: Vec<ITuple<[Compact<u32>, ITuple<[Compact<u16>, Compact<PerU16>]>, Compact<u16>]>>;
@@ -2382,18 +2387,18 @@ declare module '@polkadot/types/lookup' {
         readonly votes15: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
         readonly votes16: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
     }
-    /** @name SpNposElectionsElectionScore (330) */
+    /** @name SpNposElectionsElectionScore (331) */
     interface SpNposElectionsElectionScore extends Struct {
         readonly minimalStake: u128;
         readonly sumStake: u128;
         readonly sumStakeSquared: u128;
     }
-    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (331) */
+    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (332) */
     interface PalletElectionProviderMultiPhaseSolutionOrSnapshotSize extends Struct {
         readonly voters: Compact<u32>;
         readonly targets: Compact<u32>;
     }
-    /** @name SpNposElectionsSupport (335) */
+    /** @name SpNposElectionsSupport (336) */
     interface SpNposElectionsSupport extends Struct {
         readonly total: u128;
         readonly voters: Vec<ITuple<[AccountId32, u128]>>;
@@ -2658,29 +2663,7 @@ declare module '@polkadot/types/lookup' {
     /** @name SpCoreSr25519Signature (369) */
     interface SpCoreSr25519Signature extends U8aFixed {
     }
-    /** @name PalletSudoCall (370) */
-    interface PalletSudoCall extends Enum {
-        readonly isSudo: boolean;
-        readonly asSudo: {
-            readonly call: Call;
-        } & Struct;
-        readonly isSudoUncheckedWeight: boolean;
-        readonly asSudoUncheckedWeight: {
-            readonly call: Call;
-            readonly weight: u64;
-        } & Struct;
-        readonly isSetKey: boolean;
-        readonly asSetKey: {
-            readonly new_: AccountId32;
-        } & Struct;
-        readonly isSudoAs: boolean;
-        readonly asSudoAs: {
-            readonly who: AccountId32;
-            readonly call: Call;
-        } & Struct;
-        readonly type: 'Sudo' | 'SudoUncheckedWeight' | 'SetKey' | 'SudoAs';
-    }
-    /** @name PalletBagsListCall (371) */
+    /** @name PalletBagsListCall (370) */
     interface PalletBagsListCall extends Enum {
         readonly isRebag: boolean;
         readonly asRebag: {
@@ -2692,7 +2675,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Rebag' | 'PutInFrontOf';
     }
-    /** @name PalletVestingCall (372) */
+    /** @name PalletVestingCall (371) */
     interface PalletVestingCall extends Enum {
         readonly isVest: boolean;
         readonly isVestOther: boolean;
@@ -2717,13 +2700,13 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vest' | 'VestOther' | 'VestedTransfer' | 'ForceVestedTransfer' | 'MergeSchedules';
     }
-    /** @name PalletVestingVestingInfo (373) */
+    /** @name PalletVestingVestingInfo (372) */
     interface PalletVestingVestingInfo extends Struct {
         readonly locked: u128;
         readonly perBlock: u128;
         readonly startingBlock: u32;
     }
-    /** @name PalletMultisigCall (374) */
+    /** @name PalletMultisigCall (373) */
     interface PalletMultisigCall extends Enum {
         readonly isAsMultiThreshold1: boolean;
         readonly asAsMultiThreshold1: {
@@ -2756,7 +2739,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AsMultiThreshold1' | 'AsMulti' | 'ApproveAsMulti' | 'CancelAsMulti';
     }
-    /** @name PalletCouncilCall (377) */
+    /** @name PalletCouncilCall (376) */
     interface PalletCouncilCall extends Enum {
         readonly isAnnounceCandidacy: boolean;
         readonly asAnnounceCandidacy: {
@@ -2816,7 +2799,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
     }
-    /** @name PalletReferendumCall (378) */
+    /** @name PalletReferendumCall (377) */
     interface PalletReferendumCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -2829,9 +2812,10 @@ declare module '@polkadot/types/lookup' {
             readonly voteOptionId: u64;
         } & Struct;
         readonly isReleaseVoteStake: boolean;
-        readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake';
+        readonly isOptOutOfVoting: boolean;
+        readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake' | 'OptOutOfVoting';
     }
-    /** @name PalletMembershipCall (379) */
+    /** @name PalletMembershipCall (378) */
     interface PalletMembershipCall extends Enum {
         readonly isBuyMembership: boolean;
         readonly asBuyMembership: {
@@ -2906,6 +2890,7 @@ declare module '@polkadot/types/lookup' {
         readonly asMemberRemark: {
             readonly memberId: u64;
             readonly msg: Bytes;
+            readonly payment: Option<ITuple<[AccountId32, u128]>>;
         } & Struct;
         readonly isCreateMember: boolean;
         readonly asCreateMember: {
@@ -2913,7 +2898,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'BuyMembership' | 'UpdateProfile' | 'UpdateAccounts' | 'UpdateProfileVerification' | 'SetReferralCut' | 'TransferInvites' | 'InviteMember' | 'GiftMembership' | 'SetMembershipPrice' | 'SetLeaderInvitationQuota' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'AddStakingAccountCandidate' | 'RemoveStakingAccount' | 'ConfirmStakingAccount' | 'MemberRemark' | 'CreateMember';
     }
-    /** @name PalletForumCall (380) */
+    /** @name PalletForumCall (379) */
     interface PalletForumCall extends Enum {
         readonly isUpdateCategoryMembershipOfModerator: boolean;
         readonly asUpdateCategoryMembershipOfModerator: {
@@ -3023,7 +3008,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'UpdateCategoryMembershipOfModerator' | 'CreateCategory' | 'UpdateCategoryArchivalStatus' | 'UpdateCategoryTitle' | 'UpdateCategoryDescription' | 'DeleteCategory' | 'CreateThread' | 'EditThreadMetadata' | 'DeleteThread' | 'MoveThreadToCategory' | 'ModerateThread' | 'AddPost' | 'EditPostText' | 'ModeratePost' | 'DeletePosts' | 'SetStickiedThreads';
     }
-    /** @name PalletConstitutionCall (381) */
+    /** @name PalletConstitutionCall (380) */
     interface PalletConstitutionCall extends Enum {
         readonly isAmendConstitution: boolean;
         readonly asAmendConstitution: {
@@ -3031,7 +3016,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AmendConstitution';
     }
-    /** @name PalletBountyCall (382) */
+    /** @name PalletBountyCall (381) */
     interface PalletBountyCall extends Enum {
         readonly isCreateBounty: boolean;
         readonly asCreateBounty: {
@@ -3119,7 +3104,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateBounty' | 'FundBounty' | 'TerminateBounty' | 'SwitchOracle' | 'WithdrawFunding' | 'AnnounceWorkEntry' | 'SubmitWork' | 'EndWorkingPeriod' | 'SubmitOracleJudgment' | 'WithdrawEntrantStake' | 'WithdrawOracleReward' | 'ContributorRemark' | 'OracleRemark' | 'EntrantRemark' | 'CreatorRemark';
     }
-    /** @name PalletContentCall (384) */
+    /** @name PalletContentCall (383) */
     interface PalletContentCall extends Enum {
         readonly isCreateCuratorGroup: boolean;
         readonly asCreateCuratorGroup: {
@@ -3245,6 +3230,7 @@ declare module '@polkadot/types/lookup' {
         readonly isUpdateChannelPayouts: boolean;
         readonly asUpdateChannelPayouts: {
             readonly params: PalletContentUpdateChannelPayoutsParametersRecord;
+            readonly uploaderAccount: AccountId32;
         } & Struct;
         readonly isClaimChannelReward: boolean;
         readonly asClaimChannelReward: {
@@ -3450,7 +3436,7 @@ declare module '@polkadot/types/lookup' {
         readonly asCreatorTokenIssuerTransfer: {
             readonly actor: PalletContentPermissionsContentActor;
             readonly channelId: u64;
-            readonly outputs: PalletProjectTokenTransfersPaymentWithVesting;
+            readonly outputs: Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>>;
             readonly metadata: Bytes;
         } & Struct;
         readonly isMakeCreatorTokenPermissionless: boolean;
@@ -3491,37 +3477,48 @@ declare module '@polkadot/types/lookup' {
             readonly actor: PalletContentPermissionsContentActor;
             readonly channelId: u64;
         } & Struct;
-        readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'DeleteChannelAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'DeleteVideoAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'ClaimAndWithdrawChannelReward' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken';
+        readonly isActivateAmm: boolean;
+        readonly asActivateAmm: {
+            readonly actor: PalletContentPermissionsContentActor;
+            readonly channelId: u64;
+            readonly params: PalletProjectTokenAmmParams;
+        } & Struct;
+        readonly isDeactivateAmm: boolean;
+        readonly asDeactivateAmm: {
+            readonly actor: PalletContentPermissionsContentActor;
+            readonly channelId: u64;
+        } & Struct;
+        readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'DeleteChannelAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'DeleteVideoAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'ClaimAndWithdrawChannelReward' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken' | 'ActivateAmm' | 'DeactivateAmm';
     }
-    /** @name PalletContentChannelBagWitness (385) */
+    /** @name PalletContentChannelBagWitness (384) */
     interface PalletContentChannelBagWitness extends Struct {
         readonly storageBucketsNum: u32;
         readonly distributionBucketsNum: u32;
     }
-    /** @name PalletCommonMerkleTreeProofElementRecord (387) */
+    /** @name PalletCommonMerkleTreeProofElementRecord (386) */
     interface PalletCommonMerkleTreeProofElementRecord extends Struct {
         readonly hash_: H256;
         readonly side: PalletCommonMerkleTreeSide;
     }
-    /** @name PalletCommonMerkleTreeSide (388) */
+    /** @name PalletCommonMerkleTreeSide (387) */
     interface PalletCommonMerkleTreeSide extends Enum {
         readonly isLeft: boolean;
         readonly isRight: boolean;
         readonly type: 'Left' | 'Right';
     }
-    /** @name PalletContentPullPaymentElement (389) */
+    /** @name PalletContentPullPaymentElement (388) */
     interface PalletContentPullPaymentElement extends Struct {
         readonly channelId: u64;
         readonly cumulativeRewardEarned: u128;
         readonly reason: H256;
     }
-    /** @name PalletContentInitTransferParameters (390) */
+    /** @name PalletContentInitTransferParameters (389) */
     interface PalletContentInitTransferParameters extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly newOwner: PalletContentChannelOwner;
     }
-    /** @name PalletProjectTokenTokenSaleParams (391) */
+    /** @name PalletProjectTokenTokenSaleParams (390) */
     interface PalletProjectTokenTokenSaleParams extends Struct {
         readonly unitPrice: u128;
         readonly upperBoundQuantity: u128;
@@ -3531,10 +3528,12 @@ declare module '@polkadot/types/lookup' {
         readonly capPerMember: Option<u128>;
         readonly metadata: Option<Bytes>;
     }
-    /** @name PalletProjectTokenTransfersPaymentWithVesting (392) */
-    interface PalletProjectTokenTransfersPaymentWithVesting extends BTreeMap<u64, PalletProjectTokenPaymentWithVesting> {
+    /** @name PalletProjectTokenAmmParams (394) */
+    interface PalletProjectTokenAmmParams extends Struct {
+        readonly slope: u128;
+        readonly intercept: u128;
     }
-    /** @name PalletStorageCall (396) */
+    /** @name PalletStorageCall (395) */
     interface PalletStorageCall extends Enum {
         readonly isDeleteStorageBucket: boolean;
         readonly asDeleteStorageBucket: {
@@ -3698,10 +3697,6 @@ declare module '@polkadot/types/lookup' {
             readonly bucketId: PalletStorageDistributionBucketIdRecord;
             readonly metadata: Bytes;
         } & Struct;
-        readonly isSudoUploadDataObjects: boolean;
-        readonly asSudoUploadDataObjects: {
-            readonly params: PalletStorageUploadParametersRecord;
-        } & Struct;
         readonly isStorageOperatorRemark: boolean;
         readonly asStorageOperatorRemark: {
             readonly workerId: u64;
@@ -3714,15 +3709,15 @@ declare module '@polkadot/types/lookup' {
             readonly distributionBucketId: PalletStorageDistributionBucketIdRecord;
             readonly msg: Bytes;
         } & Struct;
-        readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'SudoUploadDataObjects' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
+        readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
     }
-    /** @name PalletProjectTokenCall (397) */
+    /** @name PalletProjectTokenCall (396) */
     interface PalletProjectTokenCall extends Enum {
         readonly isTransfer: boolean;
         readonly asTransfer: {
             readonly srcMemberId: u64;
             readonly tokenId: u64;
-            readonly outputs: PalletProjectTokenTransfersPayment;
+            readonly outputs: Vec<ITuple<[u64, u128]>>;
             readonly metadata: Bytes;
         } & Struct;
         readonly isBurn: boolean;
@@ -3759,25 +3754,36 @@ declare module '@polkadot/types/lookup' {
             readonly tokenId: u64;
             readonly memberId: u64;
         } & Struct;
-        readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit';
-    }
-    /** @name PalletProjectTokenTransfersPayment (398) */
-    interface PalletProjectTokenTransfersPayment extends BTreeMap<u64, PalletProjectTokenPayment> {
-    }
-    /** @name PalletProjectTokenPayment (399) */
-    interface PalletProjectTokenPayment extends Struct {
-        readonly amount: u128;
+        readonly isBuyOnAmm: boolean;
+        readonly asBuyOnAmm: {
+            readonly tokenId: u64;
+            readonly memberId: u64;
+            readonly amount: u128;
+            readonly slippageTolerance: Option<ITuple<[Permill, u128]>>;
+        } & Struct;
+        readonly isSellOnAmm: boolean;
+        readonly asSellOnAmm: {
+            readonly tokenId: u64;
+            readonly memberId: u64;
+            readonly amount: u128;
+            readonly slippageTolerance: Option<ITuple<[Permill, u128]>>;
+        } & Struct;
+        readonly isUpdateMaxYearlyPatronageRate: boolean;
+        readonly asUpdateMaxYearlyPatronageRate: {
+            readonly rate: Permill;
+        } & Struct;
+        readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'UpdateMaxYearlyPatronageRate';
     }
-    /** @name PalletProjectTokenMerkleProof (403) */
+    /** @name PalletProjectTokenMerkleProof (400) */
     interface PalletProjectTokenMerkleProof extends Vec<ITuple<[H256, PalletProjectTokenMerkleSide]>> {
     }
-    /** @name PalletProjectTokenMerkleSide (406) */
+    /** @name PalletProjectTokenMerkleSide (403) */
     interface PalletProjectTokenMerkleSide extends Enum {
         readonly isRight: boolean;
         readonly isLeft: boolean;
         readonly type: 'Right' | 'Left';
     }
-    /** @name PalletProposalsEngineCall (407) */
+    /** @name PalletProposalsEngineCall (406) */
     interface PalletProposalsEngineCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -3803,7 +3809,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vote' | 'CancelProposal' | 'VetoProposal' | 'ProposerRemark';
     }
-    /** @name PalletProposalsDiscussionCall (408) */
+    /** @name PalletProposalsDiscussionCall (407) */
     interface PalletProposalsDiscussionCall extends Enum {
         readonly isAddPost: boolean;
         readonly asAddPost: {
@@ -3833,7 +3839,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AddPost' | 'DeletePost' | 'UpdatePost' | 'ChangeThreadMode';
     }
-    /** @name PalletProposalsCodexCall (409) */
+    /** @name PalletProposalsCodexCall (408) */
     interface PalletProposalsCodexCall extends Enum {
         readonly isCreateProposal: boolean;
         readonly asCreateProposal: {
@@ -3842,7 +3848,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateProposal';
     }
-    /** @name PalletWorkingGroupCall (410) */
+    /** @name PalletWorkingGroupCall (409) */
     interface PalletWorkingGroupCall extends Enum {
         readonly isAddOpening: boolean;
         readonly asAddOpening: {
@@ -3941,14 +3947,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
     }
-    /** @name JoystreamNodeRuntimeOriginCaller (419) */
+    /** @name JoystreamNodeRuntimeOriginCaller (418) */
     interface JoystreamNodeRuntimeOriginCaller extends Enum {
         readonly isSystem: boolean;
         readonly asSystem: FrameSupportDispatchRawOrigin;
         readonly isVoid: boolean;
         readonly type: 'System' | 'Void';
     }
-    /** @name FrameSupportDispatchRawOrigin (420) */
+    /** @name FrameSupportDispatchRawOrigin (419) */
     interface FrameSupportDispatchRawOrigin extends Enum {
         readonly isRoot: boolean;
         readonly isSigned: boolean;
@@ -3956,14 +3962,14 @@ declare module '@polkadot/types/lookup' {
         readonly isNone: boolean;
         readonly type: 'Root' | 'Signed' | 'None';
     }
-    /** @name SpCoreVoid (421) */
+    /** @name SpCoreVoid (420) */
     type SpCoreVoid = Null;
-    /** @name PalletUtilityError (422) */
+    /** @name PalletUtilityError (421) */
     interface PalletUtilityError extends Enum {
         readonly isTooManyCalls: boolean;
         readonly type: 'TooManyCalls';
     }
-    /** @name SpConsensusBabeDigestsPreDigest (429) */
+    /** @name SpConsensusBabeDigestsPreDigest (428) */
     interface SpConsensusBabeDigestsPreDigest extends Enum {
         readonly isPrimary: boolean;
         readonly asPrimary: SpConsensusBabeDigestsPrimaryPreDigest;
@@ -3973,31 +3979,31 @@ declare module '@polkadot/types/lookup' {
         readonly asSecondaryVRF: SpConsensusBabeDigestsSecondaryVRFPreDigest;
         readonly type: 'Primary' | 'SecondaryPlain' | 'SecondaryVRF';
     }
-    /** @name SpConsensusBabeDigestsPrimaryPreDigest (430) */
+    /** @name SpConsensusBabeDigestsPrimaryPreDigest (429) */
     interface SpConsensusBabeDigestsPrimaryPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (431) */
+    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (430) */
     interface SpConsensusBabeDigestsSecondaryPlainPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
     }
-    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (432) */
+    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (431) */
     interface SpConsensusBabeDigestsSecondaryVRFPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeBabeEpochConfiguration (434) */
+    /** @name SpConsensusBabeBabeEpochConfiguration (433) */
     interface SpConsensusBabeBabeEpochConfiguration extends Struct {
         readonly c: ITuple<[u64, u64]>;
         readonly allowedSlots: SpConsensusBabeAllowedSlots;
     }
-    /** @name PalletBabeError (435) */
+    /** @name PalletBabeError (434) */
     interface PalletBabeError extends Enum {
         readonly isInvalidEquivocationProof: boolean;
         readonly isInvalidKeyOwnershipProof: boolean;
@@ -4005,7 +4011,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidConfiguration: boolean;
         readonly type: 'InvalidEquivocationProof' | 'InvalidKeyOwnershipProof' | 'DuplicateOffenceReport' | 'InvalidConfiguration';
     }
-    /** @name PalletAuthorshipUncleEntryItem (437) */
+    /** @name PalletAuthorshipUncleEntryItem (436) */
     interface PalletAuthorshipUncleEntryItem extends Enum {
         readonly isInclusionHeight: boolean;
         readonly asInclusionHeight: u32;
@@ -4013,7 +4019,7 @@ declare module '@polkadot/types/lookup' {
         readonly asUncle: ITuple<[H256, Option<AccountId32>]>;
         readonly type: 'InclusionHeight' | 'Uncle';
     }
-    /** @name PalletAuthorshipError (438) */
+    /** @name PalletAuthorshipError (437) */
     interface PalletAuthorshipError extends Enum {
         readonly isInvalidUncleParent: boolean;
         readonly isUnclesAlreadySet: boolean;
@@ -4024,31 +4030,31 @@ declare module '@polkadot/types/lookup' {
         readonly isOldUncle: boolean;
         readonly type: 'InvalidUncleParent' | 'UnclesAlreadySet' | 'TooManyUncles' | 'GenesisUncle' | 'TooHighUncle' | 'UncleAlreadyIncluded' | 'OldUncle';
     }
-    /** @name PalletBalancesBalanceLock (440) */
+    /** @name PalletBalancesBalanceLock (439) */
     interface PalletBalancesBalanceLock extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
         readonly reasons: PalletBalancesReasons;
     }
-    /** @name PalletBalancesReasons (441) */
+    /** @name PalletBalancesReasons (440) */
     interface PalletBalancesReasons extends Enum {
         readonly isFee: boolean;
         readonly isMisc: boolean;
         readonly isAll: boolean;
         readonly type: 'Fee' | 'Misc' | 'All';
     }
-    /** @name PalletBalancesReserveData (444) */
+    /** @name PalletBalancesReserveData (443) */
     interface PalletBalancesReserveData extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
     }
-    /** @name PalletBalancesReleases (446) */
+    /** @name PalletBalancesReleases (445) */
     interface PalletBalancesReleases extends Enum {
         readonly isV100: boolean;
         readonly isV200: boolean;
         readonly type: 'V100' | 'V200';
     }
-    /** @name PalletBalancesError (447) */
+    /** @name PalletBalancesError (446) */
     interface PalletBalancesError extends Enum {
         readonly isVestingBalance: boolean;
         readonly isLiquidityRestrictions: boolean;
@@ -4060,13 +4066,13 @@ declare module '@polkadot/types/lookup' {
         readonly isTooManyReserves: boolean;
         readonly type: 'VestingBalance' | 'LiquidityRestrictions' | 'InsufficientBalance' | 'ExistentialDeposit' | 'KeepAlive' | 'ExistingVestingSchedule' | 'DeadAccount' | 'TooManyReserves';
     }
-    /** @name PalletTransactionPaymentReleases (449) */
+    /** @name PalletTransactionPaymentReleases (448) */
     interface PalletTransactionPaymentReleases extends Enum {
         readonly isV1Ancient: boolean;
         readonly isV2: boolean;
         readonly type: 'V1Ancient' | 'V2';
     }
-    /** @name PalletElectionProviderMultiPhasePhase (450) */
+    /** @name PalletElectionProviderMultiPhasePhase (449) */
     interface PalletElectionProviderMultiPhasePhase extends Enum {
         readonly isOff: boolean;
         readonly isSigned: boolean;
@@ -4075,25 +4081,25 @@ declare module '@polkadot/types/lookup' {
         readonly isEmergency: boolean;
         readonly type: 'Off' | 'Signed' | 'Unsigned' | 'Emergency';
     }
-    /** @name PalletElectionProviderMultiPhaseReadySolution (452) */
+    /** @name PalletElectionProviderMultiPhaseReadySolution (451) */
     interface PalletElectionProviderMultiPhaseReadySolution extends Struct {
         readonly supports: Vec<ITuple<[AccountId32, SpNposElectionsSupport]>>;
         readonly score: SpNposElectionsElectionScore;
         readonly compute: PalletElectionProviderMultiPhaseElectionCompute;
     }
-    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (453) */
+    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (452) */
     interface PalletElectionProviderMultiPhaseRoundSnapshot extends Struct {
         readonly voters: Vec<ITuple<[AccountId32, u64, Vec<AccountId32>]>>;
         readonly targets: Vec<AccountId32>;
     }
-    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (461) */
+    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (460) */
     interface PalletElectionProviderMultiPhaseSignedSignedSubmission extends Struct {
         readonly who: AccountId32;
         readonly deposit: u128;
         readonly rawSolution: PalletElectionProviderMultiPhaseRawSolution;
         readonly callFee: u128;
     }
-    /** @name PalletElectionProviderMultiPhaseError (462) */
+    /** @name PalletElectionProviderMultiPhaseError (461) */
     interface PalletElectionProviderMultiPhaseError extends Enum {
         readonly isPreDispatchEarlySubmission: boolean;
         readonly isPreDispatchWrongWinnerCount: boolean;
@@ -4109,7 +4115,7 @@ declare module '@polkadot/types/lookup' {
         readonly isFallbackFailed: boolean;
         readonly type: 'PreDispatchEarlySubmission' | 'PreDispatchWrongWinnerCount' | 'PreDispatchWeakSubmission' | 'SignedQueueFull' | 'SignedCannotPayDeposit' | 'SignedInvalidWitness' | 'SignedTooMuchWeight' | 'OcwCallWrongEra' | 'MissingSnapshotMetadata' | 'InvalidSubmissionIndex' | 'CallNotAllowed' | 'FallbackFailed';
     }
-    /** @name PalletStakingStakingLedger (463) */
+    /** @name PalletStakingStakingLedger (462) */
     interface PalletStakingStakingLedger extends Struct {
         readonly stash: AccountId32;
         readonly total: Compact<u128>;
@@ -4117,28 +4123,28 @@ declare module '@polkadot/types/lookup' {
         readonly unlocking: Vec<PalletStakingUnlockChunk>;
         readonly claimedRewards: Vec<u32>;
     }
-    /** @name PalletStakingUnlockChunk (465) */
+    /** @name PalletStakingUnlockChunk (464) */
     interface PalletStakingUnlockChunk extends Struct {
         readonly value: Compact<u128>;
         readonly era: Compact<u32>;
     }
-    /** @name PalletStakingNominations (467) */
+    /** @name PalletStakingNominations (466) */
     interface PalletStakingNominations extends Struct {
         readonly targets: Vec<AccountId32>;
         readonly submittedIn: u32;
         readonly suppressed: bool;
     }
-    /** @name PalletStakingActiveEraInfo (468) */
+    /** @name PalletStakingActiveEraInfo (467) */
     interface PalletStakingActiveEraInfo extends Struct {
         readonly index: u32;
         readonly start: Option<u64>;
     }
-    /** @name PalletStakingEraRewardPoints (470) */
+    /** @name PalletStakingEraRewardPoints (469) */
     interface PalletStakingEraRewardPoints extends Struct {
         readonly total: u32;
         readonly individual: BTreeMap<AccountId32, u32>;
     }
-    /** @name PalletStakingForcing (474) */
+    /** @name PalletStakingForcing (473) */
     interface PalletStakingForcing extends Enum {
         readonly isNotForcing: boolean;
         readonly isForceNew: boolean;
@@ -4146,7 +4152,7 @@ declare module '@polkadot/types/lookup' {
         readonly isForceAlways: boolean;
         readonly type: 'NotForcing' | 'ForceNew' | 'ForceNone' | 'ForceAlways';
     }
-    /** @name PalletStakingUnappliedSlash (476) */
+    /** @name PalletStakingUnappliedSlash (475) */
     interface PalletStakingUnappliedSlash extends Struct {
         readonly validator: AccountId32;
         readonly own: u128;
@@ -4154,19 +4160,19 @@ declare module '@polkadot/types/lookup' {
         readonly reporters: Vec<AccountId32>;
         readonly payout: u128;
     }
-    /** @name PalletStakingSlashingSlashingSpans (478) */
+    /** @name PalletStakingSlashingSlashingSpans (477) */
     interface PalletStakingSlashingSlashingSpans extends Struct {
         readonly spanIndex: u32;
         readonly lastStart: u32;
         readonly lastNonzeroSlash: u32;
         readonly prior: Vec<u32>;
     }
-    /** @name PalletStakingSlashingSpanRecord (479) */
+    /** @name PalletStakingSlashingSpanRecord (478) */
     interface PalletStakingSlashingSpanRecord extends Struct {
         readonly slashed: u128;
         readonly paidOut: u128;
     }
-    /** @name PalletStakingReleases (482) */
+    /** @name PalletStakingReleases (481) */
     interface PalletStakingReleases extends Enum {
         readonly isV100Ancient: boolean;
         readonly isV200: boolean;
@@ -4179,7 +4185,7 @@ declare module '@polkadot/types/lookup' {
         readonly isV900: boolean;
         readonly type: 'V100Ancient' | 'V200' | 'V300' | 'V400' | 'V500' | 'V600' | 'V700' | 'V800' | 'V900';
     }
-    /** @name PalletStakingPalletError (483) */
+    /** @name PalletStakingPalletError (482) */
     interface PalletStakingPalletError extends Enum {
         readonly isNotController: boolean;
         readonly isNotStash: boolean;
@@ -4208,10 +4214,10 @@ declare module '@polkadot/types/lookup' {
         readonly isBondingRestricted: boolean;
         readonly type: 'NotController' | 'NotStash' | 'AlreadyBonded' | 'AlreadyPaired' | 'EmptyTargets' | 'DuplicateIndex' | 'InvalidSlashIndex' | 'InsufficientBond' | 'NoMoreChunks' | 'NoUnlockChunk' | 'FundedTarget' | 'InvalidEraToReward' | 'InvalidNumberOfNominations' | 'NotSortedAndUnique' | 'AlreadyClaimed' | 'IncorrectHistoryDepth' | 'IncorrectSlashingSpans' | 'BadState' | 'TooManyTargets' | 'BadTarget' | 'CannotChillOther' | 'TooManyNominators' | 'TooManyValidators' | 'CommissionTooLow' | 'BondingRestricted';
     }
-    /** @name SpCoreCryptoKeyTypeId (487) */
+    /** @name SpCoreCryptoKeyTypeId (486) */
     interface SpCoreCryptoKeyTypeId extends U8aFixed {
     }
-    /** @name PalletSessionError (488) */
+    /** @name PalletSessionError (487) */
     interface PalletSessionError extends Enum {
         readonly isInvalidProof: boolean;
         readonly isNoAssociatedValidatorId: boolean;
@@ -4220,7 +4226,7 @@ declare module '@polkadot/types/lookup' {
         readonly isNoAccount: boolean;
         readonly type: 'InvalidProof' | 'NoAssociatedValidatorId' | 'DuplicatedKey' | 'NoKeys' | 'NoAccount';
     }
-    /** @name PalletGrandpaStoredState (490) */
+    /** @name PalletGrandpaStoredState (489) */
     interface PalletGrandpaStoredState extends Enum {
         readonly isLive: boolean;
         readonly isPendingPause: boolean;
@@ -4236,14 +4242,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Live' | 'PendingPause' | 'Paused' | 'PendingResume';
     }
-    /** @name PalletGrandpaStoredPendingChange (491) */
+    /** @name PalletGrandpaStoredPendingChange (490) */
     interface PalletGrandpaStoredPendingChange extends Struct {
         readonly scheduledAt: u32;
         readonly delay: u32;
         readonly nextAuthorities: Vec<ITuple<[SpFinalityGrandpaAppPublic, u64]>>;
         readonly forced: Option<u32>;
     }
-    /** @name PalletGrandpaError (493) */
+    /** @name PalletGrandpaError (492) */
     interface PalletGrandpaError extends Enum {
         readonly isPauseFailed: boolean;
         readonly isResumeFailed: boolean;
@@ -4254,28 +4260,23 @@ declare module '@polkadot/types/lookup' {
         readonly isDuplicateOffenceReport: boolean;
         readonly type: 'PauseFailed' | 'ResumeFailed' | 'ChangePending' | 'TooSoon' | 'InvalidKeyOwnershipProof' | 'InvalidEquivocationProof' | 'DuplicateOffenceReport';
     }
-    /** @name PalletImOnlineBoundedOpaqueNetworkState (499) */
+    /** @name PalletImOnlineBoundedOpaqueNetworkState (498) */
     interface PalletImOnlineBoundedOpaqueNetworkState extends Struct {
         readonly peerId: Bytes;
         readonly externalAddresses: Vec<Bytes>;
     }
-    /** @name PalletImOnlineError (503) */
+    /** @name PalletImOnlineError (502) */
     interface PalletImOnlineError extends Enum {
         readonly isInvalidKey: boolean;
         readonly isDuplicatedHeartbeat: boolean;
         readonly type: 'InvalidKey' | 'DuplicatedHeartbeat';
     }
-    /** @name SpStakingOffenceOffenceDetails (504) */
+    /** @name SpStakingOffenceOffenceDetails (503) */
     interface SpStakingOffenceOffenceDetails extends Struct {
         readonly offender: ITuple<[AccountId32, PalletStakingExposure]>;
         readonly reporters: Vec<AccountId32>;
     }
-    /** @name PalletSudoError (507) */
-    interface PalletSudoError extends Enum {
-        readonly isRequireSudo: boolean;
-        readonly type: 'RequireSudo';
-    }
-    /** @name PalletBagsListListNode (508) */
+    /** @name PalletBagsListListNode (506) */
     interface PalletBagsListListNode extends Struct {
         readonly id: AccountId32;
         readonly prev: Option<AccountId32>;
@@ -4283,18 +4284,18 @@ declare module '@polkadot/types/lookup' {
         readonly bagUpper: u64;
         readonly score: u64;
     }
-    /** @name PalletBagsListListBag (509) */
+    /** @name PalletBagsListListBag (507) */
     interface PalletBagsListListBag extends Struct {
         readonly head: Option<AccountId32>;
         readonly tail: Option<AccountId32>;
     }
-    /** @name PalletBagsListError (510) */
+    /** @name PalletBagsListError (508) */
     interface PalletBagsListError extends Enum {
         readonly isList: boolean;
         readonly asList: PalletBagsListListListError;
         readonly type: 'List';
     }
-    /** @name PalletBagsListListListError (511) */
+    /** @name PalletBagsListListListError (509) */
     interface PalletBagsListListListError extends Enum {
         readonly isDuplicate: boolean;
         readonly isNotHeavier: boolean;
@@ -4302,13 +4303,13 @@ declare module '@polkadot/types/lookup' {
         readonly isNodeNotFound: boolean;
         readonly type: 'Duplicate' | 'NotHeavier' | 'NotInSameBag' | 'NodeNotFound';
     }
-    /** @name PalletVestingReleases (514) */
+    /** @name PalletVestingReleases (512) */
     interface PalletVestingReleases extends Enum {
         readonly isV0: boolean;
         readonly isV1: boolean;
         readonly type: 'V0' | 'V1';
     }
-    /** @name PalletVestingError (515) */
+    /** @name PalletVestingError (513) */
     interface PalletVestingError extends Enum {
         readonly isNotVesting: boolean;
         readonly isAtMaxVestingSchedules: boolean;
@@ -4317,14 +4318,14 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidScheduleParams: boolean;
         readonly type: 'NotVesting' | 'AtMaxVestingSchedules' | 'AmountLow' | 'ScheduleIndexOutOfBounds' | 'InvalidScheduleParams';
     }
-    /** @name PalletMultisigMultisig (517) */
+    /** @name PalletMultisigMultisig (515) */
     interface PalletMultisigMultisig extends Struct {
         readonly when: PalletMultisigTimepoint;
         readonly deposit: u128;
         readonly depositor: AccountId32;
         readonly approvals: Vec<AccountId32>;
     }
-    /** @name PalletMultisigError (519) */
+    /** @name PalletMultisigError (517) */
     interface PalletMultisigError extends Enum {
         readonly isMinimumThreshold: boolean;
         readonly isAlreadyApproved: boolean;
@@ -4342,12 +4343,12 @@ declare module '@polkadot/types/lookup' {
         readonly isAlreadyStored: boolean;
         readonly type: 'MinimumThreshold' | 'AlreadyApproved' | 'NoApprovalsNeeded' | 'TooFewSignatories' | 'TooManySignatories' | 'SignatoriesOutOfOrder' | 'SenderInSignatories' | 'NotFound' | 'NotOwner' | 'NoTimepoint' | 'WrongTimepoint' | 'UnexpectedTimepoint' | 'MaxWeightTooLow' | 'AlreadyStored';
     }
-    /** @name PalletCouncilCouncilStageUpdate (520) */
+    /** @name PalletCouncilCouncilStageUpdate (518) */
     interface PalletCouncilCouncilStageUpdate extends Struct {
         readonly stage: PalletCouncilCouncilStage;
         readonly changedAt: u32;
     }
-    /** @name PalletCouncilCouncilStage (521) */
+    /** @name PalletCouncilCouncilStage (519) */
     interface PalletCouncilCouncilStage extends Enum {
         readonly isAnnouncing: boolean;
         readonly asAnnouncing: PalletCouncilCouncilStageAnnouncing;
@@ -4357,20 +4358,20 @@ declare module '@polkadot/types/lookup' {
         readonly asIdle: PalletCouncilCouncilStageIdle;
         readonly type: 'Announcing' | 'Election' | 'Idle';
     }
-    /** @name PalletCouncilCouncilStageAnnouncing (522) */
+    /** @name PalletCouncilCouncilStageAnnouncing (520) */
     interface PalletCouncilCouncilStageAnnouncing extends Struct {
         readonly candidatesCount: u32;
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilStageElection (523) */
+    /** @name PalletCouncilCouncilStageElection (521) */
     interface PalletCouncilCouncilStageElection extends Struct {
         readonly candidatesCount: u32;
     }
-    /** @name PalletCouncilCouncilStageIdle (524) */
+    /** @name PalletCouncilCouncilStageIdle (522) */
     interface PalletCouncilCouncilStageIdle extends Struct {
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilMember (526) */
+    /** @name PalletCouncilCouncilMember (524) */
     interface PalletCouncilCouncilMember extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4379,7 +4380,7 @@ declare module '@polkadot/types/lookup' {
         readonly lastPaymentBlock: u32;
         readonly unpaidReward: u128;
     }
-    /** @name PalletCouncilCandidate (528) */
+    /** @name PalletCouncilCandidate (526) */
     interface PalletCouncilCandidate extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4388,7 +4389,7 @@ declare module '@polkadot/types/lookup' {
         readonly votePower: u128;
         readonly noteHash: Option<H256>;
     }
-    /** @name PalletCouncilError (529) */
+    /** @name PalletCouncilError (527) */
     interface PalletCouncilError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isBadOrigin: boolean;
@@ -4416,7 +4417,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceForTransfer: boolean;
         readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer';
     }
-    /** @name PalletReferendumReferendumStage (530) */
+    /** @name PalletReferendumReferendumStage (528) */
     interface PalletReferendumReferendumStage extends Enum {
         readonly isInactive: boolean;
         readonly isVoting: boolean;
@@ -4425,14 +4426,14 @@ declare module '@polkadot/types/lookup' {
         readonly asRevealing: PalletReferendumReferendumStageRevealing;
         readonly type: 'Inactive' | 'Voting' | 'Revealing';
     }
-    /** @name PalletReferendumReferendumStageVoting (532) */
+    /** @name PalletReferendumReferendumStageVoting (530) */
     interface PalletReferendumReferendumStageVoting extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumReferendumStageRevealing (533) */
+    /** @name PalletReferendumReferendumStageRevealing (531) */
     interface PalletReferendumReferendumStageRevealing extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
@@ -4440,14 +4441,14 @@ declare module '@polkadot/types/lookup' {
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumCastVote (534) */
+    /** @name PalletReferendumCastVote (532) */
     interface PalletReferendumCastVote extends Struct {
         readonly commitment: H256;
         readonly cycleId: u64;
         readonly stake: u128;
         readonly voteFor: Option<u64>;
     }
-    /** @name PalletReferendumError (535) */
+    /** @name PalletReferendumError (533) */
     interface PalletReferendumError extends Enum {
         readonly isBadOrigin: boolean;
         readonly isReferendumNotRunning: boolean;
@@ -4462,9 +4463,10 @@ declare module '@polkadot/types/lookup' {
         readonly isUnstakingVoteInSameCycle: boolean;
         readonly isSaltTooLong: boolean;
         readonly isUnstakingForbidden: boolean;
-        readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden';
+        readonly isAccountAlreadyOptedOutOfVoting: boolean;
+        readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden' | 'AccountAlreadyOptedOutOfVoting';
     }
-    /** @name PalletMembershipMembershipObject (536) */
+    /** @name PalletMembershipMembershipObject (534) */
     interface PalletMembershipMembershipObject extends Struct {
         readonly handleHash: H256;
         readonly rootAccount: AccountId32;
@@ -4472,12 +4474,12 @@ declare module '@polkadot/types/lookup' {
         readonly verified: bool;
         readonly invites: u32;
     }
-    /** @name PalletMembershipStakingAccountMemberBinding (537) */
+    /** @name PalletMembershipStakingAccountMemberBinding (535) */
     interface PalletMembershipStakingAccountMemberBinding extends Struct {
         readonly memberId: u64;
         readonly confirmed: bool;
     }
-    /** @name PalletMembershipError (538) */
+    /** @name PalletMembershipError (536) */
     interface PalletMembershipError extends Enum {
         readonly isNotEnoughBalanceToBuyMembership: boolean;
         readonly isControllerAccountRequired: boolean;
@@ -4500,9 +4502,10 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceToCoverStake: boolean;
         readonly isGifLockExceedsCredit: boolean;
         readonly isInsufficientBalanceToGift: boolean;
-        readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift';
+        readonly isInsufficientBalanceToCoverPayment: boolean;
+        readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift' | 'InsufficientBalanceToCoverPayment';
     }
-    /** @name PalletForumCategory (539) */
+    /** @name PalletForumCategory (537) */
     interface PalletForumCategory extends Struct {
         readonly titleHash: H256;
         readonly descriptionHash: H256;
@@ -4513,14 +4516,14 @@ declare module '@polkadot/types/lookup' {
         readonly parentCategoryId: Option<u64>;
         readonly stickyThreadIds: BTreeSet<u64>;
     }
-    /** @name PalletForumThread (541) */
+    /** @name PalletForumThread (539) */
     interface PalletForumThread extends Struct {
         readonly categoryId: u64;
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly numberOfEditablePosts: u64;
     }
-    /** @name PalletForumPost (542) */
+    /** @name PalletForumPost (540) */
     interface PalletForumPost extends Struct {
         readonly threadId: u64;
         readonly textHash: H256;
@@ -4528,7 +4531,7 @@ declare module '@polkadot/types/lookup' {
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletForumError (543) */
+    /** @name PalletForumError (541) */
     interface PalletForumError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isOriginNotForumLead: boolean;
@@ -4559,11 +4562,11 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxNumberOfStickiedThreadsExceeded: boolean;
         readonly type: 'ArithmeticError' | 'OriginNotForumLead' | 'ForumUserIdNotMatchAccount' | 'ModeratorIdNotMatchAccount' | 'AccountDoesNotMatchThreadAuthor' | 'ThreadDoesNotExist' | 'ModeratorModerateOriginCategory' | 'ModeratorModerateDestinationCategory' | 'ThreadMoveInvalid' | 'ThreadNotBeingUpdated' | 'InsufficientBalanceForThreadCreation' | 'CannotDeleteThreadWithOutstandingPosts' | 'PostDoesNotExist' | 'AccountDoesNotMatchPostAuthor' | 'InsufficientBalanceForPost' | 'CategoryNotBeingUpdated' | 'AncestorCategoryImmutable' | 'MaxValidCategoryDepthExceeded' | 'CategoryDoesNotExist' | 'CategoryModeratorDoesNotExist' | 'CategoryNotEmptyThreads' | 'CategoryNotEmptyCategories' | 'ModeratorCantDeleteCategory' | 'ModeratorCantUpdateCategory' | 'MapSizeLimit' | 'PathLengthShouldBeGreaterThanZero' | 'MaxNumberOfStickiedThreadsExceeded';
     }
-    /** @name PalletConstitutionConstitutionInfo (544) */
+    /** @name PalletConstitutionConstitutionInfo (542) */
     interface PalletConstitutionConstitutionInfo extends Struct {
         readonly textHash: H256;
     }
-    /** @name PalletBountyBountyRecord (545) */
+    /** @name PalletBountyBountyRecord (543) */
     interface PalletBountyBountyRecord extends Struct {
         readonly creationParams: PalletBountyBountyParametersBoundedBTreeSet;
         readonly totalFunding: u128;
@@ -4571,7 +4574,7 @@ declare module '@polkadot/types/lookup' {
         readonly activeWorkEntryCount: u32;
         readonly hasUnpaidOracleReward: bool;
     }
-    /** @name PalletBountyBountyParametersBoundedBTreeSet (547) */
+    /** @name PalletBountyBountyParametersBoundedBTreeSet (545) */
     interface PalletBountyBountyParametersBoundedBTreeSet extends Struct {
         readonly oracle: PalletBountyBountyActor;
         readonly contractType: PalletBountyAssuranceContractTypeBoundedBTreeSet;
@@ -4581,14 +4584,14 @@ declare module '@polkadot/types/lookup' {
         readonly entrantStake: u128;
         readonly fundingType: PalletBountyFundingType;
     }
-    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (548) */
+    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (546) */
     interface PalletBountyAssuranceContractTypeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletBountyBountyMilestone (549) */
+    /** @name PalletBountyBountyMilestone (547) */
     interface PalletBountyBountyMilestone extends Enum {
         readonly isCreated: boolean;
         readonly asCreated: {
@@ -4604,19 +4607,19 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Created' | 'BountyMaxFundingReached' | 'WorkSubmitted' | 'Terminated' | 'JudgmentSubmitted';
     }
-    /** @name PalletBountyContribution (551) */
+    /** @name PalletBountyContribution (549) */
     interface PalletBountyContribution extends Struct {
         readonly amount: u128;
         readonly funderStateBloatBondAmount: u128;
     }
-    /** @name PalletBountyEntryRecord (552) */
+    /** @name PalletBountyEntryRecord (550) */
     interface PalletBountyEntryRecord extends Struct {
         readonly memberId: u64;
         readonly stakingAccountId: AccountId32;
         readonly submittedAt: u32;
         readonly workSubmitted: bool;
     }
-    /** @name PalletBountyError (553) */
+    /** @name PalletBountyError (551) */
     interface PalletBountyError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isMinFundingAmountCannotBeGreaterThanMaxAmount: boolean;
@@ -4655,21 +4658,21 @@ declare module '@polkadot/types/lookup' {
         readonly isOracleRewardAlreadyWithdrawn: boolean;
         readonly type: 'ArithmeticError' | 'MinFundingAmountCannotBeGreaterThanMaxAmount' | 'BountyDoesntExist' | 'SwitchOracleOriginIsRoot' | 'InvalidStageUnexpectedFunding' | 'InvalidStageUnexpectedNoFundingContributed' | 'InvalidStageUnexpectedCancelled' | 'InvalidStageUnexpectedWorkSubmission' | 'InvalidStageUnexpectedJudgment' | 'InvalidStageUnexpectedSuccessfulBountyWithdrawal' | 'InvalidStageUnexpectedFailedBountyWithdrawal' | 'InsufficientBalanceForBounty' | 'NoBountyContributionFound' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'WorkEntryDoesntExist' | 'CherryLessThenMinimumAllowed' | 'CannotSubmitWorkToClosedContractBounty' | 'ClosedContractMemberListIsEmpty' | 'ClosedContractMemberListIsTooLarge' | 'ClosedContractMemberNotFound' | 'InvalidOracleMemberId' | 'InvalidStakingAccountForMember' | 'ZeroWinnerReward' | 'TotalRewardShouldBeEqualToTotalFunding' | 'EntrantStakeIsLessThanMininum' | 'FundingAmountCannotBeZero' | 'FundingPeriodCannotBeZero' | 'WinnerShouldHasWorkSubmission' | 'InvalidContributorActorSpecified' | 'InvalidOracleActorSpecified' | 'InvalidEntrantWorkerSpecified' | 'InvalidCreatorActorSpecified' | 'WorkEntryDoesntBelongToWorker' | 'OracleRewardAlreadyWithdrawn';
     }
-    /** @name PalletContentVideoRecord (555) */
+    /** @name PalletContentVideoRecord (553) */
     interface PalletContentVideoRecord extends Struct {
         readonly inChannel: u64;
         readonly nftStatus: Option<PalletContentNftTypesOwnedNft>;
         readonly dataObjects: BTreeSet<u64>;
         readonly videoStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
     }
-    /** @name PalletContentNftTypesOwnedNft (556) */
+    /** @name PalletContentNftTypesOwnedNft (554) */
     interface PalletContentNftTypesOwnedNft extends Struct {
         readonly owner: PalletContentNftTypesNftOwner;
         readonly transactionalStatus: PalletContentNftTypesTransactionalStatusRecord;
         readonly creatorRoyalty: Option<Perbill>;
         readonly openAuctionsNonce: u64;
     }
-    /** @name PalletContentNftTypesTransactionalStatusRecord (557) */
+    /** @name PalletContentNftTypesTransactionalStatusRecord (555) */
     interface PalletContentNftTypesTransactionalStatusRecord extends Enum {
         readonly isIdle: boolean;
         readonly isInitiatedOfferToMember: boolean;
@@ -4682,7 +4685,7 @@ declare module '@polkadot/types/lookup' {
         readonly asBuyNow: u128;
         readonly type: 'Idle' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction' | 'BuyNow';
     }
-    /** @name PalletContentNftTypesEnglishAuctionRecord (558) */
+    /** @name PalletContentNftTypesEnglishAuctionRecord (556) */
     interface PalletContentNftTypesEnglishAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4693,12 +4696,12 @@ declare module '@polkadot/types/lookup' {
         readonly minBidStep: u128;
         readonly topBid: Option<PalletContentNftTypesEnglishAuctionBid>;
     }
-    /** @name PalletContentNftTypesEnglishAuctionBid (561) */
+    /** @name PalletContentNftTypesEnglishAuctionBid (559) */
     interface PalletContentNftTypesEnglishAuctionBid extends Struct {
         readonly amount: u128;
         readonly bidderId: u64;
     }
-    /** @name PalletContentNftTypesOpenAuctionRecord (562) */
+    /** @name PalletContentNftTypesOpenAuctionRecord (560) */
     interface PalletContentNftTypesOpenAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4707,26 +4710,26 @@ declare module '@polkadot/types/lookup' {
         readonly auctionId: u64;
         readonly start: u32;
     }
-    /** @name PalletContentNftTypesNftOwner (563) */
+    /** @name PalletContentNftTypesNftOwner (561) */
     interface PalletContentNftTypesNftOwner extends Enum {
         readonly isChannelOwner: boolean;
         readonly isMember: boolean;
         readonly asMember: u64;
         readonly type: 'ChannelOwner' | 'Member';
     }
-    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (566) */
+    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (564) */
     interface PalletContentPermissionsCuratorGroupCuratorGroupRecord extends Struct {
         readonly curators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly active: bool;
         readonly permissionsByLevel: BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>;
     }
-    /** @name PalletContentNftTypesOpenAuctionBidRecord (573) */
+    /** @name PalletContentNftTypesOpenAuctionBidRecord (571) */
     interface PalletContentNftTypesOpenAuctionBidRecord extends Struct {
         readonly amount: u128;
         readonly madeAtBlock: u32;
         readonly auctionId: u64;
     }
-    /** @name PalletContentErrorsError (574) */
+    /** @name PalletContentErrorsError (572) */
     interface PalletContentErrorsError extends Enum {
         readonly isChannelStateBloatBondChanged: boolean;
         readonly isVideoStateBloatBondChanged: boolean;
@@ -4856,23 +4859,24 @@ declare module '@polkadot/types/lookup' {
         readonly isPatronageCanOnlyBeClaimedForMemberOwnedChannels: boolean;
         readonly isChannelTransfersBlockedDuringRevenueSplits: boolean;
         readonly isChannelTransfersBlockedDuringTokenSales: boolean;
-        readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales';
+        readonly isChannelTransfersBlockedDuringActiveAmm: boolean;
+        readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales' | 'ChannelTransfersBlockedDuringActiveAmm';
     }
-    /** @name PalletStorageBagRecord (575) */
+    /** @name PalletStorageBagRecord (573) */
     interface PalletStorageBagRecord extends Struct {
         readonly storedBy: BTreeSet<u64>;
         readonly distributedBy: BTreeSet<PalletStorageDistributionBucketIdRecord>;
         readonly objectsTotalSize: u64;
         readonly objectsNumber: u64;
     }
-    /** @name PalletStorageStorageBucketRecord (578) */
+    /** @name PalletStorageStorageBucketRecord (576) */
     interface PalletStorageStorageBucketRecord extends Struct {
         readonly operatorStatus: PalletStorageStorageBucketOperatorStatus;
         readonly acceptingNewBags: bool;
         readonly voucher: PalletStorageVoucher;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageStorageBucketOperatorStatus (579) */
+    /** @name PalletStorageStorageBucketOperatorStatus (577) */
     interface PalletStorageStorageBucketOperatorStatus extends Enum {
         readonly isMissing: boolean;
         readonly isInvitedStorageWorker: boolean;
@@ -4881,23 +4885,23 @@ declare module '@polkadot/types/lookup' {
         readonly asStorageWorker: ITuple<[u64, AccountId32]>;
         readonly type: 'Missing' | 'InvitedStorageWorker' | 'StorageWorker';
     }
-    /** @name PalletStorageDynamicBagCreationPolicy (581) */
+    /** @name PalletStorageDynamicBagCreationPolicy (579) */
     interface PalletStorageDynamicBagCreationPolicy extends Struct {
         readonly numberOfStorageBuckets: u32;
         readonly families: BTreeMap<u64, u32>;
     }
-    /** @name PalletStorageDataObject (584) */
+    /** @name PalletStorageDataObject (582) */
     interface PalletStorageDataObject extends Struct {
         readonly accepted: bool;
         readonly stateBloatBond: PalletCommonBloatBondRepayableBloatBond;
         readonly size_: u64;
         readonly ipfsContentId: Bytes;
     }
-    /** @name PalletStorageDistributionBucketFamilyRecord (585) */
+    /** @name PalletStorageDistributionBucketFamilyRecord (583) */
     interface PalletStorageDistributionBucketFamilyRecord extends Struct {
         readonly nextDistributionBucketIndex: u64;
     }
-    /** @name PalletStorageDistributionBucketRecord (586) */
+    /** @name PalletStorageDistributionBucketRecord (584) */
     interface PalletStorageDistributionBucketRecord extends Struct {
         readonly acceptingNewBags: bool;
         readonly distributing: bool;
@@ -4905,7 +4909,7 @@ declare module '@polkadot/types/lookup' {
         readonly operators: BTreeSet<u64>;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageError (589) */
+    /** @name PalletStorageError (587) */
     interface PalletStorageError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInvalidCidLength: boolean;
@@ -4974,7 +4978,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallDisabled: boolean;
         readonly type: 'ArithmeticError' | 'InvalidCidLength' | 'NoObjectsOnUpload' | 'StorageBucketDoesntExist' | 'StorageBucketIsNotBoundToBag' | 'StorageBucketIsBoundToBag' | 'NoStorageBucketInvitation' | 'StorageProviderAlreadySet' | 'StorageProviderMustBeSet' | 'DifferentStorageProviderInvited' | 'InvitedStorageProvider' | 'StorageBucketIdCollectionsAreEmpty' | 'StorageBucketsNumberViolatesDynamicBagCreationPolicy' | 'DistributionBucketsViolatesDynamicBagCreationPolicy' | 'EmptyContentId' | 'ZeroObjectSize' | 'InvalidStateBloatBondSourceAccount' | 'InvalidStorageProvider' | 'InsufficientBalance' | 'DataObjectDoesntExist' | 'UploadingBlocked' | 'DataObjectIdCollectionIsEmpty' | 'SourceAndDestinationBagsAreEqual' | 'DataObjectBlacklisted' | 'BlacklistSizeLimitExceeded' | 'VoucherMaxObjectSizeLimitExceeded' | 'VoucherMaxObjectNumberLimitExceeded' | 'StorageBucketObjectNumberLimitReached' | 'StorageBucketObjectSizeLimitReached' | 'InsufficientTreasuryBalance' | 'CannotDeleteNonEmptyStorageBucket' | 'DataObjectIdParamsAreEmpty' | 'StorageBucketsPerBagLimitTooLow' | 'StorageBucketsPerBagLimitTooHigh' | 'StorageBucketPerBagLimitExceeded' | 'StorageBucketDoesntAcceptNewBags' | 'DynamicBagExists' | 'DynamicBagDoesntExist' | 'StorageProviderOperatorDoesntExist' | 'DataSizeFeeChanged' | 'DataObjectStateBloatBondChanged' | 'CannotDeleteNonEmptyDynamicBag' | 'MaxDistributionBucketFamilyNumberLimitExceeded' | 'DistributionBucketFamilyDoesntExist' | 'DistributionBucketDoesntExist' | 'DistributionBucketIdCollectionsAreEmpty' | 'DistributionBucketDoesntAcceptNewBags' | 'MaxDistributionBucketNumberPerBagLimitExceeded' | 'DistributionBucketIsNotBoundToBag' | 'DistributionBucketIsBoundToBag' | 'DistributionBucketsPerBagLimitTooLow' | 'DistributionBucketsPerBagLimitTooHigh' | 'DistributionProviderOperatorDoesntExist' | 'DistributionProviderOperatorAlreadyInvited' | 'DistributionProviderOperatorSet' | 'NoDistributionBucketInvitation' | 'MustBeDistributionProviderOperatorForBucket' | 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached' | 'MaxNumberOfOperatorsPerDistributionBucketReached' | 'DistributionFamilyBoundToBagCreationPolicy' | 'MaxDataObjectSizeExceeded' | 'InvalidTransactorAccount' | 'NumberOfStorageBucketsOutsideOfAllowedContraints' | 'NumberOfDistributionBucketsOutsideOfAllowedContraints' | 'CallDisabled';
     }
-    /** @name PalletProjectTokenAccountData (590) */
+    /** @name PalletProjectTokenAccountData (588) */
     interface PalletProjectTokenAccountData extends Struct {
         readonly vestingSchedules: BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>;
         readonly amount: u128;
@@ -4983,12 +4987,12 @@ declare module '@polkadot/types/lookup' {
         readonly nextVestingTransferId: u64;
         readonly lastSaleTotalPurchasedAmount: Option<ITuple<[u32, u128]>>;
     }
-    /** @name PalletProjectTokenStakingStatus (591) */
+    /** @name PalletProjectTokenStakingStatus (589) */
     interface PalletProjectTokenStakingStatus extends Struct {
         readonly splitId: u32;
         readonly amount: u128;
     }
-    /** @name PalletProjectTokenVestingSchedule (593) */
+    /** @name PalletProjectTokenVestingSchedule (591) */
     interface PalletProjectTokenVestingSchedule extends Struct {
         readonly linearVestingStartBlock: u32;
         readonly linearVestingDuration: u32;
@@ -4996,7 +5000,7 @@ declare module '@polkadot/types/lookup' {
         readonly postCliffTotalAmount: u128;
         readonly burnedAmount: u128;
     }
-    /** @name PalletProjectTokenTokenData (600) */
+    /** @name PalletProjectTokenTokenData (598) */
     interface PalletProjectTokenTokenData extends Struct {
         readonly totalSupply: u128;
         readonly tokensIssued: u128;
@@ -5009,43 +5013,44 @@ declare module '@polkadot/types/lookup' {
         readonly revenueSplitRate: Permill;
         readonly revenueSplit: PalletProjectTokenRevenueSplitState;
         readonly nextRevenueSplitId: u32;
+        readonly ammCurve: Option<PalletProjectTokenAmmCurve>;
     }
-    /** @name PalletProjectTokenRevenueSplitState (601) */
+    /** @name PalletProjectTokenRevenueSplitState (599) */
     interface PalletProjectTokenRevenueSplitState extends Enum {
         readonly isInactive: boolean;
         readonly isActive: boolean;
         readonly asActive: PalletProjectTokenRevenueSplitInfo;
         readonly type: 'Inactive' | 'Active';
     }
-    /** @name PalletProjectTokenRevenueSplitInfo (602) */
+    /** @name PalletProjectTokenRevenueSplitInfo (600) */
     interface PalletProjectTokenRevenueSplitInfo extends Struct {
         readonly allocation: u128;
         readonly timeline: PalletProjectTokenTimeline;
         readonly dividendsClaimed: u128;
     }
-    /** @name PalletProjectTokenTimeline (603) */
+    /** @name PalletProjectTokenTimeline (601) */
     interface PalletProjectTokenTimeline extends Struct {
         readonly start: u32;
         readonly duration: u32;
     }
-    /** @name PalletProjectTokenPatronageData (605) */
+    /** @name PalletProjectTokenPatronageData (603) */
     interface PalletProjectTokenPatronageData extends Struct {
-        readonly rate: Perquintill;
+        readonly rate: Permill;
         readonly unclaimedPatronageTallyAmount: u128;
         readonly lastUnclaimedPatronageTallyBlock: u32;
     }
-    /** @name PalletProjectTokenErrorsError (607) */
+    /** @name PalletProjectTokenErrorsError (605) */
     interface PalletProjectTokenErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInsufficientTransferrableBalance: boolean;
         readonly isTokenDoesNotExist: boolean;
         readonly isAccountInformationDoesNotExist: boolean;
+        readonly isTransferDestinationMemberDoesNotExist: boolean;
         readonly isMerkleProofVerificationFailure: boolean;
-        readonly isTargetPatronageRateIsHigherThanCurrentRate: boolean;
         readonly isTokenSymbolAlreadyInUse: boolean;
         readonly isInitialAllocationToNonExistingMember: boolean;
         readonly isAccountAlreadyExists: boolean;
-        readonly isTransferDestinationMemberDoesNotExist: boolean;
+        readonly isTooManyTransferOutputs: boolean;
         readonly isTokenIssuanceNotInIdleState: boolean;
         readonly isInsufficientJoyBalance: boolean;
         readonly isJoyTransferSubjectToDusting: boolean;
@@ -5070,6 +5075,7 @@ declare module '@polkadot/types/lookup' {
         readonly isSaleCapPerMemberIsZero: boolean;
         readonly isSaleUnitPriceIsZero: boolean;
         readonly isSalePurchaseAmountIsZero: boolean;
+        readonly isCannotInitSaleIfAmmIsActive: boolean;
         readonly isRevenueSplitTimeToStartTooShort: boolean;
         readonly isRevenueSplitDurationTooShort: boolean;
         readonly isRevenueSplitAlreadyActiveForToken: boolean;
@@ -5085,9 +5091,18 @@ declare module '@polkadot/types/lookup' {
         readonly isRevenueSplitRateIsZero: boolean;
         readonly isBurnAmountIsZero: boolean;
         readonly isBurnAmountGreaterThanAccountTokensAmount: boolean;
-        readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'MerkleProofVerificationFailure' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TransferDestinationMemberDoesNotExist' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount';
+        readonly isNotInAmmState: boolean;
+        readonly isInvalidCurveParameters: boolean;
+        readonly isDeadlineExpired: boolean;
+        readonly isSlippageToleranceExceeded: boolean;
+        readonly isInsufficientTokenBalance: boolean;
+        readonly isOutstandingAmmProvidedSupplyTooLarge: boolean;
+        readonly isCurveSlopeParametersTooLow: boolean;
+        readonly isTargetPatronageRateIsHigherThanCurrentRate: boolean;
+        readonly isYearlyPatronageRateLimitExceeded: boolean;
+        readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'TransferDestinationMemberDoesNotExist' | 'MerkleProofVerificationFailure' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TooManyTransferOutputs' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'CannotInitSaleIfAmmIsActive' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount' | 'NotInAmmState' | 'InvalidCurveParameters' | 'DeadlineExpired' | 'SlippageToleranceExceeded' | 'InsufficientTokenBalance' | 'OutstandingAmmProvidedSupplyTooLarge' | 'CurveSlopeParametersTooLow' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'YearlyPatronageRateLimitExceeded';
     }
-    /** @name PalletProposalsEngineProposal (608) */
+    /** @name PalletProposalsEngineProposal (606) */
     interface PalletProposalsEngineProposal extends Struct {
         readonly parameters: PalletProposalsEngineProposalParameters;
         readonly proposerId: u64;
@@ -5098,7 +5113,7 @@ declare module '@polkadot/types/lookup' {
         readonly nrOfCouncilConfirmations: u32;
         readonly stakingAccountId: Option<AccountId32>;
     }
-    /** @name PalletProposalsEngineProposalParameters (609) */
+    /** @name PalletProposalsEngineProposalParameters (607) */
     interface PalletProposalsEngineProposalParameters extends Struct {
         readonly votingPeriod: u32;
         readonly gracePeriod: u32;
@@ -5109,14 +5124,14 @@ declare module '@polkadot/types/lookup' {
         readonly requiredStake: Option<u128>;
         readonly constitutionality: u32;
     }
-    /** @name PalletProposalsEngineVotingResults (610) */
+    /** @name PalletProposalsEngineVotingResults (608) */
     interface PalletProposalsEngineVotingResults extends Struct {
         readonly abstentions: u32;
         readonly approvals: u32;
         readonly rejections: u32;
         readonly slashes: u32;
     }
-    /** @name PalletProposalsEngineError (613) */
+    /** @name PalletProposalsEngineError (611) */
     interface PalletProposalsEngineError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isEmptyTitleProvided: boolean;
@@ -5143,26 +5158,26 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxDispatchableCallCodeSizeExceeded: boolean;
         readonly type: 'ArithmeticError' | 'EmptyTitleProvided' | 'EmptyDescriptionProvided' | 'TitleIsTooLong' | 'DescriptionIsTooLong' | 'ProposalNotFound' | 'ProposalFinalized' | 'AlreadyVoted' | 'NotAuthor' | 'MaxActiveProposalNumberExceeded' | 'EmptyStake' | 'StakeShouldBeEmpty' | 'StakeDiffersFromRequired' | 'InvalidParameterApprovalThreshold' | 'InvalidParameterSlashingThreshold' | 'RequireRootOrigin' | 'ProposalHasVotes' | 'ZeroExactExecutionBlock' | 'InvalidExactExecutionBlock' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'InvalidStakingAccountForMember' | 'MaxDispatchableCallCodeSizeExceeded';
     }
-    /** @name PalletProposalsDiscussionDiscussionThread (614) */
+    /** @name PalletProposalsDiscussionDiscussionThread (612) */
     interface PalletProposalsDiscussionDiscussionThread extends Struct {
         readonly activatedAt: u32;
         readonly authorId: u64;
         readonly mode: PalletProposalsDiscussionThreadModeBoundedBTreeSet;
     }
-    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (616) */
+    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (614) */
     interface PalletProposalsDiscussionThreadModeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletProposalsDiscussionDiscussionPost (617) */
+    /** @name PalletProposalsDiscussionDiscussionPost (615) */
     interface PalletProposalsDiscussionDiscussionPost extends Struct {
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletProposalsDiscussionError (618) */
+    /** @name PalletProposalsDiscussionError (616) */
     interface PalletProposalsDiscussionError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isThreadDoesntExist: boolean;
@@ -5176,7 +5191,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCannotDeletePost: boolean;
         readonly type: 'ArithmeticError' | 'ThreadDoesntExist' | 'PostDoesntExist' | 'RequireRootOrigin' | 'CannotPostOnClosedThread' | 'NotAuthorOrCouncilor' | 'MaxWhiteListSizeExceeded' | 'WhitelistedMemberDoesNotExist' | 'InsufficientBalanceForPost' | 'CannotDeletePost';
     }
-    /** @name PalletProposalsCodexError (619) */
+    /** @name PalletProposalsCodexError (617) */
     interface PalletProposalsCodexError extends Enum {
         readonly isSignalProposalIsEmpty: boolean;
         readonly isRuntimeProposalIsEmpty: boolean;
@@ -5204,9 +5219,10 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidLeadApplicationId: boolean;
         readonly isInvalidProposalId: boolean;
         readonly isArithmeticError: boolean;
-        readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError';
+        readonly isMaxYearlyPatronageRateCannotBeZero: boolean;
+        readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError' | 'MaxYearlyPatronageRateCannotBeZero';
     }
-    /** @name PalletWorkingGroupOpening (620) */
+    /** @name PalletWorkingGroupOpening (618) */
     interface PalletWorkingGroupOpening extends Struct {
         readonly openingType: PalletWorkingGroupOpeningType;
         readonly created: u32;
@@ -5215,7 +5231,7 @@ declare module '@polkadot/types/lookup' {
         readonly rewardPerBlock: Option<u128>;
         readonly creationStake: u128;
     }
-    /** @name PalletWorkingGroupJobApplication (621) */
+    /** @name PalletWorkingGroupJobApplication (619) */
     interface PalletWorkingGroupJobApplication extends Struct {
         readonly roleAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -5224,7 +5240,7 @@ declare module '@polkadot/types/lookup' {
         readonly descriptionHash: H256;
         readonly openingId: u64;
     }
-    /** @name PalletWorkingGroupGroupWorker (622) */
+    /** @name PalletWorkingGroupGroupWorker (620) */
     interface PalletWorkingGroupGroupWorker extends Struct {
         readonly memberId: u64;
         readonly roleAccountId: AccountId32;
@@ -5236,7 +5252,7 @@ declare module '@polkadot/types/lookup' {
         readonly missedReward: Option<u128>;
         readonly createdAt: u32;
     }
-    /** @name PalletWorkingGroupErrorsError (623) */
+    /** @name PalletWorkingGroupErrorsError (621) */
     interface PalletWorkingGroupErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isStakeBalanceCannotBeZero: boolean;
@@ -5272,7 +5288,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceForTransfer: boolean;
         readonly type: 'ArithmeticError' | 'StakeBalanceCannotBeZero' | 'OpeningDoesNotExist' | 'CannotHireMultipleLeaders' | 'WorkerApplicationDoesNotExist' | 'MaxActiveWorkerNumberExceeded' | 'SuccessfulWorkerApplicationDoesNotExist' | 'CannotHireLeaderWhenLeaderExists' | 'IsNotLeadAccount' | 'CurrentLeadNotSet' | 'WorkerDoesNotExist' | 'InvalidMemberOrigin' | 'SignerIsNotWorkerRoleAccount' | 'BelowMinimumStakes' | 'InsufficientBalanceToCoverStake' | 'ApplicationStakeDoesntMatchOpening' | 'OriginIsNotApplicant' | 'WorkerIsLeaving' | 'CannotRewardWithZero' | 'InvalidStakingAccountForMember' | 'ConflictStakesOnAccount' | 'WorkerHasNoReward' | 'UnstakingPeriodLessThanMinimum' | 'CannotSpendZero' | 'InsufficientBudgetForSpending' | 'NoApplicationsProvided' | 'CannotDecreaseStakeDeltaGreaterThanStake' | 'ApplicationsNotForOpening' | 'WorkerStorageValueTooLong' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'InsufficientBalanceForTransfer';
     }
-    /** @name SpRuntimeMultiSignature (633) */
+    /** @name SpRuntimeMultiSignature (631) */
     interface SpRuntimeMultiSignature extends Enum {
         readonly isEd25519: boolean;
         readonly asEd25519: SpCoreEd25519Signature;
@@ -5282,25 +5298,25 @@ declare module '@polkadot/types/lookup' {
         readonly asEcdsa: SpCoreEcdsaSignature;
         readonly type: 'Ed25519' | 'Sr25519' | 'Ecdsa';
     }
-    /** @name SpCoreEcdsaSignature (634) */
+    /** @name SpCoreEcdsaSignature (632) */
     interface SpCoreEcdsaSignature extends U8aFixed {
     }
-    /** @name FrameSystemExtensionsCheckNonZeroSender (637) */
+    /** @name FrameSystemExtensionsCheckNonZeroSender (635) */
     type FrameSystemExtensionsCheckNonZeroSender = Null;
-    /** @name FrameSystemExtensionsCheckSpecVersion (638) */
+    /** @name FrameSystemExtensionsCheckSpecVersion (636) */
     type FrameSystemExtensionsCheckSpecVersion = Null;
-    /** @name FrameSystemExtensionsCheckTxVersion (639) */
+    /** @name FrameSystemExtensionsCheckTxVersion (637) */
     type FrameSystemExtensionsCheckTxVersion = Null;
-    /** @name FrameSystemExtensionsCheckGenesis (640) */
+    /** @name FrameSystemExtensionsCheckGenesis (638) */
     type FrameSystemExtensionsCheckGenesis = Null;
-    /** @name FrameSystemExtensionsCheckNonce (643) */
+    /** @name FrameSystemExtensionsCheckNonce (641) */
     interface FrameSystemExtensionsCheckNonce extends Compact<u32> {
     }
-    /** @name FrameSystemExtensionsCheckWeight (644) */
+    /** @name FrameSystemExtensionsCheckWeight (642) */
     type FrameSystemExtensionsCheckWeight = Null;
-    /** @name PalletTransactionPaymentChargeTransactionPayment (645) */
+    /** @name PalletTransactionPaymentChargeTransactionPayment (643) */
     interface PalletTransactionPaymentChargeTransactionPayment extends Compact<u128> {
     }
-    /** @name JoystreamNodeRuntimeRuntime (646) */
+    /** @name JoystreamNodeRuntimeRuntime (644) */
     type JoystreamNodeRuntimeRuntime = Null;
 }
diff --git a/node_modules/@joystream/types/lib/cjs/augment/lookup.js b/node_modules/@joystream/types/lib/cjs/augment/lookup.js
index b6fcc72..766acb4 100644
--- a/node_modules/@joystream/types/lib/cjs/augment/lookup.js
+++ b/node_modules/@joystream/types/lib/cjs/augment/lookup.js
@@ -368,23 +368,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup57: pallet_sudo::pallet::Event<T>
-     **/
-    PalletSudoEvent: {
-        _enum: {
-            Sudid: {
-                sudoResult: 'Result<Null, SpRuntimeDispatchError>',
-            },
-            KeyChanged: {
-                oldSudoer: 'Option<AccountId32>',
-            },
-            SudoAsDone: {
-                sudoResult: 'Result<Null, SpRuntimeDispatchError>'
-            }
-        }
-    },
-    /**
-     * Lookup59: pallet_bags_list::pallet::Event<T, I>
+     * Lookup57: pallet_bags_list::pallet::Event<T, I>
      **/
     PalletBagsListEvent: {
         _enum: {
@@ -400,7 +384,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup60: pallet_vesting::pallet::Event<T>
+     * Lookup58: pallet_vesting::pallet::Event<T>
      **/
     PalletVestingEvent: {
         _enum: {
@@ -414,7 +398,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup61: pallet_multisig::pallet::Event<T>
+     * Lookup59: pallet_multisig::pallet::Event<T>
      **/
     PalletMultisigEvent: {
         _enum: {
@@ -445,14 +429,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup62: pallet_multisig::Timepoint<BlockNumber>
+     * Lookup60: pallet_multisig::Timepoint<BlockNumber>
      **/
     PalletMultisigTimepoint: {
         height: 'u32',
         index: 'u32'
     },
     /**
-     * Lookup63: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
+     * Lookup61: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletCouncilRawEvent: {
         _enum: {
@@ -478,7 +462,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup65: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup63: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -488,26 +472,27 @@ exports.default = {
             ReferendumFinished: 'Vec<PalletReferendumOptionResult>',
             VoteCast: '(AccountId32,H256,u128)',
             VoteRevealed: '(AccountId32,u64,Bytes)',
-            StakeReleased: 'AccountId32'
+            StakeReleased: 'AccountId32',
+            AccountOptedOutOfVoting: 'AccountId32'
         }
     },
     /**
-     * Lookup66: pallet_referendum::Instance1
+     * Lookup64: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: 'Null',
     /**
-     * Lookup68: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup66: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: 'u64',
         votePower: 'u128'
     },
     /**
-     * Lookup69: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup67: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
-            MemberInvited: '(u64,PalletMembershipInviteMembershipParameters)',
+            MemberInvited: '(u64,PalletMembershipInviteMembershipParameters,u128)',
             MembershipGifted: '(u64,PalletMembershipGiftMembershipParameters)',
             MembershipBought: '(u64,PalletMembershipBuyMembershipParameters,u32)',
             MemberProfileUpdated: '(u64,Option<Bytes>,Option<Bytes>)',
@@ -522,12 +507,12 @@ exports.default = {
             StakingAccountAdded: '(AccountId32,u64)',
             StakingAccountRemoved: '(AccountId32,u64)',
             StakingAccountConfirmed: '(AccountId32,u64)',
-            MemberRemarked: '(u64,Bytes)',
+            MemberRemarked: '(u64,Bytes,Option<(AccountId32,u128)>)',
             MemberCreated: '(u64,PalletMembershipCreateMemberParameters,u32)'
         }
     },
     /**
-     * Lookup70: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup68: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -537,7 +522,7 @@ exports.default = {
         referrerId: 'Option<u64>'
     },
     /**
-     * Lookup73: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup71: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: 'u64',
@@ -547,7 +532,7 @@ exports.default = {
         metadata: 'Bytes'
     },
     /**
-     * Lookup74: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup72: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: 'AccountId32',
@@ -557,7 +542,7 @@ exports.default = {
         isFoundingMember: 'bool'
     },
     /**
-     * Lookup75: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup73: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -570,7 +555,7 @@ exports.default = {
         applyRootAccountInvitationLock: 'Option<u128>'
     },
     /**
-     * Lookup77: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup78: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -594,7 +579,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup78: pallet_forum::PrivilegedActor<T>
+     * Lookup79: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -603,7 +588,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup79: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup80: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: 'u64',
@@ -611,7 +596,7 @@ exports.default = {
         postId: 'u64'
     },
     /**
-     * Lookup84: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup85: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -619,7 +604,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup85: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup86: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -649,7 +634,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup86: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup87: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -661,7 +646,7 @@ exports.default = {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup87: pallet_bounty::BountyActor<MemberId>
+     * Lookup88: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -670,7 +655,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup88: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup89: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -679,7 +664,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup89: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup90: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -693,7 +678,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup91: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup92: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -707,7 +692,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup94: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup95: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletUtilityRawEvent: {
         _enum: {
@@ -718,19 +703,19 @@ exports.default = {
         }
     },
     /**
-     * Lookup95: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup96: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
     },
     /**
-     * Lookup96: pallet_common::BalanceKind
+     * Lookup97: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: ['Positive', 'Negative']
     },
     /**
-     * Lookup97: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup98: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -758,9 +743,8 @@ exports.default = {
             VideoDeletedByModerator: '(PalletContentPermissionsContentActor,u64,Bytes)',
             VideoVisibilitySetByModerator: '(PalletContentPermissionsContentActor,u64,bool,Bytes)',
             VideoAssetsDeletedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,bool,Bytes)',
-            ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>)',
-            ChannelRewardUpdated: '(u128,u64)',
-            CouncilRewardClaimed: '(u64,u128)',
+            ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>,AccountId32)',
+            ChannelRewardUpdated: '(u128,u128,u64)',
             EnglishAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesEnglishAuctionParamsRecord)',
             OpenAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesOpenAuctionParamsRecord,u64)',
             NftIssued: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesNftIssuanceParametersRecord)',
@@ -792,7 +776,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup98: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup99: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -802,7 +786,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup99: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup100: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: 'PalletContentChannelOwner',
@@ -821,26 +805,26 @@ exports.default = {
         channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup103: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup104: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
-        _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken']
+        _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
     },
     /**
-     * Lookup110: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup111: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
     },
     /**
-     * Lookup113: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup114: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: 'Option<AccountId32>',
         amount: 'u128'
     },
     /**
-     * Lookup114: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup115: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -849,7 +833,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup115: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup116: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -858,14 +842,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup116: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup117: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: 'PalletContentChannelOwner',
         transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
     },
     /**
-     * Lookup117: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup118: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -873,21 +857,21 @@ exports.default = {
         transferId: 'u64'
     },
     /**
-     * Lookup118: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup119: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: 'u64',
         blockNumberPeriod: 'u32'
     },
     /**
-     * Lookup119: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup120: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: 'u64',
         lastUpdated: 'u32'
     },
     /**
-     * Lookup120: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup121: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -899,7 +883,7 @@ exports.default = {
         minBidStep: 'u128'
     },
     /**
-     * Lookup122: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup123: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -909,7 +893,7 @@ exports.default = {
         bidLockDuration: 'u32'
     },
     /**
-     * Lookup123: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup124: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: 'Option<Perbill>',
@@ -918,7 +902,7 @@ exports.default = {
         initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
     },
     /**
-     * Lookup124: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup125: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -930,7 +914,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup126: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup127: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -942,14 +926,14 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup127: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup128: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
         expectedDataSizeFee: 'u128'
     },
     /**
-     * Lookup129: pallet_storage::DataObjectCreationParameters
+     * Lookup130: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -959,14 +943,14 @@ exports.default = {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup130: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup131: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: 'u64',
         distributionBucketIndex: 'u64'
     },
     /**
-     * Lookup137: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup138: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -977,7 +961,7 @@ exports.default = {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup139: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup140: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -988,7 +972,7 @@ exports.default = {
         storageBucketsNumWitness: 'u32'
     },
     /**
-     * Lookup141: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup142: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -999,7 +983,7 @@ exports.default = {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup144: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup145: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1014,7 +998,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup148: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup149: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1022,7 +1006,7 @@ exports.default = {
         transferId: 'u64'
     },
     /**
-     * Lookup149: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>
+     * Lookup150: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: 'Option<H256>',
@@ -1032,16 +1016,15 @@ exports.default = {
         channelCashoutsEnabled: 'Option<bool>'
     },
     /**
-     * Lookup150: pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>
+     * Lookup151: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
-        uploaderAccount: 'AccountId32',
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
         expectedDataSizeFee: 'u128',
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup154: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup155: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1050,13 +1033,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup155: pallet_content::types::NftLimitPeriod
+     * Lookup156: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: ['Daily', 'Weekly']
     },
     /**
-     * Lookup156: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup157: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1105,7 +1088,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup157: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup158: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: 'PalletStorageBagIdType',
@@ -1115,7 +1098,7 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup158: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup159: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1124,7 +1107,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup159: pallet_storage::StaticBagId
+     * Lookup160: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1133,7 +1116,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup160: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup161: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1142,7 +1125,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup161: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup162: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: 'PalletStorageDynamicBagIdType',
@@ -1154,7 +1137,7 @@ exports.default = {
         distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
     },
     /**
-     * Lookup164: pallet_storage::Voucher
+     * Lookup165: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: 'u64',
@@ -1163,19 +1146,19 @@ exports.default = {
         objectsUsed: 'u64'
     },
     /**
-     * Lookup165: pallet_storage::DynamicBagType
+     * Lookup166: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: ['Member', 'Channel']
     },
     /**
-     * Lookup169: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>>
+     * Lookup170: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
-            TokenAmountTransferred: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-            TokenAmountTransferredByIssuer: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-            PatronageRateDecreasedTo: '(u64,Perquintill)',
+            TokenAmountTransferred: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+            TokenAmountTransferredByIssuer: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+            PatronageRateDecreasedTo: '(u64,Permill)',
             PatronageCreditClaimed: '(u64,u128,u64)',
             RevenueSplitIssued: '(u64,u32,u32,u128)',
             RevenueSplitFinalized: '(u64,AccountId32,u128)',
@@ -1190,11 +1173,16 @@ exports.default = {
             TokensPurchasedOnSale: '(u64,u32,u128,u64)',
             TokenSaleFinalized: '(u64,u32,u128,u128)',
             TransferPolicyChangedToPermissionless: 'u64',
-            TokensBurned: '(u64,u64,u128)'
+            TokensBurned: '(u64,u64,u128)',
+            AmmActivated: '(u64,u64,PalletProjectTokenAmmCurve)',
+            TokensBoughtOnAmm: '(u64,u64,u128,u128)',
+            TokensSoldOnAmm: '(u64,u64,u128,u128)',
+            AmmDeactivated: '(u64,u64,u128)',
+            MaxYearlyPatronageRateUpdated: 'Permill'
         }
     },
     /**
-     * Lookup170: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup171: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1203,7 +1191,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup171: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup172: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1213,14 +1201,14 @@ exports.default = {
         revenueSplitRate: 'Permill'
     },
     /**
-     * Lookup172: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup173: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: 'u128',
         vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup173: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup174: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: 'u32',
@@ -1228,7 +1216,7 @@ exports.default = {
         cliffAmountPercentage: 'Permill'
     },
     /**
-     * Lookup176: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup177: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1237,14 +1225,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup177: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup178: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: 'H256',
         payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
     },
     /**
-     * Lookup178: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup179: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1252,7 +1240,11 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup185: pallet_project_token::types::Validated<MemberId>
+     * Lookup185: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     **/
+    PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
+    /**
+     * Lookup186: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1261,21 +1253,21 @@ exports.default = {
         }
     },
     /**
-     * Lookup186: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup187: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: 'PalletProjectTokenPaymentWithVesting',
         vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
     },
     /**
-     * Lookup187: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup188: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: 'u128',
         vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup189: pallet_project_token::types::VestingSource
+     * Lookup190: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1285,7 +1277,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup193: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup194: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: 'u128',
@@ -1300,7 +1292,15 @@ exports.default = {
         autoFinalize: 'bool'
     },
     /**
-     * Lookup195: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup195: pallet_project_token::types::AmmCurve<Balance>
+     **/
+    PalletProjectTokenAmmCurve: {
+        slope: 'u128',
+        intercept: 'u128',
+        providedSupply: 'u128'
+    },
+    /**
+     * Lookup196: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1313,7 +1313,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup196: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1323,7 +1323,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1337,13 +1337,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: ['PendingExecution', 'PendingConstitutionality']
     },
     /**
-     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup200: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1354,13 +1354,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup200: pallet_proposals_engine::types::VoteKind
+     * Lookup201: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
     },
     /**
-     * Lookup201: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup202: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1372,7 +1372,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup202: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup203: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1381,7 +1381,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup203: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup204: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1389,7 +1389,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup204: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup205: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: 'u64',
@@ -1399,7 +1399,7 @@ exports.default = {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup205: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>
+     * Lookup206: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1425,18 +1425,19 @@ exports.default = {
             SetReferralCut: 'u8',
             VetoProposal: 'u32',
             UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
-            UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord'
+            UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
+            UpdateMaxYearlyPatronageRate: 'Permill'
         }
     },
     /**
-     * Lookup207: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup208: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup208: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup209: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1445,14 +1446,14 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup209: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup210: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup210: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup211: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1460,7 +1461,7 @@ exports.default = {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup211: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup212: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1468,7 +1469,7 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup212: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup213: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1500,13 +1501,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup216: pallet_working_group::types::OpeningType
+     * Lookup217: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup217: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup218: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1517,24 +1518,24 @@ exports.default = {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup218: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup219: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup219: pallet_working_group::Instance1
+     * Lookup220: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup220: pallet_working_group::types::RewardPaymentType
+     * Lookup221: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup221: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup222: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1566,11 +1567,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup222: pallet_working_group::Instance2
+     * Lookup223: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup223: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1602,11 +1603,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup224: pallet_working_group::Instance3
+     * Lookup225: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup225: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup226: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1638,11 +1639,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup226: pallet_working_group::Instance4
+     * Lookup227: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup227: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup228: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1674,11 +1675,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup228: pallet_working_group::Instance5
+     * Lookup229: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1710,11 +1711,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup230: pallet_working_group::Instance6
+     * Lookup231: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup232: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1746,11 +1747,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup232: pallet_working_group::Instance7
+     * Lookup233: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1782,11 +1783,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup234: pallet_working_group::Instance8
+     * Lookup235: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1818,11 +1819,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup236: pallet_working_group::Instance9
+     * Lookup237: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup237: frame_system::Phase
+     * Lookup238: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1832,14 +1833,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup241: frame_system::LastRuntimeUpgradeInfo
+     * Lookup242: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup244: frame_system::pallet::Call<T>
+     * Lookup245: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1877,7 +1878,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup247: frame_system::limits::BlockWeights
+     * Lookup248: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'u64',
@@ -1885,7 +1886,7 @@ exports.default = {
         perClass: 'FrameSupportWeightsPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup248: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup249: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportWeightsPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1893,7 +1894,7 @@ exports.default = {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup249: frame_system::limits::WeightsPerClass
+     * Lookup250: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'u64',
@@ -1902,13 +1903,13 @@ exports.default = {
         reserved: 'Option<u64>'
     },
     /**
-     * Lookup250: frame_system::limits::BlockLength
+     * Lookup251: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportWeightsPerDispatchClassU32'
     },
     /**
-     * Lookup251: frame_support::weights::PerDispatchClass<T>
+     * Lookup252: frame_support::weights::PerDispatchClass<T>
      **/
     FrameSupportWeightsPerDispatchClassU32: {
         normal: 'u32',
@@ -1916,14 +1917,14 @@ exports.default = {
         mandatory: 'u32'
     },
     /**
-     * Lookup252: frame_support::weights::RuntimeDbWeight
+     * Lookup253: frame_support::weights::RuntimeDbWeight
      **/
     FrameSupportWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup253: sp_version::RuntimeVersion
+     * Lookup254: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -1936,13 +1937,13 @@ exports.default = {
         stateVersion: 'u8'
     },
     /**
-     * Lookup259: frame_system::pallet::Error<T>
+     * Lookup260: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup260: pallet_utility::pallet::Call<T>
+     * Lookup261: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -1966,7 +1967,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup263: pallet_babe::pallet::Call<T>
+     * Lookup264: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -1984,7 +1985,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup264: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup265: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -1993,7 +1994,7 @@ exports.default = {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup265: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup266: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2003,15 +2004,15 @@ exports.default = {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup266: sp_runtime::traits::BlakeTwo256
+     * Lookup267: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup267: sp_consensus_babe::app::Public
+     * Lookup268: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup269: sp_session::MembershipProof
+     * Lookup270: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2019,7 +2020,7 @@ exports.default = {
         validatorCount: 'u32'
     },
     /**
-     * Lookup270: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup271: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2031,13 +2032,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup271: sp_consensus_babe::AllowedSlots
+     * Lookup272: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup272: pallet_timestamp::pallet::Call<T>
+     * Lookup273: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2047,7 +2048,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup274: pallet_authorship::pallet::Call<T>
+     * Lookup275: pallet_authorship::pallet::Call<T>
      **/
     PalletAuthorshipCall: {
         _enum: {
@@ -2057,7 +2058,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup276: pallet_balances::pallet::Call<T, I>
+     * Lookup277: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2090,7 +2091,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup277: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup278: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2114,7 +2115,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup278: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup279: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2122,7 +2123,7 @@ exports.default = {
         round: 'u32'
     },
     /**
-     * Lookup279: joystream_node_runtime::NposSolution16
+     * Lookup280: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2143,7 +2144,7 @@ exports.default = {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup330: sp_npos_elections::ElectionScore
+     * Lookup331: sp_npos_elections::ElectionScore
      **/
     SpNposElectionsElectionScore: {
         minimalStake: 'u128',
@@ -2151,14 +2152,14 @@ exports.default = {
         sumStakeSquared: 'u128'
     },
     /**
-     * Lookup331: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup332: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup335: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup336: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
@@ -2448,31 +2449,7 @@ exports.default = {
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup370: pallet_sudo::pallet::Call<T>
-     **/
-    PalletSudoCall: {
-        _enum: {
-            sudo: {
-                call: 'Call',
-            },
-            sudo_unchecked_weight: {
-                call: 'Call',
-                weight: 'u64',
-            },
-            set_key: {
-                _alias: {
-                    new_: 'new',
-                },
-                new_: 'AccountId32',
-            },
-            sudo_as: {
-                who: 'AccountId32',
-                call: 'Call'
-            }
-        }
-    },
-    /**
-     * Lookup371: pallet_bags_list::pallet::Call<T, I>
+     * Lookup370: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2485,7 +2462,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup372: pallet_vesting::pallet::Call<T>
+     * Lookup371: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2509,7 +2486,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup373: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup372: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: 'u128',
@@ -2517,7 +2494,7 @@ exports.default = {
         startingBlock: 'u32'
     },
     /**
-     * Lookup374: pallet_multisig::pallet::Call<T>
+     * Lookup373: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2549,7 +2526,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup377: pallet_council::Call<T>
+     * Lookup376: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2600,7 +2577,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup378: pallet_referendum::Call<T, I>
+     * Lookup377: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2612,11 +2589,12 @@ exports.default = {
                 salt: 'Bytes',
                 voteOptionId: 'u64',
             },
-            release_vote_stake: 'Null'
+            release_vote_stake: 'Null',
+            opt_out_of_voting: 'Null'
         }
     },
     /**
-     * Lookup379: pallet_membership::Call<T>
+     * Lookup378: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2677,6 +2655,7 @@ exports.default = {
             member_remark: {
                 memberId: 'u64',
                 msg: 'Bytes',
+                payment: 'Option<(AccountId32,u128)>',
             },
             create_member: {
                 params: 'PalletMembershipCreateMemberParameters'
@@ -2684,7 +2663,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup380: pallet_forum::Call<T>
+     * Lookup379: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2781,7 +2760,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup381: pallet_constitution::Call<T>
+     * Lookup380: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2791,7 +2770,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup382: pallet_bounty::Call<T>
+     * Lookup381: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2867,7 +2846,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup384: pallet_content::Call<T>
+     * Lookup383: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -2975,6 +2954,7 @@ exports.default = {
             },
             update_channel_payouts: {
                 params: 'PalletContentUpdateChannelPayoutsParametersRecord',
+                uploaderAccount: 'AccountId32',
             },
             claim_channel_reward: {
                 actor: 'PalletContentPermissionsContentActor',
@@ -3143,7 +3123,7 @@ exports.default = {
             creator_token_issuer_transfer: {
                 actor: 'PalletContentPermissionsContentActor',
                 channelId: 'u64',
-                outputs: 'PalletProjectTokenTransfersPaymentWithVesting',
+                outputs: 'Vec<(u64,PalletProjectTokenPaymentWithVesting)>',
                 metadata: 'Bytes',
             },
             make_creator_token_permissionless: {
@@ -3174,20 +3154,29 @@ exports.default = {
                 channelId: 'u64',
             },
             deissue_creator_token: {
+                actor: 'PalletContentPermissionsContentActor',
+                channelId: 'u64',
+            },
+            activate_amm: {
+                actor: 'PalletContentPermissionsContentActor',
+                channelId: 'u64',
+                params: 'PalletProjectTokenAmmParams',
+            },
+            deactivate_amm: {
                 actor: 'PalletContentPermissionsContentActor',
                 channelId: 'u64'
             }
         }
     },
     /**
-     * Lookup385: pallet_content::types::ChannelBagWitness
+     * Lookup384: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup387: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup386: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3197,13 +3186,13 @@ exports.default = {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup388: pallet_common::merkle_tree::Side
+     * Lookup387: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup389: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup388: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3211,7 +3200,7 @@ exports.default = {
         reason: 'H256'
     },
     /**
-     * Lookup390: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup389: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3219,7 +3208,7 @@ exports.default = {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup391: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup390: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3231,11 +3220,14 @@ exports.default = {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup392: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup394: pallet_project_token::types::AmmParams<Balance>
      **/
-    PalletProjectTokenTransfersPaymentWithVesting: 'BTreeMap<u64, PalletProjectTokenPaymentWithVesting>',
+    PalletProjectTokenAmmParams: {
+        slope: 'u128',
+        intercept: 'u128'
+    },
     /**
-     * Lookup396: pallet_storage::Call<T>
+     * Lookup395: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3369,9 +3361,6 @@ exports.default = {
                 bucketId: 'PalletStorageDistributionBucketIdRecord',
                 metadata: 'Bytes',
             },
-            sudo_upload_data_objects: {
-                params: 'PalletStorageUploadParametersRecord',
-            },
             storage_operator_remark: {
                 workerId: 'u64',
                 storageBucketId: 'u64',
@@ -3385,14 +3374,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup397: pallet_project_token::Call<T>
+     * Lookup396: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
             transfer: {
                 srcMemberId: 'u64',
                 tokenId: 'u64',
-                outputs: 'PalletProjectTokenTransfersPayment',
+                outputs: 'Vec<(u64,u128)>',
                 metadata: 'Bytes',
             },
             burn: {
@@ -3421,32 +3410,37 @@ exports.default = {
             },
             exit_revenue_split: {
                 tokenId: 'u64',
-                memberId: 'u64'
+                memberId: 'u64',
+            },
+            buy_on_amm: {
+                tokenId: 'u64',
+                memberId: 'u64',
+                amount: 'u128',
+                slippageTolerance: 'Option<(Permill,u128)>',
+            },
+            sell_on_amm: {
+                tokenId: 'u64',
+                memberId: 'u64',
+                amount: 'u128',
+                slippageTolerance: 'Option<(Permill,u128)>',
+            },
+            update_max_yearly_patronage_rate: {
+                rate: 'Permill'
             }
         }
     },
     /**
-     * Lookup398: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::Payment<Balance>>
-     **/
-    PalletProjectTokenTransfersPayment: 'BTreeMap<u64, PalletProjectTokenPayment>',
-    /**
-     * Lookup399: pallet_project_token::types::Payment<Balance>
-     **/
-    PalletProjectTokenPayment: {
-        amount: 'u128'
-    },
-    /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup400: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup403: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup407: pallet_proposals_engine::Call<T>
+     * Lookup406: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3471,7 +3465,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup408: pallet_proposals_discussion::Call<T>
+     * Lookup407: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3500,7 +3494,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup409: pallet_proposals_codex::Call<T>
+     * Lookup408: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3511,7 +3505,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup410: pallet_working_group::Call<T, I>
+     * Lookup409: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3594,7 +3588,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup419: joystream_node_runtime::OriginCaller
+     * Lookup418: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3603,7 +3597,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup420: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup419: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3613,17 +3607,17 @@ exports.default = {
         }
     },
     /**
-     * Lookup421: sp_core::Void
+     * Lookup420: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup422: pallet_utility::pallet::Error<T>
+     * Lookup421: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup429: sp_consensus_babe::digests::PreDigest
+     * Lookup428: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3634,7 +3628,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup430: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup429: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3643,14 +3637,14 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup431: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup430: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup432: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup431: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3659,20 +3653,20 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup434: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup433: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup435: pallet_babe::pallet::Error<T>
+     * Lookup434: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup437: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
+     * Lookup436: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
      **/
     PalletAuthorshipUncleEntryItem: {
         _enum: {
@@ -3681,13 +3675,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup438: pallet_authorship::pallet::Error<T>
+     * Lookup437: pallet_authorship::pallet::Error<T>
      **/
     PalletAuthorshipError: {
         _enum: ['InvalidUncleParent', 'UnclesAlreadySet', 'TooManyUncles', 'GenesisUncle', 'TooHighUncle', 'UncleAlreadyIncluded', 'OldUncle']
     },
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup439: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3695,38 +3689,38 @@ exports.default = {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup440: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup443: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup446: pallet_balances::Releases
+     * Lookup445: pallet_balances::Releases
      **/
     PalletBalancesReleases: {
         _enum: ['V1_0_0', 'V2_0_0']
     },
     /**
-     * Lookup447: pallet_balances::pallet::Error<T, I>
+     * Lookup446: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup449: pallet_transaction_payment::Releases
+     * Lookup448: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup450: pallet_election_provider_multi_phase::Phase<Bn>
+     * Lookup449: pallet_election_provider_multi_phase::Phase<Bn>
      **/
     PalletElectionProviderMultiPhasePhase: {
         _enum: {
@@ -3737,7 +3731,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
+     * Lookup451: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3745,14 +3739,14 @@ exports.default = {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup453: pallet_election_provider_multi_phase::RoundSnapshot<T>
+     * Lookup452: pallet_election_provider_multi_phase::RoundSnapshot<T>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup460: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3761,13 +3755,13 @@ exports.default = {
         callFee: 'u128'
     },
     /**
-     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup461: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed']
     },
     /**
-     * Lookup463: pallet_staking::StakingLedger<T>
+     * Lookup462: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3777,14 +3771,14 @@ exports.default = {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup465: pallet_staking::UnlockChunk<Balance>
+     * Lookup464: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup467: pallet_staking::Nominations<T>
+     * Lookup466: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3792,27 +3786,27 @@ exports.default = {
         suppressed: 'bool'
     },
     /**
-     * Lookup468: pallet_staking::ActiveEraInfo
+     * Lookup467: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup470: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup469: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup474: pallet_staking::Forcing
+     * Lookup473: pallet_staking::Forcing
      **/
     PalletStakingForcing: {
         _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']
     },
     /**
-     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup475: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3822,7 +3816,7 @@ exports.default = {
         payout: 'u128'
     },
     /**
-     * Lookup478: pallet_staking::slashing::SlashingSpans
+     * Lookup477: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -3831,36 +3825,36 @@ exports.default = {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup478: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup482: pallet_staking::Releases
+     * Lookup481: pallet_staking::Releases
      **/
     PalletStakingReleases: {
         _enum: ['V1_0_0Ancient', 'V2_0_0', 'V3_0_0', 'V4_0_0', 'V5_0_0', 'V6_0_0', 'V7_0_0', 'V8_0_0', 'V9_0_0']
     },
     /**
-     * Lookup483: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BondingRestricted']
     },
     /**
-     * Lookup487: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup488: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup490: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3877,7 +3871,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup491: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -3886,39 +3880,33 @@ exports.default = {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup493: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup499: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup503: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup504: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup507: pallet_sudo::pallet::Error<T>
-     **/
-    PalletSudoError: {
-        _enum: ['RequireSudo']
-    },
-    /**
-     * Lookup508: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -3928,14 +3916,14 @@ exports.default = {
         score: 'u64'
     },
     /**
-     * Lookup509: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup510: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3943,25 +3931,25 @@ exports.default = {
         }
     },
     /**
-     * Lookup511: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup514: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup515: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup517: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -3970,20 +3958,20 @@ exports.default = {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup519: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup520: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup521: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -3993,26 +3981,26 @@ exports.default = {
         }
     },
     /**
-     * Lookup522: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup523: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup524: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup526: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4023,7 +4011,7 @@ exports.default = {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup528: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4034,13 +4022,13 @@ exports.default = {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup529: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup530: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4050,7 +4038,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup532: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4059,7 +4047,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup533: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4069,7 +4057,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup534: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4078,13 +4066,13 @@ exports.default = {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup535: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
-        _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden']
+        _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup536: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4094,20 +4082,20 @@ exports.default = {
         invites: 'u32'
     },
     /**
-     * Lookup537: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup538: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
-        _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift']
+        _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup539: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4120,7 +4108,7 @@ exports.default = {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup541: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4129,7 +4117,7 @@ exports.default = {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup542: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4139,19 +4127,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup543: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup544: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup545: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4161,7 +4149,7 @@ exports.default = {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup547: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4173,7 +4161,7 @@ exports.default = {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup548: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4182,7 +4170,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup549: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4199,14 +4187,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup551: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup552: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4215,13 +4203,13 @@ exports.default = {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup553: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup555: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4230,7 +4218,7 @@ exports.default = {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup556: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4239,7 +4227,7 @@ exports.default = {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup557: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4251,7 +4239,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup558: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4264,14 +4252,14 @@ exports.default = {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup561: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup562: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4282,7 +4270,7 @@ exports.default = {
         start: 'u32'
     },
     /**
-     * Lookup563: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4291,7 +4279,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup566: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4299,7 +4287,7 @@ exports.default = {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup573: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4307,13 +4295,13 @@ exports.default = {
         auctionId: 'u64'
     },
     /**
-     * Lookup574: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
-        _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales']
+        _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup575: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4322,7 +4310,7 @@ exports.default = {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup578: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4331,7 +4319,7 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup579: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4341,14 +4329,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup581: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup584: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4360,13 +4348,13 @@ exports.default = {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup585: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup586: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4376,13 +4364,13 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup589: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup590: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4393,14 +4381,14 @@ exports.default = {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup591: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup593: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4410,7 +4398,7 @@ exports.default = {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup600: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4423,10 +4411,11 @@ exports.default = {
         accountsNumber: 'u64',
         revenueSplitRate: 'Permill',
         revenueSplit: 'PalletProjectTokenRevenueSplitState',
-        nextRevenueSplitId: 'u32'
+        nextRevenueSplitId: 'u32',
+        ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup601: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4435,7 +4424,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup602: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4443,28 +4432,28 @@ exports.default = {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup603: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup605: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
-        rate: 'Perquintill',
+        rate: 'Permill',
         unclaimedPatronageTallyAmount: 'u128',
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup607: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
-        _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'MerkleProofVerificationFailure', 'TargetPatronageRateIsHigherThanCurrentRate', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TransferDestinationMemberDoesNotExist', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount']
+        _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded']
     },
     /**
-     * Lookup608: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4477,7 +4466,7 @@ exports.default = {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup609: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4490,7 +4479,7 @@ exports.default = {
         constitutionality: 'u32'
     },
     /**
-     * Lookup610: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4499,13 +4488,13 @@ exports.default = {
         slashes: 'u32'
     },
     /**
-     * Lookup613: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup614: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4513,7 +4502,7 @@ exports.default = {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup616: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4522,7 +4511,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup617: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4530,19 +4519,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup618: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup619: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
-        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'MaxYearlyPatronageRateCannotBeZero']
     },
     /**
-     * Lookup620: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4553,7 +4542,7 @@ exports.default = {
         creationStake: 'u128'
     },
     /**
-     * Lookup621: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4564,7 +4553,7 @@ exports.default = {
         openingId: 'u64'
     },
     /**
-     * Lookup622: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4578,13 +4567,13 @@ exports.default = {
         createdAt: 'u32'
     },
     /**
-     * Lookup623: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup633: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4594,39 +4583,39 @@ exports.default = {
         }
     },
     /**
-     * Lookup634: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup637: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup638: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup639: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup640: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup643: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup644: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup645: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup646: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/node_modules/@joystream/types/lib/mjs/augment/lookup.js b/node_modules/@joystream/types/lib/mjs/augment/lookup.js
index b7d08da..94c4f13 100644
--- a/node_modules/@joystream/types/lib/mjs/augment/lookup.js
+++ b/node_modules/@joystream/types/lib/mjs/augment/lookup.js
@@ -366,23 +366,7 @@ export default {
         }
     },
     /**
-     * Lookup57: pallet_sudo::pallet::Event<T>
-     **/
-    PalletSudoEvent: {
-        _enum: {
-            Sudid: {
-                sudoResult: 'Result<Null, SpRuntimeDispatchError>',
-            },
-            KeyChanged: {
-                oldSudoer: 'Option<AccountId32>',
-            },
-            SudoAsDone: {
-                sudoResult: 'Result<Null, SpRuntimeDispatchError>'
-            }
-        }
-    },
-    /**
-     * Lookup59: pallet_bags_list::pallet::Event<T, I>
+     * Lookup57: pallet_bags_list::pallet::Event<T, I>
      **/
     PalletBagsListEvent: {
         _enum: {
@@ -398,7 +382,7 @@ export default {
         }
     },
     /**
-     * Lookup60: pallet_vesting::pallet::Event<T>
+     * Lookup58: pallet_vesting::pallet::Event<T>
      **/
     PalletVestingEvent: {
         _enum: {
@@ -412,7 +396,7 @@ export default {
         }
     },
     /**
-     * Lookup61: pallet_multisig::pallet::Event<T>
+     * Lookup59: pallet_multisig::pallet::Event<T>
      **/
     PalletMultisigEvent: {
         _enum: {
@@ -443,14 +427,14 @@ export default {
         }
     },
     /**
-     * Lookup62: pallet_multisig::Timepoint<BlockNumber>
+     * Lookup60: pallet_multisig::Timepoint<BlockNumber>
      **/
     PalletMultisigTimepoint: {
         height: 'u32',
         index: 'u32'
     },
     /**
-     * Lookup63: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
+     * Lookup61: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletCouncilRawEvent: {
         _enum: {
@@ -476,7 +460,7 @@ export default {
         }
     },
     /**
-     * Lookup65: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup63: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -486,26 +470,27 @@ export default {
             ReferendumFinished: 'Vec<PalletReferendumOptionResult>',
             VoteCast: '(AccountId32,H256,u128)',
             VoteRevealed: '(AccountId32,u64,Bytes)',
-            StakeReleased: 'AccountId32'
+            StakeReleased: 'AccountId32',
+            AccountOptedOutOfVoting: 'AccountId32'
         }
     },
     /**
-     * Lookup66: pallet_referendum::Instance1
+     * Lookup64: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: 'Null',
     /**
-     * Lookup68: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup66: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: 'u64',
         votePower: 'u128'
     },
     /**
-     * Lookup69: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup67: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
-            MemberInvited: '(u64,PalletMembershipInviteMembershipParameters)',
+            MemberInvited: '(u64,PalletMembershipInviteMembershipParameters,u128)',
             MembershipGifted: '(u64,PalletMembershipGiftMembershipParameters)',
             MembershipBought: '(u64,PalletMembershipBuyMembershipParameters,u32)',
             MemberProfileUpdated: '(u64,Option<Bytes>,Option<Bytes>)',
@@ -520,12 +505,12 @@ export default {
             StakingAccountAdded: '(AccountId32,u64)',
             StakingAccountRemoved: '(AccountId32,u64)',
             StakingAccountConfirmed: '(AccountId32,u64)',
-            MemberRemarked: '(u64,Bytes)',
+            MemberRemarked: '(u64,Bytes,Option<(AccountId32,u128)>)',
             MemberCreated: '(u64,PalletMembershipCreateMemberParameters,u32)'
         }
     },
     /**
-     * Lookup70: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup68: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -535,7 +520,7 @@ export default {
         referrerId: 'Option<u64>'
     },
     /**
-     * Lookup73: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup71: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: 'u64',
@@ -545,7 +530,7 @@ export default {
         metadata: 'Bytes'
     },
     /**
-     * Lookup74: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup72: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: 'AccountId32',
@@ -555,7 +540,7 @@ export default {
         isFoundingMember: 'bool'
     },
     /**
-     * Lookup75: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup73: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -568,7 +553,7 @@ export default {
         applyRootAccountInvitationLock: 'Option<u128>'
     },
     /**
-     * Lookup77: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup78: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -592,7 +577,7 @@ export default {
         }
     },
     /**
-     * Lookup78: pallet_forum::PrivilegedActor<T>
+     * Lookup79: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -601,7 +586,7 @@ export default {
         }
     },
     /**
-     * Lookup79: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup80: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: 'u64',
@@ -609,7 +594,7 @@ export default {
         postId: 'u64'
     },
     /**
-     * Lookup84: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup85: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -617,7 +602,7 @@ export default {
         }
     },
     /**
-     * Lookup85: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup86: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -647,7 +632,7 @@ export default {
         }
     },
     /**
-     * Lookup86: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup87: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -659,7 +644,7 @@ export default {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup87: pallet_bounty::BountyActor<MemberId>
+     * Lookup88: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -668,7 +653,7 @@ export default {
         }
     },
     /**
-     * Lookup88: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup89: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -677,7 +662,7 @@ export default {
         }
     },
     /**
-     * Lookup89: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup90: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -691,7 +676,7 @@ export default {
         }
     },
     /**
-     * Lookup91: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup92: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -705,7 +690,7 @@ export default {
         }
     },
     /**
-     * Lookup94: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup95: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletUtilityRawEvent: {
         _enum: {
@@ -716,19 +701,19 @@ export default {
         }
     },
     /**
-     * Lookup95: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup96: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
     },
     /**
-     * Lookup96: pallet_common::BalanceKind
+     * Lookup97: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: ['Positive', 'Negative']
     },
     /**
-     * Lookup97: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup98: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -756,9 +741,8 @@ export default {
             VideoDeletedByModerator: '(PalletContentPermissionsContentActor,u64,Bytes)',
             VideoVisibilitySetByModerator: '(PalletContentPermissionsContentActor,u64,bool,Bytes)',
             VideoAssetsDeletedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,bool,Bytes)',
-            ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>)',
-            ChannelRewardUpdated: '(u128,u64)',
-            CouncilRewardClaimed: '(u64,u128)',
+            ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>,AccountId32)',
+            ChannelRewardUpdated: '(u128,u128,u64)',
             EnglishAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesEnglishAuctionParamsRecord)',
             OpenAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesOpenAuctionParamsRecord,u64)',
             NftIssued: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesNftIssuanceParametersRecord)',
@@ -790,7 +774,7 @@ export default {
         }
     },
     /**
-     * Lookup98: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup99: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -800,7 +784,7 @@ export default {
         }
     },
     /**
-     * Lookup99: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup100: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: 'PalletContentChannelOwner',
@@ -819,26 +803,26 @@ export default {
         channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup103: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup104: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
-        _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken']
+        _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
     },
     /**
-     * Lookup110: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup111: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
     },
     /**
-     * Lookup113: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup114: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: 'Option<AccountId32>',
         amount: 'u128'
     },
     /**
-     * Lookup114: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup115: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -847,7 +831,7 @@ export default {
         }
     },
     /**
-     * Lookup115: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup116: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -856,14 +840,14 @@ export default {
         }
     },
     /**
-     * Lookup116: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup117: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: 'PalletContentChannelOwner',
         transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
     },
     /**
-     * Lookup117: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup118: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -871,21 +855,21 @@ export default {
         transferId: 'u64'
     },
     /**
-     * Lookup118: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup119: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: 'u64',
         blockNumberPeriod: 'u32'
     },
     /**
-     * Lookup119: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup120: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: 'u64',
         lastUpdated: 'u32'
     },
     /**
-     * Lookup120: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup121: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -897,7 +881,7 @@ export default {
         minBidStep: 'u128'
     },
     /**
-     * Lookup122: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup123: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -907,7 +891,7 @@ export default {
         bidLockDuration: 'u32'
     },
     /**
-     * Lookup123: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup124: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: 'Option<Perbill>',
@@ -916,7 +900,7 @@ export default {
         initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
     },
     /**
-     * Lookup124: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup125: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -928,7 +912,7 @@ export default {
         }
     },
     /**
-     * Lookup126: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup127: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -940,14 +924,14 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup127: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup128: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
         expectedDataSizeFee: 'u128'
     },
     /**
-     * Lookup129: pallet_storage::DataObjectCreationParameters
+     * Lookup130: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -957,14 +941,14 @@ export default {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup130: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup131: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: 'u64',
         distributionBucketIndex: 'u64'
     },
     /**
-     * Lookup137: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup138: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -975,7 +959,7 @@ export default {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup139: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup140: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -986,7 +970,7 @@ export default {
         storageBucketsNumWitness: 'u32'
     },
     /**
-     * Lookup141: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup142: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -997,7 +981,7 @@ export default {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup144: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup145: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1012,7 +996,7 @@ export default {
         }
     },
     /**
-     * Lookup148: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup149: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1020,7 +1004,7 @@ export default {
         transferId: 'u64'
     },
     /**
-     * Lookup149: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>
+     * Lookup150: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: 'Option<H256>',
@@ -1030,16 +1014,15 @@ export default {
         channelCashoutsEnabled: 'Option<bool>'
     },
     /**
-     * Lookup150: pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>
+     * Lookup151: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
-        uploaderAccount: 'AccountId32',
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
         expectedDataSizeFee: 'u128',
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup154: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup155: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1048,13 +1031,13 @@ export default {
         }
     },
     /**
-     * Lookup155: pallet_content::types::NftLimitPeriod
+     * Lookup156: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: ['Daily', 'Weekly']
     },
     /**
-     * Lookup156: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup157: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1103,7 +1086,7 @@ export default {
         }
     },
     /**
-     * Lookup157: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup158: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: 'PalletStorageBagIdType',
@@ -1113,7 +1096,7 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup158: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup159: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1122,7 +1105,7 @@ export default {
         }
     },
     /**
-     * Lookup159: pallet_storage::StaticBagId
+     * Lookup160: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1131,7 +1114,7 @@ export default {
         }
     },
     /**
-     * Lookup160: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup161: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1140,7 +1123,7 @@ export default {
         }
     },
     /**
-     * Lookup161: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup162: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: 'PalletStorageDynamicBagIdType',
@@ -1152,7 +1135,7 @@ export default {
         distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
     },
     /**
-     * Lookup164: pallet_storage::Voucher
+     * Lookup165: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: 'u64',
@@ -1161,19 +1144,19 @@ export default {
         objectsUsed: 'u64'
     },
     /**
-     * Lookup165: pallet_storage::DynamicBagType
+     * Lookup166: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: ['Member', 'Channel']
     },
     /**
-     * Lookup169: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>>
+     * Lookup170: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
-            TokenAmountTransferred: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-            TokenAmountTransferredByIssuer: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-            PatronageRateDecreasedTo: '(u64,Perquintill)',
+            TokenAmountTransferred: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+            TokenAmountTransferredByIssuer: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+            PatronageRateDecreasedTo: '(u64,Permill)',
             PatronageCreditClaimed: '(u64,u128,u64)',
             RevenueSplitIssued: '(u64,u32,u32,u128)',
             RevenueSplitFinalized: '(u64,AccountId32,u128)',
@@ -1188,11 +1171,16 @@ export default {
             TokensPurchasedOnSale: '(u64,u32,u128,u64)',
             TokenSaleFinalized: '(u64,u32,u128,u128)',
             TransferPolicyChangedToPermissionless: 'u64',
-            TokensBurned: '(u64,u64,u128)'
+            TokensBurned: '(u64,u64,u128)',
+            AmmActivated: '(u64,u64,PalletProjectTokenAmmCurve)',
+            TokensBoughtOnAmm: '(u64,u64,u128,u128)',
+            TokensSoldOnAmm: '(u64,u64,u128,u128)',
+            AmmDeactivated: '(u64,u64,u128)',
+            MaxYearlyPatronageRateUpdated: 'Permill'
         }
     },
     /**
-     * Lookup170: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup171: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1201,7 +1189,7 @@ export default {
         }
     },
     /**
-     * Lookup171: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup172: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1211,14 +1199,14 @@ export default {
         revenueSplitRate: 'Permill'
     },
     /**
-     * Lookup172: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup173: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: 'u128',
         vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup173: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup174: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: 'u32',
@@ -1226,7 +1214,7 @@ export default {
         cliffAmountPercentage: 'Permill'
     },
     /**
-     * Lookup176: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup177: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1235,14 +1223,14 @@ export default {
         }
     },
     /**
-     * Lookup177: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup178: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: 'H256',
         payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
     },
     /**
-     * Lookup178: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup179: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1250,7 +1238,11 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup185: pallet_project_token::types::Validated<MemberId>
+     * Lookup185: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     **/
+    PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
+    /**
+     * Lookup186: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1259,21 +1251,21 @@ export default {
         }
     },
     /**
-     * Lookup186: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup187: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: 'PalletProjectTokenPaymentWithVesting',
         vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
     },
     /**
-     * Lookup187: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup188: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: 'u128',
         vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup189: pallet_project_token::types::VestingSource
+     * Lookup190: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1283,7 +1275,7 @@ export default {
         }
     },
     /**
-     * Lookup193: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup194: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: 'u128',
@@ -1298,7 +1290,15 @@ export default {
         autoFinalize: 'bool'
     },
     /**
-     * Lookup195: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup195: pallet_project_token::types::AmmCurve<Balance>
+     **/
+    PalletProjectTokenAmmCurve: {
+        slope: 'u128',
+        intercept: 'u128',
+        providedSupply: 'u128'
+    },
+    /**
+     * Lookup196: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1311,7 +1311,7 @@ export default {
         }
     },
     /**
-     * Lookup196: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1321,7 +1321,7 @@ export default {
         }
     },
     /**
-     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1335,13 +1335,13 @@ export default {
         }
     },
     /**
-     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: ['PendingExecution', 'PendingConstitutionality']
     },
     /**
-     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup200: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1352,13 +1352,13 @@ export default {
         }
     },
     /**
-     * Lookup200: pallet_proposals_engine::types::VoteKind
+     * Lookup201: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
     },
     /**
-     * Lookup201: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup202: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1370,7 +1370,7 @@ export default {
         }
     },
     /**
-     * Lookup202: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup203: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1379,7 +1379,7 @@ export default {
         }
     },
     /**
-     * Lookup203: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup204: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1387,7 +1387,7 @@ export default {
         }
     },
     /**
-     * Lookup204: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup205: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: 'u64',
@@ -1397,7 +1397,7 @@ export default {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup205: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>
+     * Lookup206: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1423,18 +1423,19 @@ export default {
             SetReferralCut: 'u8',
             VetoProposal: 'u32',
             UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
-            UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord'
+            UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
+            UpdateMaxYearlyPatronageRate: 'Permill'
         }
     },
     /**
-     * Lookup207: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup208: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup208: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup209: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1443,14 +1444,14 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup209: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup210: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup210: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup211: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1458,7 +1459,7 @@ export default {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup211: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup212: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1466,7 +1467,7 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup212: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup213: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1498,13 +1499,13 @@ export default {
         }
     },
     /**
-     * Lookup216: pallet_working_group::types::OpeningType
+     * Lookup217: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup217: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup218: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1515,24 +1516,24 @@ export default {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup218: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup219: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup219: pallet_working_group::Instance1
+     * Lookup220: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup220: pallet_working_group::types::RewardPaymentType
+     * Lookup221: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup221: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup222: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1564,11 +1565,11 @@ export default {
         }
     },
     /**
-     * Lookup222: pallet_working_group::Instance2
+     * Lookup223: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup223: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1600,11 +1601,11 @@ export default {
         }
     },
     /**
-     * Lookup224: pallet_working_group::Instance3
+     * Lookup225: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup225: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup226: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1636,11 +1637,11 @@ export default {
         }
     },
     /**
-     * Lookup226: pallet_working_group::Instance4
+     * Lookup227: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup227: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup228: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1672,11 +1673,11 @@ export default {
         }
     },
     /**
-     * Lookup228: pallet_working_group::Instance5
+     * Lookup229: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1708,11 +1709,11 @@ export default {
         }
     },
     /**
-     * Lookup230: pallet_working_group::Instance6
+     * Lookup231: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup232: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1744,11 +1745,11 @@ export default {
         }
     },
     /**
-     * Lookup232: pallet_working_group::Instance7
+     * Lookup233: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1780,11 +1781,11 @@ export default {
         }
     },
     /**
-     * Lookup234: pallet_working_group::Instance8
+     * Lookup235: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1816,11 +1817,11 @@ export default {
         }
     },
     /**
-     * Lookup236: pallet_working_group::Instance9
+     * Lookup237: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup237: frame_system::Phase
+     * Lookup238: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1830,14 +1831,14 @@ export default {
         }
     },
     /**
-     * Lookup241: frame_system::LastRuntimeUpgradeInfo
+     * Lookup242: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup244: frame_system::pallet::Call<T>
+     * Lookup245: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1875,7 +1876,7 @@ export default {
         }
     },
     /**
-     * Lookup247: frame_system::limits::BlockWeights
+     * Lookup248: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'u64',
@@ -1883,7 +1884,7 @@ export default {
         perClass: 'FrameSupportWeightsPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup248: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup249: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportWeightsPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1891,7 +1892,7 @@ export default {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup249: frame_system::limits::WeightsPerClass
+     * Lookup250: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'u64',
@@ -1900,13 +1901,13 @@ export default {
         reserved: 'Option<u64>'
     },
     /**
-     * Lookup250: frame_system::limits::BlockLength
+     * Lookup251: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportWeightsPerDispatchClassU32'
     },
     /**
-     * Lookup251: frame_support::weights::PerDispatchClass<T>
+     * Lookup252: frame_support::weights::PerDispatchClass<T>
      **/
     FrameSupportWeightsPerDispatchClassU32: {
         normal: 'u32',
@@ -1914,14 +1915,14 @@ export default {
         mandatory: 'u32'
     },
     /**
-     * Lookup252: frame_support::weights::RuntimeDbWeight
+     * Lookup253: frame_support::weights::RuntimeDbWeight
      **/
     FrameSupportWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup253: sp_version::RuntimeVersion
+     * Lookup254: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -1934,13 +1935,13 @@ export default {
         stateVersion: 'u8'
     },
     /**
-     * Lookup259: frame_system::pallet::Error<T>
+     * Lookup260: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup260: pallet_utility::pallet::Call<T>
+     * Lookup261: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -1964,7 +1965,7 @@ export default {
         }
     },
     /**
-     * Lookup263: pallet_babe::pallet::Call<T>
+     * Lookup264: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -1982,7 +1983,7 @@ export default {
         }
     },
     /**
-     * Lookup264: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup265: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -1991,7 +1992,7 @@ export default {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup265: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup266: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2001,15 +2002,15 @@ export default {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup266: sp_runtime::traits::BlakeTwo256
+     * Lookup267: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup267: sp_consensus_babe::app::Public
+     * Lookup268: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup269: sp_session::MembershipProof
+     * Lookup270: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2017,7 +2018,7 @@ export default {
         validatorCount: 'u32'
     },
     /**
-     * Lookup270: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup271: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2029,13 +2030,13 @@ export default {
         }
     },
     /**
-     * Lookup271: sp_consensus_babe::AllowedSlots
+     * Lookup272: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup272: pallet_timestamp::pallet::Call<T>
+     * Lookup273: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2045,7 +2046,7 @@ export default {
         }
     },
     /**
-     * Lookup274: pallet_authorship::pallet::Call<T>
+     * Lookup275: pallet_authorship::pallet::Call<T>
      **/
     PalletAuthorshipCall: {
         _enum: {
@@ -2055,7 +2056,7 @@ export default {
         }
     },
     /**
-     * Lookup276: pallet_balances::pallet::Call<T, I>
+     * Lookup277: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2088,7 +2089,7 @@ export default {
         }
     },
     /**
-     * Lookup277: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup278: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2112,7 +2113,7 @@ export default {
         }
     },
     /**
-     * Lookup278: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup279: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2120,7 +2121,7 @@ export default {
         round: 'u32'
     },
     /**
-     * Lookup279: joystream_node_runtime::NposSolution16
+     * Lookup280: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2141,7 +2142,7 @@ export default {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup330: sp_npos_elections::ElectionScore
+     * Lookup331: sp_npos_elections::ElectionScore
      **/
     SpNposElectionsElectionScore: {
         minimalStake: 'u128',
@@ -2149,14 +2150,14 @@ export default {
         sumStakeSquared: 'u128'
     },
     /**
-     * Lookup331: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup332: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup335: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup336: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
@@ -2446,31 +2447,7 @@ export default {
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup370: pallet_sudo::pallet::Call<T>
-     **/
-    PalletSudoCall: {
-        _enum: {
-            sudo: {
-                call: 'Call',
-            },
-            sudo_unchecked_weight: {
-                call: 'Call',
-                weight: 'u64',
-            },
-            set_key: {
-                _alias: {
-                    new_: 'new',
-                },
-                new_: 'AccountId32',
-            },
-            sudo_as: {
-                who: 'AccountId32',
-                call: 'Call'
-            }
-        }
-    },
-    /**
-     * Lookup371: pallet_bags_list::pallet::Call<T, I>
+     * Lookup370: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2483,7 +2460,7 @@ export default {
         }
     },
     /**
-     * Lookup372: pallet_vesting::pallet::Call<T>
+     * Lookup371: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2507,7 +2484,7 @@ export default {
         }
     },
     /**
-     * Lookup373: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup372: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: 'u128',
@@ -2515,7 +2492,7 @@ export default {
         startingBlock: 'u32'
     },
     /**
-     * Lookup374: pallet_multisig::pallet::Call<T>
+     * Lookup373: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2547,7 +2524,7 @@ export default {
         }
     },
     /**
-     * Lookup377: pallet_council::Call<T>
+     * Lookup376: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2598,7 +2575,7 @@ export default {
         }
     },
     /**
-     * Lookup378: pallet_referendum::Call<T, I>
+     * Lookup377: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2610,11 +2587,12 @@ export default {
                 salt: 'Bytes',
                 voteOptionId: 'u64',
             },
-            release_vote_stake: 'Null'
+            release_vote_stake: 'Null',
+            opt_out_of_voting: 'Null'
         }
     },
     /**
-     * Lookup379: pallet_membership::Call<T>
+     * Lookup378: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2675,6 +2653,7 @@ export default {
             member_remark: {
                 memberId: 'u64',
                 msg: 'Bytes',
+                payment: 'Option<(AccountId32,u128)>',
             },
             create_member: {
                 params: 'PalletMembershipCreateMemberParameters'
@@ -2682,7 +2661,7 @@ export default {
         }
     },
     /**
-     * Lookup380: pallet_forum::Call<T>
+     * Lookup379: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2779,7 +2758,7 @@ export default {
         }
     },
     /**
-     * Lookup381: pallet_constitution::Call<T>
+     * Lookup380: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2789,7 +2768,7 @@ export default {
         }
     },
     /**
-     * Lookup382: pallet_bounty::Call<T>
+     * Lookup381: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2865,7 +2844,7 @@ export default {
         }
     },
     /**
-     * Lookup384: pallet_content::Call<T>
+     * Lookup383: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -2973,6 +2952,7 @@ export default {
             },
             update_channel_payouts: {
                 params: 'PalletContentUpdateChannelPayoutsParametersRecord',
+                uploaderAccount: 'AccountId32',
             },
             claim_channel_reward: {
                 actor: 'PalletContentPermissionsContentActor',
@@ -3141,7 +3121,7 @@ export default {
             creator_token_issuer_transfer: {
                 actor: 'PalletContentPermissionsContentActor',
                 channelId: 'u64',
-                outputs: 'PalletProjectTokenTransfersPaymentWithVesting',
+                outputs: 'Vec<(u64,PalletProjectTokenPaymentWithVesting)>',
                 metadata: 'Bytes',
             },
             make_creator_token_permissionless: {
@@ -3172,20 +3152,29 @@ export default {
                 channelId: 'u64',
             },
             deissue_creator_token: {
+                actor: 'PalletContentPermissionsContentActor',
+                channelId: 'u64',
+            },
+            activate_amm: {
+                actor: 'PalletContentPermissionsContentActor',
+                channelId: 'u64',
+                params: 'PalletProjectTokenAmmParams',
+            },
+            deactivate_amm: {
                 actor: 'PalletContentPermissionsContentActor',
                 channelId: 'u64'
             }
         }
     },
     /**
-     * Lookup385: pallet_content::types::ChannelBagWitness
+     * Lookup384: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup387: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup386: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3195,13 +3184,13 @@ export default {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup388: pallet_common::merkle_tree::Side
+     * Lookup387: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup389: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup388: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3209,7 +3198,7 @@ export default {
         reason: 'H256'
     },
     /**
-     * Lookup390: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup389: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3217,7 +3206,7 @@ export default {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup391: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup390: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3229,11 +3218,14 @@ export default {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup392: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup394: pallet_project_token::types::AmmParams<Balance>
      **/
-    PalletProjectTokenTransfersPaymentWithVesting: 'BTreeMap<u64, PalletProjectTokenPaymentWithVesting>',
+    PalletProjectTokenAmmParams: {
+        slope: 'u128',
+        intercept: 'u128'
+    },
     /**
-     * Lookup396: pallet_storage::Call<T>
+     * Lookup395: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3367,9 +3359,6 @@ export default {
                 bucketId: 'PalletStorageDistributionBucketIdRecord',
                 metadata: 'Bytes',
             },
-            sudo_upload_data_objects: {
-                params: 'PalletStorageUploadParametersRecord',
-            },
             storage_operator_remark: {
                 workerId: 'u64',
                 storageBucketId: 'u64',
@@ -3383,14 +3372,14 @@ export default {
         }
     },
     /**
-     * Lookup397: pallet_project_token::Call<T>
+     * Lookup396: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
             transfer: {
                 srcMemberId: 'u64',
                 tokenId: 'u64',
-                outputs: 'PalletProjectTokenTransfersPayment',
+                outputs: 'Vec<(u64,u128)>',
                 metadata: 'Bytes',
             },
             burn: {
@@ -3419,32 +3408,37 @@ export default {
             },
             exit_revenue_split: {
                 tokenId: 'u64',
-                memberId: 'u64'
+                memberId: 'u64',
+            },
+            buy_on_amm: {
+                tokenId: 'u64',
+                memberId: 'u64',
+                amount: 'u128',
+                slippageTolerance: 'Option<(Permill,u128)>',
+            },
+            sell_on_amm: {
+                tokenId: 'u64',
+                memberId: 'u64',
+                amount: 'u128',
+                slippageTolerance: 'Option<(Permill,u128)>',
+            },
+            update_max_yearly_patronage_rate: {
+                rate: 'Permill'
             }
         }
     },
     /**
-     * Lookup398: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::Payment<Balance>>
-     **/
-    PalletProjectTokenTransfersPayment: 'BTreeMap<u64, PalletProjectTokenPayment>',
-    /**
-     * Lookup399: pallet_project_token::types::Payment<Balance>
-     **/
-    PalletProjectTokenPayment: {
-        amount: 'u128'
-    },
-    /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup400: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup403: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup407: pallet_proposals_engine::Call<T>
+     * Lookup406: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3469,7 +3463,7 @@ export default {
         }
     },
     /**
-     * Lookup408: pallet_proposals_discussion::Call<T>
+     * Lookup407: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3498,7 +3492,7 @@ export default {
         }
     },
     /**
-     * Lookup409: pallet_proposals_codex::Call<T>
+     * Lookup408: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3509,7 +3503,7 @@ export default {
         }
     },
     /**
-     * Lookup410: pallet_working_group::Call<T, I>
+     * Lookup409: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3592,7 +3586,7 @@ export default {
         }
     },
     /**
-     * Lookup419: joystream_node_runtime::OriginCaller
+     * Lookup418: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3601,7 +3595,7 @@ export default {
         }
     },
     /**
-     * Lookup420: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup419: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3611,17 +3605,17 @@ export default {
         }
     },
     /**
-     * Lookup421: sp_core::Void
+     * Lookup420: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup422: pallet_utility::pallet::Error<T>
+     * Lookup421: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup429: sp_consensus_babe::digests::PreDigest
+     * Lookup428: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3632,7 +3626,7 @@ export default {
         }
     },
     /**
-     * Lookup430: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup429: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3641,14 +3635,14 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup431: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup430: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup432: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup431: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3657,20 +3651,20 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup434: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup433: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup435: pallet_babe::pallet::Error<T>
+     * Lookup434: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup437: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
+     * Lookup436: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
      **/
     PalletAuthorshipUncleEntryItem: {
         _enum: {
@@ -3679,13 +3673,13 @@ export default {
         }
     },
     /**
-     * Lookup438: pallet_authorship::pallet::Error<T>
+     * Lookup437: pallet_authorship::pallet::Error<T>
      **/
     PalletAuthorshipError: {
         _enum: ['InvalidUncleParent', 'UnclesAlreadySet', 'TooManyUncles', 'GenesisUncle', 'TooHighUncle', 'UncleAlreadyIncluded', 'OldUncle']
     },
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup439: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3693,38 +3687,38 @@ export default {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup440: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup443: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup446: pallet_balances::Releases
+     * Lookup445: pallet_balances::Releases
      **/
     PalletBalancesReleases: {
         _enum: ['V1_0_0', 'V2_0_0']
     },
     /**
-     * Lookup447: pallet_balances::pallet::Error<T, I>
+     * Lookup446: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup449: pallet_transaction_payment::Releases
+     * Lookup448: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup450: pallet_election_provider_multi_phase::Phase<Bn>
+     * Lookup449: pallet_election_provider_multi_phase::Phase<Bn>
      **/
     PalletElectionProviderMultiPhasePhase: {
         _enum: {
@@ -3735,7 +3729,7 @@ export default {
         }
     },
     /**
-     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
+     * Lookup451: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3743,14 +3737,14 @@ export default {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup453: pallet_election_provider_multi_phase::RoundSnapshot<T>
+     * Lookup452: pallet_election_provider_multi_phase::RoundSnapshot<T>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup460: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3759,13 +3753,13 @@ export default {
         callFee: 'u128'
     },
     /**
-     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup461: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed']
     },
     /**
-     * Lookup463: pallet_staking::StakingLedger<T>
+     * Lookup462: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3775,14 +3769,14 @@ export default {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup465: pallet_staking::UnlockChunk<Balance>
+     * Lookup464: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup467: pallet_staking::Nominations<T>
+     * Lookup466: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3790,27 +3784,27 @@ export default {
         suppressed: 'bool'
     },
     /**
-     * Lookup468: pallet_staking::ActiveEraInfo
+     * Lookup467: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup470: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup469: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup474: pallet_staking::Forcing
+     * Lookup473: pallet_staking::Forcing
      **/
     PalletStakingForcing: {
         _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']
     },
     /**
-     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup475: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3820,7 +3814,7 @@ export default {
         payout: 'u128'
     },
     /**
-     * Lookup478: pallet_staking::slashing::SlashingSpans
+     * Lookup477: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -3829,36 +3823,36 @@ export default {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup478: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup482: pallet_staking::Releases
+     * Lookup481: pallet_staking::Releases
      **/
     PalletStakingReleases: {
         _enum: ['V1_0_0Ancient', 'V2_0_0', 'V3_0_0', 'V4_0_0', 'V5_0_0', 'V6_0_0', 'V7_0_0', 'V8_0_0', 'V9_0_0']
     },
     /**
-     * Lookup483: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BondingRestricted']
     },
     /**
-     * Lookup487: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup488: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup490: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3875,7 +3869,7 @@ export default {
         }
     },
     /**
-     * Lookup491: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -3884,39 +3878,33 @@ export default {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup493: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup499: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup503: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup504: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup507: pallet_sudo::pallet::Error<T>
-     **/
-    PalletSudoError: {
-        _enum: ['RequireSudo']
-    },
-    /**
-     * Lookup508: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -3926,14 +3914,14 @@ export default {
         score: 'u64'
     },
     /**
-     * Lookup509: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup510: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3941,25 +3929,25 @@ export default {
         }
     },
     /**
-     * Lookup511: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup514: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup515: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup517: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -3968,20 +3956,20 @@ export default {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup519: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup520: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup521: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -3991,26 +3979,26 @@ export default {
         }
     },
     /**
-     * Lookup522: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup523: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup524: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup526: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4021,7 +4009,7 @@ export default {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup528: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4032,13 +4020,13 @@ export default {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup529: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup530: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4048,7 +4036,7 @@ export default {
         }
     },
     /**
-     * Lookup532: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4057,7 +4045,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup533: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4067,7 +4055,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup534: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4076,13 +4064,13 @@ export default {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup535: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
-        _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden']
+        _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup536: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4092,20 +4080,20 @@ export default {
         invites: 'u32'
     },
     /**
-     * Lookup537: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup538: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
-        _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift']
+        _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup539: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4118,7 +4106,7 @@ export default {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup541: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4127,7 +4115,7 @@ export default {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup542: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4137,19 +4125,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup543: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup544: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup545: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4159,7 +4147,7 @@ export default {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup547: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4171,7 +4159,7 @@ export default {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup548: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4180,7 +4168,7 @@ export default {
         }
     },
     /**
-     * Lookup549: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4197,14 +4185,14 @@ export default {
         }
     },
     /**
-     * Lookup551: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup552: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4213,13 +4201,13 @@ export default {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup553: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup555: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4228,7 +4216,7 @@ export default {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup556: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4237,7 +4225,7 @@ export default {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup557: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4249,7 +4237,7 @@ export default {
         }
     },
     /**
-     * Lookup558: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4262,14 +4250,14 @@ export default {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup561: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup562: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4280,7 +4268,7 @@ export default {
         start: 'u32'
     },
     /**
-     * Lookup563: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4289,7 +4277,7 @@ export default {
         }
     },
     /**
-     * Lookup566: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4297,7 +4285,7 @@ export default {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup573: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4305,13 +4293,13 @@ export default {
         auctionId: 'u64'
     },
     /**
-     * Lookup574: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
-        _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales']
+        _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup575: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4320,7 +4308,7 @@ export default {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup578: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4329,7 +4317,7 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup579: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4339,14 +4327,14 @@ export default {
         }
     },
     /**
-     * Lookup581: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup584: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4358,13 +4346,13 @@ export default {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup585: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup586: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4374,13 +4362,13 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup589: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup590: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4391,14 +4379,14 @@ export default {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup591: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup593: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4408,7 +4396,7 @@ export default {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup600: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4421,10 +4409,11 @@ export default {
         accountsNumber: 'u64',
         revenueSplitRate: 'Permill',
         revenueSplit: 'PalletProjectTokenRevenueSplitState',
-        nextRevenueSplitId: 'u32'
+        nextRevenueSplitId: 'u32',
+        ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup601: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4433,7 +4422,7 @@ export default {
         }
     },
     /**
-     * Lookup602: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4441,28 +4430,28 @@ export default {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup603: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup605: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
-        rate: 'Perquintill',
+        rate: 'Permill',
         unclaimedPatronageTallyAmount: 'u128',
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup607: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
-        _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'MerkleProofVerificationFailure', 'TargetPatronageRateIsHigherThanCurrentRate', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TransferDestinationMemberDoesNotExist', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount']
+        _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded']
     },
     /**
-     * Lookup608: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4475,7 +4464,7 @@ export default {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup609: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4488,7 +4477,7 @@ export default {
         constitutionality: 'u32'
     },
     /**
-     * Lookup610: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4497,13 +4486,13 @@ export default {
         slashes: 'u32'
     },
     /**
-     * Lookup613: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup614: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4511,7 +4500,7 @@ export default {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup616: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4520,7 +4509,7 @@ export default {
         }
     },
     /**
-     * Lookup617: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4528,19 +4517,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup618: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup619: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
-        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'MaxYearlyPatronageRateCannotBeZero']
     },
     /**
-     * Lookup620: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4551,7 +4540,7 @@ export default {
         creationStake: 'u128'
     },
     /**
-     * Lookup621: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4562,7 +4551,7 @@ export default {
         openingId: 'u64'
     },
     /**
-     * Lookup622: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4576,13 +4565,13 @@ export default {
         createdAt: 'u32'
     },
     /**
-     * Lookup623: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup633: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4592,39 +4581,39 @@ export default {
         }
     },
     /**
-     * Lookup634: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup637: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup638: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup639: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup640: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup643: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup644: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup645: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup646: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/node_modules/@joystream/types/src/augment/augment-api-consts.ts b/node_modules/@joystream/types/src/augment/augment-api-consts.ts
index d0ba2e8..ce72ab2 100644
--- a/node_modules/@joystream/types/src/augment/augment-api-consts.ts
+++ b/node_modules/@joystream/types/src/augment/augment-api-consts.ts
@@ -161,6 +161,10 @@ declare module '@polkadot/api-base/types/consts' {
        * Exports const - default global weekly NFT limit.
        **/
       defaultGlobalWeeklyNftLimit: PalletContentLimitPerPeriod & AugmentedConst<ApiType>;
+      /**
+       * Export const - max cashout allowed limits
+       **/
+      maximumCashoutAllowedLimit: u128 & AugmentedConst<ApiType>;
       /**
        * Exports const - max number of keys per curator_group.permissions_by_level map instance
        **/
@@ -173,6 +177,10 @@ declare module '@polkadot/api-base/types/consts' {
        * Exports const - max number of curators per group
        **/
       maxNumberOfCuratorsPerGroup: u32 & AugmentedConst<ApiType>;
+      /**
+       * Export const - min cashout allowed limits
+       **/
+      minimumCashoutAllowedLimit: u128 & AugmentedConst<ApiType>;
     };
     contentWorkingGroup: {
       /**
@@ -644,6 +652,10 @@ declare module '@polkadot/api-base/types/consts' {
       terminateWorkingGroupLeadProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       updateChannelPayoutsProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       updateGlobalNftLimitProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+      /**
+       * Max yearly patronage rate update proposal
+       **/
+      updateMaxYearlyPatronageRate: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       /**
        * Exports 'Update Working Group Budget' proposal parameters.
        **/
diff --git a/node_modules/@joystream/types/src/augment/augment-api-errors.ts b/node_modules/@joystream/types/src/augment/augment-api-errors.ts
index 465e8ae..f5734c7 100644
--- a/node_modules/@joystream/types/src/augment/augment-api-errors.ts
+++ b/node_modules/@joystream/types/src/augment/augment-api-errors.ts
@@ -513,6 +513,10 @@ declare module '@polkadot/api-base/types/errors' {
        * Invalid extrinsic call: Channel state bloat bond changed.
        **/
       ChannelStateBloatBondChanged: AugmentedError<ApiType>;
+      /**
+       * Channel Transfers are blocked during active AMM
+       **/
+      ChannelTransfersBlockedDuringActiveAmm: AugmentedError<ApiType>;
       /**
        * Channel Transfers are blocked during revenue splits
        **/
@@ -1611,6 +1615,10 @@ declare module '@polkadot/api-base/types/errors' {
        * Handle must be provided during registration.
        **/
       HandleMustBeProvidedDuringRegistration: AugmentedError<ApiType>;
+      /**
+       * Insufficient balance to cover payment.
+       **/
+      InsufficientBalanceToCoverPayment: AugmentedError<ApiType>;
       /**
        * Insufficient balance to cover stake.
        **/
@@ -2276,6 +2284,10 @@ declare module '@polkadot/api-base/types/errors' {
        * Cannot Deissue Token with outstanding accounts
        **/
       CannotDeissueTokenWithOutstandingAccounts: AugmentedError<ApiType>;
+      /**
+       * No Sale if Amm is active
+       **/
+      CannotInitSaleIfAmmIsActive: AugmentedError<ApiType>;
       /**
        * Attempt to issue in a split with zero allocation amount
        **/
@@ -2292,6 +2304,14 @@ declare module '@polkadot/api-base/types/errors' {
        * Attempt to participate in a split with zero token to stake
        **/
       CannotParticipateInSplitWithZeroAmount: AugmentedError<ApiType>;
+      /**
+       * Curve slope parameters below minimum allowed
+       **/
+      CurveSlopeParametersTooLow: AugmentedError<ApiType>;
+      /**
+       * Deadline constraint not satisfied
+       **/
+      DeadlineExpired: AugmentedError<ApiType>;
       /**
        * At least one of the members provided as part of InitialAllocation does not exist
        **/
@@ -2308,10 +2328,18 @@ declare module '@polkadot/api-base/types/errors' {
        * Insufficient JOY Balance to cover the transaction costs
        **/
       InsufficientJoyBalance: AugmentedError<ApiType>;
+      /**
+       * Creator token balance is insufficient
+       **/
+      InsufficientTokenBalance: AugmentedError<ApiType>;
       /**
        * Account's transferrable balance is insufficient to perform the transfer or initialize token sale
        **/
       InsufficientTransferrableBalance: AugmentedError<ApiType>;
+      /**
+       * Invalid bonding curve construction parameters
+       **/
+      InvalidCurveParameters: AugmentedError<ApiType>;
       /**
        * The amount of JOY to be transferred is not enough to keep the destination account alive
        **/
@@ -2333,6 +2361,11 @@ declare module '@polkadot/api-base/types/errors' {
        * Amount of tokens to purchase on sale exceeds the quantity of tokens still available on the sale
        **/
       NotEnoughTokensOnSale: AugmentedError<ApiType>;
+      /**
+       * ------ AMM ---------------------------------------------------------
+       * not in AMM state
+       **/
+      NotInAmmState: AugmentedError<ApiType>;
       /**
        * There are no remaining tokes to recover from the previous token sale.
        **/
@@ -2341,6 +2374,10 @@ declare module '@polkadot/api-base/types/errors' {
        * The token has no upcoming sale
        **/
       NoUpcomingSale: AugmentedError<ApiType>;
+      /**
+       * Oustanding AMM-provided supply constitutes too large percentage of the token's total supply
+       **/
+      OutstandingAmmProvidedSupplyTooLarge: AugmentedError<ApiType>;
       /**
        * Previous sale was still not finalized, finalize it first.
        **/
@@ -2416,6 +2453,11 @@ declare module '@polkadot/api-base/types/errors' {
        **/
       SaleUpperBoundQuantityIsZero: AugmentedError<ApiType>;
       /**
+       * Slippage tolerance constraint tolerance not satisfied
+       **/
+      SlippageToleranceExceeded: AugmentedError<ApiType>;
+      /**
+       * -------- Patronage --------------------------------------------------
        * Target Rate is higher than current patronage rate
        **/
       TargetPatronageRateIsHigherThanCurrentRate: AugmentedError<ApiType>;
@@ -2434,6 +2476,10 @@ declare module '@polkadot/api-base/types/errors' {
       /**
        * Transfer destination member id invalid
        **/
+      TooManyTransferOutputs: AugmentedError<ApiType>;
+      /**
+       * At least one of the transfer destinations is not an existing member id
+       **/
       TransferDestinationMemberDoesNotExist: AugmentedError<ApiType>;
       /**
        * User already participating in the revenue split
@@ -2443,6 +2489,10 @@ declare module '@polkadot/api-base/types/errors' {
        * User is not participating in any split
        **/
       UserNotParticipantingInAnySplit: AugmentedError<ApiType>;
+      /**
+       * Provided value for patronage is too big (yearly format)
+       **/
+      YearlyPatronageRateLimitExceeded: AugmentedError<ApiType>;
     };
     proposalsCodex: {
       /**
@@ -2533,6 +2583,10 @@ declare module '@polkadot/api-base/types/errors' {
        * Invalid working group budget capacity parameter
        **/
       InvalidWorkingGroupBudgetCapacity: AugmentedError<ApiType>;
+      /**
+       * Max yearly patronage rate cannot be zero
+       **/
+      MaxYearlyPatronageRateCannotBeZero: AugmentedError<ApiType>;
       /**
        * Require root origin in extrinsics
        **/
@@ -2688,6 +2742,10 @@ declare module '@polkadot/api-base/types/errors' {
       ZeroExactExecutionBlock: AugmentedError<ApiType>;
     };
     referendum: {
+      /**
+       * A vote cannot be cast from an account that already opted out of voting.
+       **/
+      AccountAlreadyOptedOutOfVoting: AugmentedError<ApiType>;
       /**
        * Trying to vote multiple time in the same cycle
        **/
@@ -3263,12 +3321,6 @@ declare module '@polkadot/api-base/types/errors' {
        **/
       ZeroTokensFunding: AugmentedError<ApiType>;
     };
-    sudo: {
-      /**
-       * Sender must be the Sudo account
-       **/
-      RequireSudo: AugmentedError<ApiType>;
-    };
     system: {
       /**
        * The origin filter prevent the call to be dispatched.
diff --git a/node_modules/@joystream/types/src/augment/augment-api-events.ts b/node_modules/@joystream/types/src/augment/augment-api-events.ts
index bdddefb..30710a1 100644
--- a/node_modules/@joystream/types/src/augment/augment-api-events.ts
+++ b/node_modules/@joystream/types/src/augment/augment-api-events.ts
@@ -4,8 +4,8 @@
 import type { ApiTypes } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Null, Option, Result, U8aFixed, Vec, bool, u128, u32, u64, u8 } from '@polkadot/types-codec';
 import type { ITuple } from '@polkadot/types-codec/types';
-import type { AccountId32, H256, Perquintill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchInfo, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpFinalityGrandpaAppPublic, SpRuntimeDispatchError } from '@polkadot/types/lookup';
+import type { AccountId32, H256, Permill } from '@polkadot/types/interfaces/runtime';
+import type { FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchInfo, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpFinalityGrandpaAppPublic, SpRuntimeDispatchError } from '@polkadot/types/lookup';
 
 declare module '@polkadot/api-base/types/events' {
   export interface AugmentedEvents<ApiType extends ApiTypes> {
@@ -460,15 +460,14 @@ declare module '@polkadot/api-base/types/events' {
        **/
       ChannelOwnerRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
       ChannelPausedFeaturesUpdatedByModerator: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature>, Bytes]>;
-      ChannelPayoutsUpdated: AugmentedEvent<ApiType, [PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>]>;
+      ChannelPayoutsUpdated: AugmentedEvent<ApiType, [PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>, AccountId32]>;
       ChannelPrivilegeLevelUpdated: AugmentedEvent<ApiType, [u64, u8]>;
       ChannelRewardClaimedAndWithdrawn: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, u128, PalletContentChannelFundsDestination]>;
-      ChannelRewardUpdated: AugmentedEvent<ApiType, [u128, u64]>;
+      ChannelRewardUpdated: AugmentedEvent<ApiType, [u128, u128, u64]>;
       ChannelStateBloatBondValueUpdated: AugmentedEvent<ApiType, [u128]>;
       ChannelTransferAccepted: AugmentedEvent<ApiType, [u64, PalletContentTransferCommitmentParametersBTreeMap]>;
       ChannelUpdated: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, PalletContentChannelUpdateParametersRecord, BTreeSet<u64>]>;
       ChannelVisibilitySetByModerator: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, bool, Bytes]>;
-      CouncilRewardClaimed: AugmentedEvent<ApiType, [u64, u128]>;
       CreatorTokenIssued: AugmentedEvent<ApiType, [PalletContentPermissionsContentActor, u64, u64]>;
       CuratorAdded: AugmentedEvent<ApiType, [u64, u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>]>;
       CuratorGroupCreated: AugmentedEvent<ApiType, [u64]>;
@@ -1297,9 +1296,9 @@ declare module '@polkadot/api-base/types/events' {
       LeaderInvitationQuotaUpdated: AugmentedEvent<ApiType, [u32]>;
       MemberAccountsUpdated: AugmentedEvent<ApiType, [u64, Option<AccountId32>, Option<AccountId32>]>;
       MemberCreated: AugmentedEvent<ApiType, [u64, PalletMembershipCreateMemberParameters, u32]>;
-      MemberInvited: AugmentedEvent<ApiType, [u64, PalletMembershipInviteMembershipParameters]>;
+      MemberInvited: AugmentedEvent<ApiType, [u64, PalletMembershipInviteMembershipParameters, u128]>;
       MemberProfileUpdated: AugmentedEvent<ApiType, [u64, Option<Bytes>, Option<Bytes>]>;
-      MemberRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
+      MemberRemarked: AugmentedEvent<ApiType, [u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
       MembershipBought: AugmentedEvent<ApiType, [u64, PalletMembershipBuyMembershipParameters, u32]>;
       MembershipGifted: AugmentedEvent<ApiType, [u64, PalletMembershipGiftMembershipParameters]>;
       MembershipPriceUpdated: AugmentedEvent<ApiType, [u128]>;
@@ -2069,6 +2068,28 @@ declare module '@polkadot/api-base/types/events' {
        * - ongoing policy
        **/
       AccountDustedBy: AugmentedEvent<ApiType, [u64, u64, AccountId32, PalletProjectTokenTransferPolicy]>;
+      /**
+       * AMM activated
+       * Params:
+       * - token id
+       * - member id
+       * - params for the bonding curve
+       **/
+      AmmActivated: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenAmmCurve]>;
+      /**
+       * AMM deactivated
+       * Params:
+       * - token id
+       * - member id
+       * - amm treasury amount burned upon deactivation
+       **/
+      AmmDeactivated: AugmentedEvent<ApiType, [u64, u64, u128]>;
+      /**
+       * Max patronage yearly rate updated
+       * Params:
+       * - new rate
+       **/
+      MaxYearlyPatronageRateUpdated: AugmentedEvent<ApiType, [Permill]>;
       /**
        * Member joined whitelist
        * Params:
@@ -2091,7 +2112,7 @@ declare module '@polkadot/api-base/types/events' {
        * - token identifier
        * - new patronage rate
        **/
-      PatronageRateDecreasedTo: AugmentedEvent<ApiType, [u64, Perquintill]>;
+      PatronageRateDecreasedTo: AugmentedEvent<ApiType, [u64, Permill]>;
       /**
        * Revenue Split finalized
        * Params:
@@ -2125,7 +2146,7 @@ declare module '@polkadot/api-base/types/events' {
        * - map containing validated outputs (amount indexed by (member_id + account existance))
        * - transfer's metadata
        **/
-      TokenAmountTransferred: AugmentedEvent<ApiType, [u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+      TokenAmountTransferred: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
       /**
        * Token amount transferred by issuer
        * Params:
@@ -2136,7 +2157,7 @@ declare module '@polkadot/api-base/types/events' {
        * (account_id + account existance)
        * - transfer's metadata
        **/
-      TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+      TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
       /**
        * Token Deissued
        * Params:
@@ -2168,6 +2189,15 @@ declare module '@polkadot/api-base/types/events' {
        * - token sale metadata
        **/
       TokenSaleInitialized: AugmentedEvent<ApiType, [u64, u32, PalletProjectTokenTokenSale, Option<Bytes>]>;
+      /**
+       * Tokens Bought on AMM
+       * Params:
+       * - token id
+       * - member id
+       * - amount of CRT minted
+       * - amount of JOY deposited into curve treasury
+       **/
+      TokensBoughtOnAmm: AugmentedEvent<ApiType, [u64, u64, u128, u128]>;
       /**
        * Tokens Burned
        * Params:
@@ -2185,6 +2215,15 @@ declare module '@polkadot/api-base/types/events' {
        * - buyer's member id
        **/
       TokensPurchasedOnSale: AugmentedEvent<ApiType, [u64, u32, u128, u64]>;
+      /**
+       * Tokens Sold on AMM
+       * Params:
+       * - token id
+       * - member id
+       * - amount of CRT burned
+       * - amount of JOY withdrawn from curve treasury
+       **/
+      TokensSoldOnAmm: AugmentedEvent<ApiType, [u64, u64, u128, u128]>;
       /**
        * Transfer Policy Changed To Permissionless
        * Params:
@@ -2291,6 +2330,10 @@ declare module '@polkadot/api-base/types/events' {
       Voted: AugmentedEvent<ApiType, [u64, u32, PalletProposalsEngineVoteKind, Bytes]>;
     };
     referendum: {
+      /**
+       * Account permanently opted out of voting in referendum.
+       **/
+      AccountOptedOutOfVoting: AugmentedEvent<ApiType, [AccountId32]>;
       /**
        * Referendum ended and winning option was selected
        **/
@@ -2873,20 +2916,6 @@ declare module '@polkadot/api-base/types/events' {
        **/
       WorkingGroupBudgetFunded: AugmentedEvent<ApiType, [u64, u128, Bytes]>;
     };
-    sudo: {
-      /**
-       * The \[sudoer\] just switched identity; the old key is supplied if one existed.
-       **/
-      KeyChanged: AugmentedEvent<ApiType, [oldSudoer: Option<AccountId32>], { oldSudoer: Option<AccountId32> }>;
-      /**
-       * A sudo just took place. \[result\]
-       **/
-      Sudid: AugmentedEvent<ApiType, [sudoResult: Result<Null, SpRuntimeDispatchError>], { sudoResult: Result<Null, SpRuntimeDispatchError> }>;
-      /**
-       * A sudo just took place. \[result\]
-       **/
-      SudoAsDone: AugmentedEvent<ApiType, [sudoResult: Result<Null, SpRuntimeDispatchError>], { sudoResult: Result<Null, SpRuntimeDispatchError> }>;
-    };
     system: {
       /**
        * `:code` was updated.
diff --git a/node_modules/@joystream/types/src/augment/augment-api-query.ts b/node_modules/@joystream/types/src/augment/augment-api-query.ts
index e4b6b80..462ee53 100644
--- a/node_modules/@joystream/types/src/augment/augment-api-query.ts
+++ b/node_modules/@joystream/types/src/augment/augment-api-query.ts
@@ -947,10 +947,30 @@ declare module '@polkadot/api-base/types/storage' {
        * Double map TokenId x MemberId => AccountData for managing account data
        **/
       accountInfoByTokenAndMember: AugmentedQuery<ApiType, (arg1: u64 | AnyNumber | Uint8Array, arg2: u64 | AnyNumber | Uint8Array) => Observable<PalletProjectTokenAccountData>, [u64, u64]>;
+      /**
+       * AMM buy transaction fee percentage
+       **/
+      ammBuyTxFees: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+      /**
+       * Percentage threshold for deactivating the amm functionality
+       **/
+      ammDeactivationThreshold: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+      /**
+       * AMM sell transaction fee percentage
+       **/
+      ammSellTxFees: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
       /**
        * Bloat Bond value used during account creation
        **/
       bloatBond: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+      /**
+       * Max patronage rate allowed
+       **/
+      maxYearlyPatronageRate: AugmentedQuery<ApiType, () => Observable<Permill>, []>;
+      /**
+       * Minimum slope parameters allowed for AMM curve
+       **/
+      minAmmSlopeParameter: AugmentedQuery<ApiType, () => Observable<u128>, []>;
       /**
        * Minimum revenue split duration constraint
        **/
@@ -1035,6 +1055,10 @@ declare module '@polkadot/api-base/types/storage' {
       randomMaterial: AugmentedQuery<ApiType, () => Observable<Vec<H256>>, []>;
     };
     referendum: {
+      /**
+       * Accounts that permanently opted out of voting in referendum.
+       **/
+      accountsOptedOut: AugmentedQuery<ApiType, (arg: AccountId32 | string | Uint8Array) => Observable<Null>, [AccountId32]>;
       /**
        * Current referendum stage.
        **/
@@ -1447,12 +1471,6 @@ declare module '@polkadot/api-base/types/storage' {
        **/
       workerById: AugmentedQuery<ApiType, (arg: u64 | AnyNumber | Uint8Array) => Observable<Option<PalletWorkingGroupGroupWorker>>, [u64]>;
     };
-    sudo: {
-      /**
-       * The `AccountId` of the sudo key.
-       **/
-      key: AugmentedQuery<ApiType, () => Observable<Option<AccountId32>>, []>;
-    };
     system: {
       /**
        * The full account information for a particular account ID.
diff --git a/node_modules/@joystream/types/src/augment/augment-api-tx.ts b/node_modules/@joystream/types/src/augment/augment-api-tx.ts
index d9b72b5..ccbadfc 100644
--- a/node_modules/@joystream/types/src/augment/augment-api-tx.ts
+++ b/node_modules/@joystream/types/src/augment/augment-api-tx.ts
@@ -5,7 +5,7 @@ import type { ApiTypes } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Compact, Option, U8aFixed, Vec, WrapperKeepOpaque, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, IMethod, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, Call, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenMerkleProof, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransfersPayment, PalletProjectTokenTransfersPaymentWithVesting, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusSlotsEquivocationProof, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeHeader, SpSessionMembershipProof } from '@polkadot/types/lookup';
+import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusSlotsEquivocationProof, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeHeader, SpSessionMembershipProof } from '@polkadot/types/lookup';
 
 declare module '@polkadot/api-base/types/submittable' {
   export interface AugmentedSubmittables<ApiType extends ApiTypes> {
@@ -632,6 +632,10 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       acceptIncomingOffer: AugmentedSubmittable<(videoId: u64 | AnyNumber | Uint8Array, witnessPrice: Option<u128> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Option<u128>]>;
+      /**
+       * Activate Amm functionality for token
+       **/
+      activateAmm: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | { Curator: any } | { Member: any } | { Lead: any } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, params: PalletProjectTokenAmmParams | { slope?: any; intercept?: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, PalletProjectTokenAmmParams]>;
       /**
        * Add curator to curator group under given `curator_group_id`
        * 
@@ -844,7 +848,11 @@ declare module '@polkadot/api-base/types/submittable' {
        * - `O(A)` - from the the generated weights
        * # </weight>
        **/
-      creatorTokenIssuerTransfer: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | { Curator: any } | { Member: any } | { Lead: any } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, outputs: PalletProjectTokenTransfersPaymentWithVesting, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, PalletProjectTokenTransfersPaymentWithVesting, Bytes]>;
+      creatorTokenIssuerTransfer: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | { Curator: any } | { Member: any } | { Lead: any } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>> | ([u64 | AnyNumber | Uint8Array, PalletProjectTokenPaymentWithVesting | { amount?: any; vestingSchedule?: any } | string | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64, Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>>, Bytes]>;
+      /**
+       * Deactivate Amm functionality for token
+       **/
+      deactivateAmm: AugmentedSubmittable<(actor: PalletContentPermissionsContentActor | { Curator: any } | { Member: any } | { Lead: any } | string | Uint8Array, channelId: u64 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentPermissionsContentActor, u64]>;
       /**
        * Deissue channel's creator token
        * 
@@ -1289,7 +1297,7 @@ declare module '@polkadot/api-base/types/submittable' {
        * - O(1)
        * # </weight>
        **/
-      updateChannelPayouts: AugmentedSubmittable<(params: PalletContentUpdateChannelPayoutsParametersRecord | { commitment?: any; payload?: any; minCashoutAllowed?: any; maxCashoutAllowed?: any; channelCashoutsEnabled?: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentUpdateChannelPayoutsParametersRecord]>;
+      updateChannelPayouts: AugmentedSubmittable<(params: PalletContentUpdateChannelPayoutsParametersRecord | { commitment?: any; payload?: any; minCashoutAllowed?: any; maxCashoutAllowed?: any; channelCashoutsEnabled?: any } | string | Uint8Array, uploaderAccount: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletContentUpdateChannelPayoutsParametersRecord, AccountId32]>;
       /**
        * Extrinsic for updating channel privilege level (requires lead access)
        * 
@@ -2748,7 +2756,7 @@ declare module '@polkadot/api-base/types/submittable' {
        * - O(1) doesn't depend on the state or parameters
        * # </weight>
        **/
-      memberRemark: AugmentedSubmittable<(memberId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
+      memberRemark: AugmentedSubmittable<(memberId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array, payment: Option<ITuple<[AccountId32, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
       /**
        * Remove staking account for a member.
        * 
@@ -4041,6 +4049,21 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       burn: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128]>;
+      /**
+       * Mint desired `token_id` amount into user account via JOY exchnage
+       * Preconditions
+       * - origin, member_id pair must be a valid authentication pair
+       * - token_id must exist
+       * - user usable JOY balance must be enough for buying (+ existential deposit)
+       * - slippage tolerance constraints respected if provided
+       * - token total supply and amount value must be s.t. `eval` function doesn't overflow
+       * 
+       * Postconditions
+       * - `amount` CRT minted into account (which is created if necessary with existential deposit transferred to it)
+       * - respective JOY amount transferred from user balance to amm treasury account
+       * - event deposited
+       **/
+      buyOnAmm: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array, slippageTolerance: Option<ITuple<[Permill, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128, Option<ITuple<[Permill, u128]>>]>;
       /**
        * Allow any user to remove an account
        * 
@@ -4199,6 +4222,24 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       purchaseTokensOnSale: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128]>;
+      /**
+       * Burn desired `token_id` amount from user account and get JOY from treasury account
+       * Preconditions
+       * - origin, member_id pair must be a valid authentication pair
+       * - token_id must exist
+       * - token_id, member_id must be valid account coordinates
+       * - user usable CRT balance must be at least `amount`
+       * - slippage tolerance constraints respected if provided
+       * - token total supply and amount value must be s.t. `eval` function doesn't overflow
+       * - amm treasury account must have sufficient JOYs for the operation
+       * 
+       * Postconditions
+       * - `amount` burned from user account
+       * - total supply decreased by amount
+       * - respective JOY amount transferred from amm treasury account to user account
+       * - event deposited
+       **/
+      sellOnAmm: AugmentedSubmittable<(tokenId: u64 | AnyNumber | Uint8Array, memberId: u64 | AnyNumber | Uint8Array, amount: u128 | AnyNumber | Uint8Array, slippageTolerance: Option<ITuple<[Permill, u128]>> | null | object | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, u128, Option<ITuple<[Permill, u128]>>]>;
       /**
        * Allow to transfer from `src_member_id` account to the various `outputs` beneficiaries
        * in the specified amounts.
@@ -4227,7 +4268,8 @@ declare module '@polkadot/api-base/types/submittable' {
        * - `O(T)` - from the the generated weights
        * # </weight>
        **/
-      transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: PalletProjectTokenTransfersPayment, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, PalletProjectTokenTransfersPayment, Bytes]>;
+      transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, u128]>> | ([u64 | AnyNumber | Uint8Array, u128 | AnyNumber | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Vec<ITuple<[u64, u128]>>, Bytes]>;
+      updateMaxYearlyPatronageRate: AugmentedSubmittable<(rate: Permill | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Permill]>;
     };
     proposalsCodex: {
       /**
@@ -4245,7 +4287,7 @@ declare module '@polkadot/api-base/types/submittable' {
        * - O(1) doesn't depend on the state or parameters
        * # </weight>
        **/
-      createProposal: AugmentedSubmittable<(generalProposalParameters: PalletProposalsCodexGeneralProposalParams | { memberId?: any; title?: any; description?: any; stakingAccountId?: any; exactExecutionBlock?: any } | string | Uint8Array, proposalDetails: PalletProposalsCodexProposalDetails | { Signal: any } | { RuntimeUpgrade: any } | { FundingRequest: any } | { SetMaxValidatorCount: any } | { CreateWorkingGroupLeadOpening: any } | { FillWorkingGroupLeadOpening: any } | { UpdateWorkingGroupBudget: any } | { DecreaseWorkingGroupLeadStake: any } | { SlashWorkingGroupLead: any } | { SetWorkingGroupLeadReward: any } | { TerminateWorkingGroupLead: any } | { AmendConstitution: any } | { CancelWorkingGroupLeadOpening: any } | { SetMembershipPrice: any } | { SetCouncilBudgetIncrement: any } | { SetCouncilorReward: any } | { SetInitialInvitationBalance: any } | { SetInitialInvitationCount: any } | { SetMembershipLeadInvitationQuota: any } | { SetReferralCut: any } | { VetoProposal: any } | { UpdateGlobalNftLimit: any } | { UpdateChannelPayouts: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
+      createProposal: AugmentedSubmittable<(generalProposalParameters: PalletProposalsCodexGeneralProposalParams | { memberId?: any; title?: any; description?: any; stakingAccountId?: any; exactExecutionBlock?: any } | string | Uint8Array, proposalDetails: PalletProposalsCodexProposalDetails | { Signal: any } | { RuntimeUpgrade: any } | { FundingRequest: any } | { SetMaxValidatorCount: any } | { CreateWorkingGroupLeadOpening: any } | { FillWorkingGroupLeadOpening: any } | { UpdateWorkingGroupBudget: any } | { DecreaseWorkingGroupLeadStake: any } | { SlashWorkingGroupLead: any } | { SetWorkingGroupLeadReward: any } | { TerminateWorkingGroupLead: any } | { AmendConstitution: any } | { CancelWorkingGroupLeadOpening: any } | { SetMembershipPrice: any } | { SetCouncilBudgetIncrement: any } | { SetCouncilorReward: any } | { SetInitialInvitationBalance: any } | { SetInitialInvitationCount: any } | { SetMembershipLeadInvitationQuota: any } | { SetReferralCut: any } | { VetoProposal: any } | { UpdateGlobalNftLimit: any } | { UpdateChannelPayouts: any } | { UpdateMaxYearlyPatronageRate: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
     };
     proposalsDiscussion: {
       /**
@@ -4354,6 +4396,18 @@ declare module '@polkadot/api-base/types/submittable' {
       vote: AugmentedSubmittable<(voterId: u64 | AnyNumber | Uint8Array, proposalId: u32 | AnyNumber | Uint8Array, vote: PalletProposalsEngineVoteKind | 'Approve' | 'Reject' | 'Slash' | 'Abstain' | number | Uint8Array, rationale: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u32, PalletProposalsEngineVoteKind, Bytes]>;
     };
     referendum: {
+      /**
+       * Permanently opt out of voting from a given account.
+       * 
+       * # <weight>
+       * 
+       * ## weight
+       * `O (1)`
+       * - db:
+       * - `O(1)` doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      optOutOfVoting: AugmentedSubmittable<() => SubmittableExtrinsic<ApiType>, []>;
       /**
        * Release a locked stake.
        * # <weight>
@@ -5058,7 +5112,8 @@ declare module '@polkadot/api-base/types/submittable' {
        **/
       setStorageOperatorMetadata: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, storageBucketId: u64 | AnyNumber | Uint8Array, metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Bytes]>;
       /**
-       * Create a dynamic bag. Development mode.
+       * Deposit a StorageOperatorRemarked event
+       * containing a generic message.
        * <weight>
        * 
        * ## Weight
@@ -5069,10 +5124,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       storageOperatorRemark: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, storageBucketId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Bytes]>;
-      /**
-       * Upload new data objects. Development mode.
-       **/
-      sudoUploadDataObjects: AugmentedSubmittable<(params: PalletStorageUploadParametersRecord | { bagId?: any; objectCreationList?: any; stateBloatBondSourceAccountId?: any; expectedDataSizeFee?: any; expectedDataObjectStateBloatBond?: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletStorageUploadParametersRecord]>;
       /**
        * Add and remove hashes to the current blacklist.
        * <weight>
@@ -5485,61 +5536,6 @@ declare module '@polkadot/api-base/types/submittable' {
        **/
       workerRemark: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
     };
-    sudo: {
-      /**
-       * Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo
-       * key.
-       * 
-       * The dispatch origin for this call must be _Signed_.
-       * 
-       * # <weight>
-       * - O(1).
-       * - Limited storage reads.
-       * - One DB change.
-       * # </weight>
-       **/
-      setKey: AugmentedSubmittable<(updated: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [AccountId32]>;
-      /**
-       * Authenticates the sudo key and dispatches a function call with `Root` origin.
-       * 
-       * The dispatch origin for this call must be _Signed_.
-       * 
-       * # <weight>
-       * - O(1).
-       * - Limited storage reads.
-       * - One DB write (event).
-       * - Weight of derivative `call` execution + 10,000.
-       * # </weight>
-       **/
-      sudo: AugmentedSubmittable<(call: Call | IMethod | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [Call]>;
-      /**
-       * Authenticates the sudo key and dispatches a function call with `Signed` origin from
-       * a given account.
-       * 
-       * The dispatch origin for this call must be _Signed_.
-       * 
-       * # <weight>
-       * - O(1).
-       * - Limited storage reads.
-       * - One DB write (event).
-       * - Weight of derivative `call` execution + 10,000.
-       * # </weight>
-       **/
-      sudoAs: AugmentedSubmittable<(who: AccountId32 | string | Uint8Array, call: Call | IMethod | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [AccountId32, Call]>;
-      /**
-       * Authenticates the sudo key and dispatches a function call with `Root` origin.
-       * This function does not check the weight of the call, and instead allows the
-       * Sudo user to specify the weight of the call.
-       * 
-       * The dispatch origin for this call must be _Signed_.
-       * 
-       * # <weight>
-       * - O(1).
-       * - The weight of this call is defined by the caller.
-       * # </weight>
-       **/
-      sudoUncheckedWeight: AugmentedSubmittable<(call: Call | IMethod | string | Uint8Array, weight: u64 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Call, u64]>;
-    };
     system: {
       /**
        * A dispatch that will fill the block weight up to the given ratio.
diff --git a/node_modules/@joystream/types/src/augment/lookup.ts b/node_modules/@joystream/types/src/augment/lookup.ts
index 58896db..03315dd 100644
--- a/node_modules/@joystream/types/src/augment/lookup.ts
+++ b/node_modules/@joystream/types/src/augment/lookup.ts
@@ -368,23 +368,7 @@ export default {
     }
   },
   /**
-   * Lookup57: pallet_sudo::pallet::Event<T>
-   **/
-  PalletSudoEvent: {
-    _enum: {
-      Sudid: {
-        sudoResult: 'Result<Null, SpRuntimeDispatchError>',
-      },
-      KeyChanged: {
-        oldSudoer: 'Option<AccountId32>',
-      },
-      SudoAsDone: {
-        sudoResult: 'Result<Null, SpRuntimeDispatchError>'
-      }
-    }
-  },
-  /**
-   * Lookup59: pallet_bags_list::pallet::Event<T, I>
+   * Lookup57: pallet_bags_list::pallet::Event<T, I>
    **/
   PalletBagsListEvent: {
     _enum: {
@@ -400,7 +384,7 @@ export default {
     }
   },
   /**
-   * Lookup60: pallet_vesting::pallet::Event<T>
+   * Lookup58: pallet_vesting::pallet::Event<T>
    **/
   PalletVestingEvent: {
     _enum: {
@@ -414,7 +398,7 @@ export default {
     }
   },
   /**
-   * Lookup61: pallet_multisig::pallet::Event<T>
+   * Lookup59: pallet_multisig::pallet::Event<T>
    **/
   PalletMultisigEvent: {
     _enum: {
@@ -445,14 +429,14 @@ export default {
     }
   },
   /**
-   * Lookup62: pallet_multisig::Timepoint<BlockNumber>
+   * Lookup60: pallet_multisig::Timepoint<BlockNumber>
    **/
   PalletMultisigTimepoint: {
     height: 'u32',
     index: 'u32'
   },
   /**
-   * Lookup63: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
+   * Lookup61: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>
    **/
   PalletCouncilRawEvent: {
     _enum: {
@@ -478,7 +462,7 @@ export default {
     }
   },
   /**
-   * Lookup65: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+   * Lookup63: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
    **/
   PalletReferendumRawEvent: {
     _enum: {
@@ -488,26 +472,27 @@ export default {
       ReferendumFinished: 'Vec<PalletReferendumOptionResult>',
       VoteCast: '(AccountId32,H256,u128)',
       VoteRevealed: '(AccountId32,u64,Bytes)',
-      StakeReleased: 'AccountId32'
+      StakeReleased: 'AccountId32',
+      AccountOptedOutOfVoting: 'AccountId32'
     }
   },
   /**
-   * Lookup66: pallet_referendum::Instance1
+   * Lookup64: pallet_referendum::Instance1
    **/
   PalletReferendumInstance1: 'Null',
   /**
-   * Lookup68: pallet_referendum::OptionResult<MemberId, VotePower>
+   * Lookup66: pallet_referendum::OptionResult<MemberId, VotePower>
    **/
   PalletReferendumOptionResult: {
     optionId: 'u64',
     votePower: 'u128'
   },
   /**
-   * Lookup69: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+   * Lookup67: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletMembershipRawEvent: {
     _enum: {
-      MemberInvited: '(u64,PalletMembershipInviteMembershipParameters)',
+      MemberInvited: '(u64,PalletMembershipInviteMembershipParameters,u128)',
       MembershipGifted: '(u64,PalletMembershipGiftMembershipParameters)',
       MembershipBought: '(u64,PalletMembershipBuyMembershipParameters,u32)',
       MemberProfileUpdated: '(u64,Option<Bytes>,Option<Bytes>)',
@@ -522,12 +507,12 @@ export default {
       StakingAccountAdded: '(AccountId32,u64)',
       StakingAccountRemoved: '(AccountId32,u64)',
       StakingAccountConfirmed: '(AccountId32,u64)',
-      MemberRemarked: '(u64,Bytes)',
+      MemberRemarked: '(u64,Bytes,Option<(AccountId32,u128)>)',
       MemberCreated: '(u64,PalletMembershipCreateMemberParameters,u32)'
     }
   },
   /**
-   * Lookup70: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+   * Lookup68: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
    **/
   PalletMembershipBuyMembershipParameters: {
     rootAccount: 'AccountId32',
@@ -537,7 +522,7 @@ export default {
     referrerId: 'Option<u64>'
   },
   /**
-   * Lookup73: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+   * Lookup71: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
    **/
   PalletMembershipInviteMembershipParameters: {
     invitingMemberId: 'u64',
@@ -547,7 +532,7 @@ export default {
     metadata: 'Bytes'
   },
   /**
-   * Lookup74: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+   * Lookup72: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
    **/
   PalletMembershipCreateMemberParameters: {
     rootAccount: 'AccountId32',
@@ -557,7 +542,7 @@ export default {
     isFoundingMember: 'bool'
   },
   /**
-   * Lookup75: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+   * Lookup73: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
    **/
   PalletMembershipGiftMembershipParameters: {
     rootAccount: 'AccountId32',
@@ -570,7 +555,7 @@ export default {
     applyRootAccountInvitationLock: 'Option<u128>'
   },
   /**
-   * Lookup77: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+   * Lookup78: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
    **/
   PalletForumRawEvent: {
     _enum: {
@@ -594,7 +579,7 @@ export default {
     }
   },
   /**
-   * Lookup78: pallet_forum::PrivilegedActor<T>
+   * Lookup79: pallet_forum::PrivilegedActor<T>
    **/
   PalletForumPrivilegedActor: {
     _enum: {
@@ -603,7 +588,7 @@ export default {
     }
   },
   /**
-   * Lookup79: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+   * Lookup80: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
    **/
   PalletForumExtendedPostIdObject: {
     categoryId: 'u64',
@@ -611,7 +596,7 @@ export default {
     postId: 'u64'
   },
   /**
-   * Lookup84: pallet_constitution::RawEvent<primitive_types::H256>
+   * Lookup85: pallet_constitution::RawEvent<primitive_types::H256>
    **/
   PalletConstitutionRawEvent: {
     _enum: {
@@ -619,7 +604,7 @@ export default {
     }
   },
   /**
-   * Lookup85: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+   * Lookup86: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
    **/
   PalletBountyRawEvent: {
     _enum: {
@@ -649,7 +634,7 @@ export default {
     }
   },
   /**
-   * Lookup86: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+   * Lookup87: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
    **/
   PalletBountyBountyParametersBTreeSet: {
     oracle: 'PalletBountyBountyActor',
@@ -661,7 +646,7 @@ export default {
     fundingType: 'PalletBountyFundingType'
   },
   /**
-   * Lookup87: pallet_bounty::BountyActor<MemberId>
+   * Lookup88: pallet_bounty::BountyActor<MemberId>
    **/
   PalletBountyBountyActor: {
     _enum: {
@@ -670,7 +655,7 @@ export default {
     }
   },
   /**
-   * Lookup88: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+   * Lookup89: pallet_bounty::AssuranceContractType<BTreeSet<T>>
    **/
   PalletBountyAssuranceContractTypeBTreeSet: {
     _enum: {
@@ -679,7 +664,7 @@ export default {
     }
   },
   /**
-   * Lookup89: pallet_bounty::FundingType<BlockNumber, Balance>
+   * Lookup90: pallet_bounty::FundingType<BlockNumber, Balance>
    **/
   PalletBountyFundingType: {
     _enum: {
@@ -693,7 +678,7 @@ export default {
     }
   },
   /**
-   * Lookup91: pallet_bounty::OracleWorkEntryJudgment<Balance>
+   * Lookup92: pallet_bounty::OracleWorkEntryJudgment<Balance>
    **/
   PalletBountyOracleWorkEntryJudgment: {
     _enum: {
@@ -707,7 +692,7 @@ export default {
     }
   },
   /**
-   * Lookup94: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+   * Lookup95: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
    **/
   PalletUtilityRawEvent: {
     _enum: {
@@ -718,19 +703,19 @@ export default {
     }
   },
   /**
-   * Lookup95: pallet_common::working_group::iterable_enums::WorkingGroup
+   * Lookup96: pallet_common::working_group::iterable_enums::WorkingGroup
    **/
   PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
     _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
   },
   /**
-   * Lookup96: pallet_common::BalanceKind
+   * Lookup97: pallet_common::BalanceKind
    **/
   PalletCommonBalanceKind: {
     _enum: ['Positive', 'Negative']
   },
   /**
-   * Lookup97: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+   * Lookup98: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
    **/
   PalletContentRawEvent: {
     _enum: {
@@ -758,9 +743,8 @@ export default {
       VideoDeletedByModerator: '(PalletContentPermissionsContentActor,u64,Bytes)',
       VideoVisibilitySetByModerator: '(PalletContentPermissionsContentActor,u64,bool,Bytes)',
       VideoAssetsDeletedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,bool,Bytes)',
-      ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>)',
-      ChannelRewardUpdated: '(u128,u64)',
-      CouncilRewardClaimed: '(u64,u128)',
+      ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>,AccountId32)',
+      ChannelRewardUpdated: '(u128,u128,u64)',
       EnglishAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesEnglishAuctionParamsRecord)',
       OpenAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesOpenAuctionParamsRecord,u64)',
       NftIssued: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesNftIssuanceParametersRecord)',
@@ -792,7 +776,7 @@ export default {
     }
   },
   /**
-   * Lookup98: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+   * Lookup99: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
    **/
   PalletContentPermissionsContentActor: {
     _enum: {
@@ -802,7 +786,7 @@ export default {
     }
   },
   /**
-   * Lookup99: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup100: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletContentChannelRecord: {
     owner: 'PalletContentChannelOwner',
@@ -821,26 +805,26 @@ export default {
     channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
   },
   /**
-   * Lookup103: pallet_content::types::iterable_enums::ChannelActionPermission
+   * Lookup104: pallet_content::types::iterable_enums::ChannelActionPermission
    **/
   PalletContentIterableEnumsChannelActionPermission: {
-    _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken']
+    _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
   },
   /**
-   * Lookup110: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+   * Lookup111: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
    **/
   PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
     _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
   },
   /**
-   * Lookup113: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+   * Lookup114: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
    **/
   PalletCommonBloatBondRepayableBloatBond: {
     repaymentRestrictedTo: 'Option<AccountId32>',
     amount: 'u128'
   },
   /**
-   * Lookup114: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+   * Lookup115: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
    **/
   PalletContentChannelOwner: {
     _enum: {
@@ -849,7 +833,7 @@ export default {
     }
   },
   /**
-   * Lookup115: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+   * Lookup116: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
    **/
   PalletContentChannelTransferStatus: {
     _enum: {
@@ -858,14 +842,14 @@ export default {
     }
   },
   /**
-   * Lookup116: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+   * Lookup117: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
    **/
   PalletContentPendingTransfer: {
     newOwner: 'PalletContentChannelOwner',
     transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
   },
   /**
-   * Lookup117: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+   * Lookup118: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
    **/
   PalletContentTransferCommitmentParametersBoundedBTreeMap: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -873,21 +857,21 @@ export default {
     transferId: 'u64'
   },
   /**
-   * Lookup118: pallet_content::types::LimitPerPeriod<BlockNumber>
+   * Lookup119: pallet_content::types::LimitPerPeriod<BlockNumber>
    **/
   PalletContentLimitPerPeriod: {
     limit: 'u64',
     blockNumberPeriod: 'u32'
   },
   /**
-   * Lookup119: pallet_content::types::NftCounter<BlockNumber>
+   * Lookup120: pallet_content::types::NftCounter<BlockNumber>
    **/
   PalletContentNftCounter: {
     counter: 'u64',
     lastUpdated: 'u32'
   },
   /**
-   * Lookup120: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+   * Lookup121: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
    **/
   PalletContentNftTypesEnglishAuctionParamsRecord: {
     startingPrice: 'u128',
@@ -899,7 +883,7 @@ export default {
     minBidStep: 'u128'
   },
   /**
-   * Lookup122: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+   * Lookup123: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
    **/
   PalletContentNftTypesOpenAuctionParamsRecord: {
     startingPrice: 'u128',
@@ -909,7 +893,7 @@ export default {
     bidLockDuration: 'u32'
   },
   /**
-   * Lookup123: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+   * Lookup124: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
    **/
   PalletContentNftTypesNftIssuanceParametersRecord: {
     royalty: 'Option<Perbill>',
@@ -918,7 +902,7 @@ export default {
     initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
   },
   /**
-   * Lookup124: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+   * Lookup125: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
    **/
   PalletContentNftTypesInitTransactionalStatusRecord: {
     _enum: {
@@ -930,7 +914,7 @@ export default {
     }
   },
   /**
-   * Lookup126: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+   * Lookup127: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
    **/
   PalletContentChannelCreationParametersRecord: {
     assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -942,14 +926,14 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup127: pallet_content::types::StorageAssetsRecord<Balance>
+   * Lookup128: pallet_content::types::StorageAssetsRecord<Balance>
    **/
   PalletContentStorageAssetsRecord: {
     objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
     expectedDataSizeFee: 'u128'
   },
   /**
-   * Lookup129: pallet_storage::DataObjectCreationParameters
+   * Lookup130: pallet_storage::DataObjectCreationParameters
    **/
   PalletStorageDataObjectCreationParameters: {
     _alias: {
@@ -959,14 +943,14 @@ export default {
     ipfsContentId: 'Bytes'
   },
   /**
-   * Lookup130: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+   * Lookup131: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
    **/
   PalletStorageDistributionBucketIdRecord: {
     distributionBucketFamilyId: 'u64',
     distributionBucketIndex: 'u64'
   },
   /**
-   * Lookup137: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+   * Lookup138: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
    **/
   PalletContentChannelUpdateParametersRecord: {
     assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -977,7 +961,7 @@ export default {
     storageBucketsNumWitness: 'Option<u32>'
   },
   /**
-   * Lookup139: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+   * Lookup140: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
    **/
   PalletContentVideoCreationParametersRecord: {
     assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -988,7 +972,7 @@ export default {
     storageBucketsNumWitness: 'u32'
   },
   /**
-   * Lookup141: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+   * Lookup142: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
    **/
   PalletContentVideoUpdateParametersRecord: {
     assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -999,7 +983,7 @@ export default {
     storageBucketsNumWitness: 'Option<u32>'
   },
   /**
-   * Lookup144: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+   * Lookup145: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
    **/
   PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
     _enum: {
@@ -1014,7 +998,7 @@ export default {
     }
   },
   /**
-   * Lookup148: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+   * Lookup149: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
    **/
   PalletContentTransferCommitmentParametersBTreeMap: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1022,7 +1006,7 @@ export default {
     transferId: 'u64'
   },
   /**
-   * Lookup149: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>
+   * Lookup150: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
    **/
   PalletContentUpdateChannelPayoutsParametersRecord: {
     commitment: 'Option<H256>',
@@ -1032,16 +1016,15 @@ export default {
     channelCashoutsEnabled: 'Option<bool>'
   },
   /**
-   * Lookup150: pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>
+   * Lookup151: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
    **/
   PalletContentChannelPayoutsPayloadParametersRecord: {
-    uploaderAccount: 'AccountId32',
     objectCreationParams: 'PalletStorageDataObjectCreationParameters',
     expectedDataSizeFee: 'u128',
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup154: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+   * Lookup155: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
    **/
   PalletContentChannelFundsDestination: {
     _enum: {
@@ -1050,13 +1033,13 @@ export default {
     }
   },
   /**
-   * Lookup155: pallet_content::types::NftLimitPeriod
+   * Lookup156: pallet_content::types::NftLimitPeriod
    **/
   PalletContentNftLimitPeriod: {
     _enum: ['Daily', 'Weekly']
   },
   /**
-   * Lookup156: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+   * Lookup157: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
    **/
   PalletStorageRawEvent: {
     _enum: {
@@ -1105,7 +1088,7 @@ export default {
     }
   },
   /**
-   * Lookup157: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+   * Lookup158: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
    **/
   PalletStorageUploadParametersRecord: {
     bagId: 'PalletStorageBagIdType',
@@ -1115,7 +1098,7 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup158: pallet_storage::BagIdType<MemberId, ChannelId>
+   * Lookup159: pallet_storage::BagIdType<MemberId, ChannelId>
    **/
   PalletStorageBagIdType: {
     _enum: {
@@ -1124,7 +1107,7 @@ export default {
     }
   },
   /**
-   * Lookup159: pallet_storage::StaticBagId
+   * Lookup160: pallet_storage::StaticBagId
    **/
   PalletStorageStaticBagId: {
     _enum: {
@@ -1133,7 +1116,7 @@ export default {
     }
   },
   /**
-   * Lookup160: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+   * Lookup161: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
    **/
   PalletStorageDynamicBagIdType: {
     _enum: {
@@ -1142,7 +1125,7 @@ export default {
     }
   },
   /**
-   * Lookup161: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+   * Lookup162: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
    **/
   PalletStorageDynBagCreationParametersRecord: {
     bagId: 'PalletStorageDynamicBagIdType',
@@ -1154,7 +1137,7 @@ export default {
     distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
   },
   /**
-   * Lookup164: pallet_storage::Voucher
+   * Lookup165: pallet_storage::Voucher
    **/
   PalletStorageVoucher: {
     sizeLimit: 'u64',
@@ -1163,19 +1146,19 @@ export default {
     objectsUsed: 'u64'
   },
   /**
-   * Lookup165: pallet_storage::DynamicBagType
+   * Lookup166: pallet_storage::DynamicBagType
    **/
   PalletStorageDynamicBagType: {
     _enum: ['Member', 'Channel']
   },
   /**
-   * Lookup169: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>>
+   * Lookup170: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
    **/
   PalletProjectTokenEventsRawEvent: {
     _enum: {
-      TokenAmountTransferred: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-      TokenAmountTransferredByIssuer: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',
-      PatronageRateDecreasedTo: '(u64,Perquintill)',
+      TokenAmountTransferred: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+      TokenAmountTransferredByIssuer: '(u64,u64,PalletProjectTokenTransfers,Bytes)',
+      PatronageRateDecreasedTo: '(u64,Permill)',
       PatronageCreditClaimed: '(u64,u128,u64)',
       RevenueSplitIssued: '(u64,u32,u32,u128)',
       RevenueSplitFinalized: '(u64,AccountId32,u128)',
@@ -1190,11 +1173,16 @@ export default {
       TokensPurchasedOnSale: '(u64,u32,u128,u64)',
       TokenSaleFinalized: '(u64,u32,u128,u128)',
       TransferPolicyChangedToPermissionless: 'u64',
-      TokensBurned: '(u64,u64,u128)'
+      TokensBurned: '(u64,u64,u128)',
+      AmmActivated: '(u64,u64,PalletProjectTokenAmmCurve)',
+      TokensBoughtOnAmm: '(u64,u64,u128,u128)',
+      TokensSoldOnAmm: '(u64,u64,u128,u128)',
+      AmmDeactivated: '(u64,u64,u128)',
+      MaxYearlyPatronageRateUpdated: 'Permill'
     }
   },
   /**
-   * Lookup170: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+   * Lookup171: pallet_project_token::types::TransferPolicy<primitive_types::H256>
    **/
   PalletProjectTokenTransferPolicy: {
     _enum: {
@@ -1203,7 +1191,7 @@ export default {
     }
   },
   /**
-   * Lookup171: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+   * Lookup172: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
    **/
   PalletProjectTokenTokenIssuanceParameters: {
     initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1213,14 +1201,14 @@ export default {
     revenueSplitRate: 'Permill'
   },
   /**
-   * Lookup172: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup173: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenTokenAllocation: {
     amount: 'u128',
     vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
   },
   /**
-   * Lookup173: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+   * Lookup174: pallet_project_token::types::VestingScheduleParams<BlockNumber>
    **/
   PalletProjectTokenVestingScheduleParams: {
     linearVestingDuration: 'u32',
@@ -1228,7 +1216,7 @@ export default {
     cliffAmountPercentage: 'Permill'
   },
   /**
-   * Lookup176: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+   * Lookup177: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
    **/
   PalletProjectTokenTransferPolicyParams: {
     _enum: {
@@ -1237,14 +1225,14 @@ export default {
     }
   },
   /**
-   * Lookup177: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+   * Lookup178: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
    **/
   PalletProjectTokenWhitelistParams: {
     commitment: 'H256',
     payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
   },
   /**
-   * Lookup178: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+   * Lookup179: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
    **/
   PalletProjectTokenSingleDataObjectUploadParams: {
     objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1252,7 +1240,11 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup185: pallet_project_token::types::Validated<MemberId>
+   * Lookup185: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+   **/
+  PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
+  /**
+   * Lookup186: pallet_project_token::types::Validated<MemberId>
    **/
   PalletProjectTokenValidated: {
     _enum: {
@@ -1261,21 +1253,21 @@ export default {
     }
   },
   /**
-   * Lookup186: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+   * Lookup187: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
    **/
   PalletProjectTokenValidatedPayment: {
     payment: 'PalletProjectTokenPaymentWithVesting',
     vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
   },
   /**
-   * Lookup187: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup188: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenPaymentWithVesting: {
     amount: 'u128',
     vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
   },
   /**
-   * Lookup189: pallet_project_token::types::VestingSource
+   * Lookup190: pallet_project_token::types::VestingSource
    **/
   PalletProjectTokenVestingSource: {
     _enum: {
@@ -1285,7 +1277,7 @@ export default {
     }
   },
   /**
-   * Lookup193: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+   * Lookup194: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
    **/
   PalletProjectTokenTokenSale: {
     unitPrice: 'u128',
@@ -1300,7 +1292,15 @@ export default {
     autoFinalize: 'bool'
   },
   /**
-   * Lookup195: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+   * Lookup195: pallet_project_token::types::AmmCurve<Balance>
+   **/
+  PalletProjectTokenAmmCurve: {
+    slope: 'u128',
+    intercept: 'u128',
+    providedSupply: 'u128'
+  },
+  /**
+   * Lookup196: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
    **/
   PalletProposalsEngineRawEvent: {
     _enum: {
@@ -1313,7 +1313,7 @@ export default {
     }
   },
   /**
-   * Lookup196: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+   * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
    **/
   PalletProposalsEngineProposalStatusesProposalStatus: {
     _enum: {
@@ -1323,7 +1323,7 @@ export default {
     }
   },
   /**
-   * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+   * Lookup198: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
    **/
   PalletProposalsEngineProposalStatusesProposalDecision: {
     _enum: {
@@ -1337,13 +1337,13 @@ export default {
     }
   },
   /**
-   * Lookup198: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+   * Lookup199: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
    **/
   PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
     _enum: ['PendingExecution', 'PendingConstitutionality']
   },
   /**
-   * Lookup199: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+   * Lookup200: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
    **/
   PalletProposalsEngineProposalStatusesExecutionStatus: {
     _enum: {
@@ -1354,13 +1354,13 @@ export default {
     }
   },
   /**
-   * Lookup200: pallet_proposals_engine::types::VoteKind
+   * Lookup201: pallet_proposals_engine::types::VoteKind
    **/
   PalletProposalsEngineVoteKind: {
     _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
   },
   /**
-   * Lookup201: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+   * Lookup202: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
    **/
   PalletProposalsDiscussionRawEvent: {
     _enum: {
@@ -1372,7 +1372,7 @@ export default {
     }
   },
   /**
-   * Lookup202: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+   * Lookup203: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
    **/
   PalletProposalsDiscussionThreadModeBTreeSet: {
     _enum: {
@@ -1381,7 +1381,7 @@ export default {
     }
   },
   /**
-   * Lookup203: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+   * Lookup204: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
    **/
   PalletProposalsCodexRawEvent: {
     _enum: {
@@ -1389,7 +1389,7 @@ export default {
     }
   },
   /**
-   * Lookup204: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+   * Lookup205: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
    **/
   PalletProposalsCodexGeneralProposalParams: {
     memberId: 'u64',
@@ -1399,7 +1399,7 @@ export default {
     exactExecutionBlock: 'Option<u32>'
   },
   /**
-   * Lookup205: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<sp_core::crypto::AccountId32, Balance>, Balance, primitive_types::H256>>
+   * Lookup206: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
    **/
   PalletProposalsCodexProposalDetails: {
     _enum: {
@@ -1425,18 +1425,19 @@ export default {
       SetReferralCut: 'u8',
       VetoProposal: 'u32',
       UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
-      UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord'
+      UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
+      UpdateMaxYearlyPatronageRate: 'Permill'
     }
   },
   /**
-   * Lookup207: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+   * Lookup208: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
    **/
   PalletCommonFundingRequestParameters: {
     account: 'AccountId32',
     amount: 'u128'
   },
   /**
-   * Lookup208: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+   * Lookup209: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
    **/
   PalletProposalsCodexCreateOpeningParameters: {
     description: 'Bytes',
@@ -1445,14 +1446,14 @@ export default {
     group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup209: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+   * Lookup210: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
    **/
   PalletWorkingGroupStakePolicy: {
     stakeAmount: 'u128',
     leavingUnstakingPeriod: 'u32'
   },
   /**
-   * Lookup210: pallet_proposals_codex::types::FillOpeningParameters
+   * Lookup211: pallet_proposals_codex::types::FillOpeningParameters
    **/
   PalletProposalsCodexFillOpeningParameters: {
     openingId: 'u64',
@@ -1460,7 +1461,7 @@ export default {
     workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup211: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+   * Lookup212: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
    **/
   PalletProposalsCodexTerminateRoleParameters: {
     workerId: 'u64',
@@ -1468,7 +1469,7 @@ export default {
     group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup212: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+   * Lookup213: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
    **/
   PalletWorkingGroupRawEventInstance1: {
     _enum: {
@@ -1500,13 +1501,13 @@ export default {
     }
   },
   /**
-   * Lookup216: pallet_working_group::types::OpeningType
+   * Lookup217: pallet_working_group::types::OpeningType
    **/
   PalletWorkingGroupOpeningType: {
     _enum: ['Leader', 'Regular']
   },
   /**
-   * Lookup217: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+   * Lookup218: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
    **/
   PalletWorkingGroupApplyOnOpeningParams: {
     memberId: 'u64',
@@ -1517,24 +1518,24 @@ export default {
     stakeParameters: 'PalletWorkingGroupStakeParameters'
   },
   /**
-   * Lookup218: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+   * Lookup219: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
    **/
   PalletWorkingGroupStakeParameters: {
     stake: 'u128',
     stakingAccountId: 'AccountId32'
   },
   /**
-   * Lookup219: pallet_working_group::Instance1
+   * Lookup220: pallet_working_group::Instance1
    **/
   PalletWorkingGroupInstance1: 'Null',
   /**
-   * Lookup220: pallet_working_group::types::RewardPaymentType
+   * Lookup221: pallet_working_group::types::RewardPaymentType
    **/
   PalletWorkingGroupRewardPaymentType: {
     _enum: ['MissedReward', 'RegularReward']
   },
   /**
-   * Lookup221: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+   * Lookup222: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
    **/
   PalletWorkingGroupRawEventInstance2: {
     _enum: {
@@ -1566,11 +1567,11 @@ export default {
     }
   },
   /**
-   * Lookup222: pallet_working_group::Instance2
+   * Lookup223: pallet_working_group::Instance2
    **/
   PalletWorkingGroupInstance2: 'Null',
   /**
-   * Lookup223: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+   * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
    **/
   PalletWorkingGroupRawEventInstance3: {
     _enum: {
@@ -1602,11 +1603,11 @@ export default {
     }
   },
   /**
-   * Lookup224: pallet_working_group::Instance3
+   * Lookup225: pallet_working_group::Instance3
    **/
   PalletWorkingGroupInstance3: 'Null',
   /**
-   * Lookup225: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+   * Lookup226: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
    **/
   PalletWorkingGroupRawEventInstance4: {
     _enum: {
@@ -1638,11 +1639,11 @@ export default {
     }
   },
   /**
-   * Lookup226: pallet_working_group::Instance4
+   * Lookup227: pallet_working_group::Instance4
    **/
   PalletWorkingGroupInstance4: 'Null',
   /**
-   * Lookup227: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+   * Lookup228: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
    **/
   PalletWorkingGroupRawEventInstance5: {
     _enum: {
@@ -1674,11 +1675,11 @@ export default {
     }
   },
   /**
-   * Lookup228: pallet_working_group::Instance5
+   * Lookup229: pallet_working_group::Instance5
    **/
   PalletWorkingGroupInstance5: 'Null',
   /**
-   * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+   * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
    **/
   PalletWorkingGroupRawEventInstance6: {
     _enum: {
@@ -1710,11 +1711,11 @@ export default {
     }
   },
   /**
-   * Lookup230: pallet_working_group::Instance6
+   * Lookup231: pallet_working_group::Instance6
    **/
   PalletWorkingGroupInstance6: 'Null',
   /**
-   * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+   * Lookup232: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
    **/
   PalletWorkingGroupRawEventInstance7: {
     _enum: {
@@ -1746,11 +1747,11 @@ export default {
     }
   },
   /**
-   * Lookup232: pallet_working_group::Instance7
+   * Lookup233: pallet_working_group::Instance7
    **/
   PalletWorkingGroupInstance7: 'Null',
   /**
-   * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+   * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
    **/
   PalletWorkingGroupRawEventInstance8: {
     _enum: {
@@ -1782,11 +1783,11 @@ export default {
     }
   },
   /**
-   * Lookup234: pallet_working_group::Instance8
+   * Lookup235: pallet_working_group::Instance8
    **/
   PalletWorkingGroupInstance8: 'Null',
   /**
-   * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+   * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
    **/
   PalletWorkingGroupRawEventInstance9: {
     _enum: {
@@ -1818,11 +1819,11 @@ export default {
     }
   },
   /**
-   * Lookup236: pallet_working_group::Instance9
+   * Lookup237: pallet_working_group::Instance9
    **/
   PalletWorkingGroupInstance9: 'Null',
   /**
-   * Lookup237: frame_system::Phase
+   * Lookup238: frame_system::Phase
    **/
   FrameSystemPhase: {
     _enum: {
@@ -1832,14 +1833,14 @@ export default {
     }
   },
   /**
-   * Lookup241: frame_system::LastRuntimeUpgradeInfo
+   * Lookup242: frame_system::LastRuntimeUpgradeInfo
    **/
   FrameSystemLastRuntimeUpgradeInfo: {
     specVersion: 'Compact<u32>',
     specName: 'Text'
   },
   /**
-   * Lookup244: frame_system::pallet::Call<T>
+   * Lookup245: frame_system::pallet::Call<T>
    **/
   FrameSystemCall: {
     _enum: {
@@ -1877,7 +1878,7 @@ export default {
     }
   },
   /**
-   * Lookup247: frame_system::limits::BlockWeights
+   * Lookup248: frame_system::limits::BlockWeights
    **/
   FrameSystemLimitsBlockWeights: {
     baseBlock: 'u64',
@@ -1885,7 +1886,7 @@ export default {
     perClass: 'FrameSupportWeightsPerDispatchClassWeightsPerClass'
   },
   /**
-   * Lookup248: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
+   * Lookup249: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>
    **/
   FrameSupportWeightsPerDispatchClassWeightsPerClass: {
     normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1893,7 +1894,7 @@ export default {
     mandatory: 'FrameSystemLimitsWeightsPerClass'
   },
   /**
-   * Lookup249: frame_system::limits::WeightsPerClass
+   * Lookup250: frame_system::limits::WeightsPerClass
    **/
   FrameSystemLimitsWeightsPerClass: {
     baseExtrinsic: 'u64',
@@ -1902,13 +1903,13 @@ export default {
     reserved: 'Option<u64>'
   },
   /**
-   * Lookup250: frame_system::limits::BlockLength
+   * Lookup251: frame_system::limits::BlockLength
    **/
   FrameSystemLimitsBlockLength: {
     max: 'FrameSupportWeightsPerDispatchClassU32'
   },
   /**
-   * Lookup251: frame_support::weights::PerDispatchClass<T>
+   * Lookup252: frame_support::weights::PerDispatchClass<T>
    **/
   FrameSupportWeightsPerDispatchClassU32: {
     normal: 'u32',
@@ -1916,14 +1917,14 @@ export default {
     mandatory: 'u32'
   },
   /**
-   * Lookup252: frame_support::weights::RuntimeDbWeight
+   * Lookup253: frame_support::weights::RuntimeDbWeight
    **/
   FrameSupportWeightsRuntimeDbWeight: {
     read: 'u64',
     write: 'u64'
   },
   /**
-   * Lookup253: sp_version::RuntimeVersion
+   * Lookup254: sp_version::RuntimeVersion
    **/
   SpVersionRuntimeVersion: {
     specName: 'Text',
@@ -1936,13 +1937,13 @@ export default {
     stateVersion: 'u8'
   },
   /**
-   * Lookup259: frame_system::pallet::Error<T>
+   * Lookup260: frame_system::pallet::Error<T>
    **/
   FrameSystemError: {
     _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
   },
   /**
-   * Lookup260: pallet_utility::pallet::Call<T>
+   * Lookup261: pallet_utility::pallet::Call<T>
    **/
   PalletUtilityCall: {
     _enum: {
@@ -1966,7 +1967,7 @@ export default {
     }
   },
   /**
-   * Lookup263: pallet_babe::pallet::Call<T>
+   * Lookup264: pallet_babe::pallet::Call<T>
    **/
   PalletBabeCall: {
     _enum: {
@@ -1984,7 +1985,7 @@ export default {
     }
   },
   /**
-   * Lookup264: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+   * Lookup265: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
    **/
   SpConsensusSlotsEquivocationProof: {
     offender: 'SpConsensusBabeAppPublic',
@@ -1993,7 +1994,7 @@ export default {
     secondHeader: 'SpRuntimeHeader'
   },
   /**
-   * Lookup265: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+   * Lookup266: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
    **/
   SpRuntimeHeader: {
     parentHash: 'H256',
@@ -2003,15 +2004,15 @@ export default {
     digest: 'SpRuntimeDigest'
   },
   /**
-   * Lookup266: sp_runtime::traits::BlakeTwo256
+   * Lookup267: sp_runtime::traits::BlakeTwo256
    **/
   SpRuntimeBlakeTwo256: 'Null',
   /**
-   * Lookup267: sp_consensus_babe::app::Public
+   * Lookup268: sp_consensus_babe::app::Public
    **/
   SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
   /**
-   * Lookup269: sp_session::MembershipProof
+   * Lookup270: sp_session::MembershipProof
    **/
   SpSessionMembershipProof: {
     session: 'u32',
@@ -2019,7 +2020,7 @@ export default {
     validatorCount: 'u32'
   },
   /**
-   * Lookup270: sp_consensus_babe::digests::NextConfigDescriptor
+   * Lookup271: sp_consensus_babe::digests::NextConfigDescriptor
    **/
   SpConsensusBabeDigestsNextConfigDescriptor: {
     _enum: {
@@ -2031,13 +2032,13 @@ export default {
     }
   },
   /**
-   * Lookup271: sp_consensus_babe::AllowedSlots
+   * Lookup272: sp_consensus_babe::AllowedSlots
    **/
   SpConsensusBabeAllowedSlots: {
     _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
   },
   /**
-   * Lookup272: pallet_timestamp::pallet::Call<T>
+   * Lookup273: pallet_timestamp::pallet::Call<T>
    **/
   PalletTimestampCall: {
     _enum: {
@@ -2047,7 +2048,7 @@ export default {
     }
   },
   /**
-   * Lookup274: pallet_authorship::pallet::Call<T>
+   * Lookup275: pallet_authorship::pallet::Call<T>
    **/
   PalletAuthorshipCall: {
     _enum: {
@@ -2057,7 +2058,7 @@ export default {
     }
   },
   /**
-   * Lookup276: pallet_balances::pallet::Call<T, I>
+   * Lookup277: pallet_balances::pallet::Call<T, I>
    **/
   PalletBalancesCall: {
     _enum: {
@@ -2090,7 +2091,7 @@ export default {
     }
   },
   /**
-   * Lookup277: pallet_election_provider_multi_phase::pallet::Call<T>
+   * Lookup278: pallet_election_provider_multi_phase::pallet::Call<T>
    **/
   PalletElectionProviderMultiPhaseCall: {
     _enum: {
@@ -2114,7 +2115,7 @@ export default {
     }
   },
   /**
-   * Lookup278: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+   * Lookup279: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
    **/
   PalletElectionProviderMultiPhaseRawSolution: {
     solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2122,7 +2123,7 @@ export default {
     round: 'u32'
   },
   /**
-   * Lookup279: joystream_node_runtime::NposSolution16
+   * Lookup280: joystream_node_runtime::NposSolution16
    **/
   JoystreamNodeRuntimeNposSolution16: {
     votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2143,7 +2144,7 @@ export default {
     votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
   },
   /**
-   * Lookup330: sp_npos_elections::ElectionScore
+   * Lookup331: sp_npos_elections::ElectionScore
    **/
   SpNposElectionsElectionScore: {
     minimalStake: 'u128',
@@ -2151,14 +2152,14 @@ export default {
     sumStakeSquared: 'u128'
   },
   /**
-   * Lookup331: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+   * Lookup332: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
    **/
   PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
     voters: 'Compact<u32>',
     targets: 'Compact<u32>'
   },
   /**
-   * Lookup335: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+   * Lookup336: sp_npos_elections::Support<sp_core::crypto::AccountId32>
    **/
   SpNposElectionsSupport: {
     total: 'u128',
@@ -2448,31 +2449,7 @@ export default {
    **/
   SpCoreSr25519Signature: '[u8;64]',
   /**
-   * Lookup370: pallet_sudo::pallet::Call<T>
-   **/
-  PalletSudoCall: {
-    _enum: {
-      sudo: {
-        call: 'Call',
-      },
-      sudo_unchecked_weight: {
-        call: 'Call',
-        weight: 'u64',
-      },
-      set_key: {
-        _alias: {
-          new_: 'new',
-        },
-        new_: 'AccountId32',
-      },
-      sudo_as: {
-        who: 'AccountId32',
-        call: 'Call'
-      }
-    }
-  },
-  /**
-   * Lookup371: pallet_bags_list::pallet::Call<T, I>
+   * Lookup370: pallet_bags_list::pallet::Call<T, I>
    **/
   PalletBagsListCall: {
     _enum: {
@@ -2485,7 +2462,7 @@ export default {
     }
   },
   /**
-   * Lookup372: pallet_vesting::pallet::Call<T>
+   * Lookup371: pallet_vesting::pallet::Call<T>
    **/
   PalletVestingCall: {
     _enum: {
@@ -2509,7 +2486,7 @@ export default {
     }
   },
   /**
-   * Lookup373: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+   * Lookup372: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
    **/
   PalletVestingVestingInfo: {
     locked: 'u128',
@@ -2517,7 +2494,7 @@ export default {
     startingBlock: 'u32'
   },
   /**
-   * Lookup374: pallet_multisig::pallet::Call<T>
+   * Lookup373: pallet_multisig::pallet::Call<T>
    **/
   PalletMultisigCall: {
     _enum: {
@@ -2549,7 +2526,7 @@ export default {
     }
   },
   /**
-   * Lookup377: pallet_council::Call<T>
+   * Lookup376: pallet_council::Call<T>
    **/
   PalletCouncilCall: {
     _enum: {
@@ -2600,7 +2577,7 @@ export default {
     }
   },
   /**
-   * Lookup378: pallet_referendum::Call<T, I>
+   * Lookup377: pallet_referendum::Call<T, I>
    **/
   PalletReferendumCall: {
     _enum: {
@@ -2612,11 +2589,12 @@ export default {
         salt: 'Bytes',
         voteOptionId: 'u64',
       },
-      release_vote_stake: 'Null'
+      release_vote_stake: 'Null',
+      opt_out_of_voting: 'Null'
     }
   },
   /**
-   * Lookup379: pallet_membership::Call<T>
+   * Lookup378: pallet_membership::Call<T>
    **/
   PalletMembershipCall: {
     _enum: {
@@ -2677,6 +2655,7 @@ export default {
       member_remark: {
         memberId: 'u64',
         msg: 'Bytes',
+        payment: 'Option<(AccountId32,u128)>',
       },
       create_member: {
         params: 'PalletMembershipCreateMemberParameters'
@@ -2684,7 +2663,7 @@ export default {
     }
   },
   /**
-   * Lookup380: pallet_forum::Call<T>
+   * Lookup379: pallet_forum::Call<T>
    **/
   PalletForumCall: {
     _enum: {
@@ -2781,7 +2760,7 @@ export default {
     }
   },
   /**
-   * Lookup381: pallet_constitution::Call<T>
+   * Lookup380: pallet_constitution::Call<T>
    **/
   PalletConstitutionCall: {
     _enum: {
@@ -2791,7 +2770,7 @@ export default {
     }
   },
   /**
-   * Lookup382: pallet_bounty::Call<T>
+   * Lookup381: pallet_bounty::Call<T>
    **/
   PalletBountyCall: {
     _enum: {
@@ -2867,7 +2846,7 @@ export default {
     }
   },
   /**
-   * Lookup384: pallet_content::Call<T>
+   * Lookup383: pallet_content::Call<T>
    **/
   PalletContentCall: {
     _enum: {
@@ -2975,6 +2954,7 @@ export default {
       },
       update_channel_payouts: {
         params: 'PalletContentUpdateChannelPayoutsParametersRecord',
+        uploaderAccount: 'AccountId32',
       },
       claim_channel_reward: {
         actor: 'PalletContentPermissionsContentActor',
@@ -3143,7 +3123,7 @@ export default {
       creator_token_issuer_transfer: {
         actor: 'PalletContentPermissionsContentActor',
         channelId: 'u64',
-        outputs: 'PalletProjectTokenTransfersPaymentWithVesting',
+        outputs: 'Vec<(u64,PalletProjectTokenPaymentWithVesting)>',
         metadata: 'Bytes',
       },
       make_creator_token_permissionless: {
@@ -3174,20 +3154,29 @@ export default {
         channelId: 'u64',
       },
       deissue_creator_token: {
+        actor: 'PalletContentPermissionsContentActor',
+        channelId: 'u64',
+      },
+      activate_amm: {
+        actor: 'PalletContentPermissionsContentActor',
+        channelId: 'u64',
+        params: 'PalletProjectTokenAmmParams',
+      },
+      deactivate_amm: {
         actor: 'PalletContentPermissionsContentActor',
         channelId: 'u64'
       }
     }
   },
   /**
-   * Lookup385: pallet_content::types::ChannelBagWitness
+   * Lookup384: pallet_content::types::ChannelBagWitness
    **/
   PalletContentChannelBagWitness: {
     storageBucketsNum: 'u32',
     distributionBucketsNum: 'u32'
   },
   /**
-   * Lookup387: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+   * Lookup386: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
    **/
   PalletCommonMerkleTreeProofElementRecord: {
     _alias: {
@@ -3197,13 +3186,13 @@ export default {
     side: 'PalletCommonMerkleTreeSide'
   },
   /**
-   * Lookup388: pallet_common::merkle_tree::Side
+   * Lookup387: pallet_common::merkle_tree::Side
    **/
   PalletCommonMerkleTreeSide: {
     _enum: ['Left', 'Right']
   },
   /**
-   * Lookup389: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+   * Lookup388: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
    **/
   PalletContentPullPaymentElement: {
     channelId: 'u64',
@@ -3211,7 +3200,7 @@ export default {
     reason: 'H256'
   },
   /**
-   * Lookup390: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+   * Lookup389: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
    **/
   PalletContentInitTransferParameters: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3219,7 +3208,7 @@ export default {
     newOwner: 'PalletContentChannelOwner'
   },
   /**
-   * Lookup391: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup390: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenTokenSaleParams: {
     unitPrice: 'u128',
@@ -3231,11 +3220,14 @@ export default {
     metadata: 'Option<Bytes>'
   },
   /**
-   * Lookup392: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+   * Lookup394: pallet_project_token::types::AmmParams<Balance>
    **/
-  PalletProjectTokenTransfersPaymentWithVesting: 'BTreeMap<u64, PalletProjectTokenPaymentWithVesting>',
+  PalletProjectTokenAmmParams: {
+    slope: 'u128',
+    intercept: 'u128'
+  },
   /**
-   * Lookup396: pallet_storage::Call<T>
+   * Lookup395: pallet_storage::Call<T>
    **/
   PalletStorageCall: {
     _enum: {
@@ -3369,9 +3361,6 @@ export default {
         bucketId: 'PalletStorageDistributionBucketIdRecord',
         metadata: 'Bytes',
       },
-      sudo_upload_data_objects: {
-        params: 'PalletStorageUploadParametersRecord',
-      },
       storage_operator_remark: {
         workerId: 'u64',
         storageBucketId: 'u64',
@@ -3385,14 +3374,14 @@ export default {
     }
   },
   /**
-   * Lookup397: pallet_project_token::Call<T>
+   * Lookup396: pallet_project_token::Call<T>
    **/
   PalletProjectTokenCall: {
     _enum: {
       transfer: {
         srcMemberId: 'u64',
         tokenId: 'u64',
-        outputs: 'PalletProjectTokenTransfersPayment',
+        outputs: 'Vec<(u64,u128)>',
         metadata: 'Bytes',
       },
       burn: {
@@ -3421,32 +3410,37 @@ export default {
       },
       exit_revenue_split: {
         tokenId: 'u64',
-        memberId: 'u64'
+        memberId: 'u64',
+      },
+      buy_on_amm: {
+        tokenId: 'u64',
+        memberId: 'u64',
+        amount: 'u128',
+        slippageTolerance: 'Option<(Permill,u128)>',
+      },
+      sell_on_amm: {
+        tokenId: 'u64',
+        memberId: 'u64',
+        amount: 'u128',
+        slippageTolerance: 'Option<(Permill,u128)>',
+      },
+      update_max_yearly_patronage_rate: {
+        rate: 'Permill'
       }
     }
   },
   /**
-   * Lookup398: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::Payment<Balance>>
-   **/
-  PalletProjectTokenTransfersPayment: 'BTreeMap<u64, PalletProjectTokenPayment>',
-  /**
-   * Lookup399: pallet_project_token::types::Payment<Balance>
-   **/
-  PalletProjectTokenPayment: {
-    amount: 'u128'
-  },
-  /**
-   * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+   * Lookup400: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
    **/
   PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
   /**
-   * Lookup406: pallet_project_token::types::MerkleSide
+   * Lookup403: pallet_project_token::types::MerkleSide
    **/
   PalletProjectTokenMerkleSide: {
     _enum: ['Right', 'Left']
   },
   /**
-   * Lookup407: pallet_proposals_engine::Call<T>
+   * Lookup406: pallet_proposals_engine::Call<T>
    **/
   PalletProposalsEngineCall: {
     _enum: {
@@ -3471,7 +3465,7 @@ export default {
     }
   },
   /**
-   * Lookup408: pallet_proposals_discussion::Call<T>
+   * Lookup407: pallet_proposals_discussion::Call<T>
    **/
   PalletProposalsDiscussionCall: {
     _enum: {
@@ -3500,7 +3494,7 @@ export default {
     }
   },
   /**
-   * Lookup409: pallet_proposals_codex::Call<T>
+   * Lookup408: pallet_proposals_codex::Call<T>
    **/
   PalletProposalsCodexCall: {
     _enum: {
@@ -3511,7 +3505,7 @@ export default {
     }
   },
   /**
-   * Lookup410: pallet_working_group::Call<T, I>
+   * Lookup409: pallet_working_group::Call<T, I>
    **/
   PalletWorkingGroupCall: {
     _enum: {
@@ -3594,7 +3588,7 @@ export default {
     }
   },
   /**
-   * Lookup419: joystream_node_runtime::OriginCaller
+   * Lookup418: joystream_node_runtime::OriginCaller
    **/
   JoystreamNodeRuntimeOriginCaller: {
     _enum: {
@@ -3603,7 +3597,7 @@ export default {
     }
   },
   /**
-   * Lookup420: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+   * Lookup419: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
    **/
   FrameSupportDispatchRawOrigin: {
     _enum: {
@@ -3613,17 +3607,17 @@ export default {
     }
   },
   /**
-   * Lookup421: sp_core::Void
+   * Lookup420: sp_core::Void
    **/
   SpCoreVoid: 'Null',
   /**
-   * Lookup422: pallet_utility::pallet::Error<T>
+   * Lookup421: pallet_utility::pallet::Error<T>
    **/
   PalletUtilityError: {
     _enum: ['TooManyCalls']
   },
   /**
-   * Lookup429: sp_consensus_babe::digests::PreDigest
+   * Lookup428: sp_consensus_babe::digests::PreDigest
    **/
   SpConsensusBabeDigestsPreDigest: {
     _enum: {
@@ -3634,7 +3628,7 @@ export default {
     }
   },
   /**
-   * Lookup430: sp_consensus_babe::digests::PrimaryPreDigest
+   * Lookup429: sp_consensus_babe::digests::PrimaryPreDigest
    **/
   SpConsensusBabeDigestsPrimaryPreDigest: {
     authorityIndex: 'u32',
@@ -3643,14 +3637,14 @@ export default {
     vrfProof: '[u8;64]'
   },
   /**
-   * Lookup431: sp_consensus_babe::digests::SecondaryPlainPreDigest
+   * Lookup430: sp_consensus_babe::digests::SecondaryPlainPreDigest
    **/
   SpConsensusBabeDigestsSecondaryPlainPreDigest: {
     authorityIndex: 'u32',
     slot: 'u64'
   },
   /**
-   * Lookup432: sp_consensus_babe::digests::SecondaryVRFPreDigest
+   * Lookup431: sp_consensus_babe::digests::SecondaryVRFPreDigest
    **/
   SpConsensusBabeDigestsSecondaryVRFPreDigest: {
     authorityIndex: 'u32',
@@ -3659,20 +3653,20 @@ export default {
     vrfProof: '[u8;64]'
   },
   /**
-   * Lookup434: sp_consensus_babe::BabeEpochConfiguration
+   * Lookup433: sp_consensus_babe::BabeEpochConfiguration
    **/
   SpConsensusBabeBabeEpochConfiguration: {
     c: '(u64,u64)',
     allowedSlots: 'SpConsensusBabeAllowedSlots'
   },
   /**
-   * Lookup435: pallet_babe::pallet::Error<T>
+   * Lookup434: pallet_babe::pallet::Error<T>
    **/
   PalletBabeError: {
     _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
   },
   /**
-   * Lookup437: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
+   * Lookup436: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>
    **/
   PalletAuthorshipUncleEntryItem: {
     _enum: {
@@ -3681,13 +3675,13 @@ export default {
     }
   },
   /**
-   * Lookup438: pallet_authorship::pallet::Error<T>
+   * Lookup437: pallet_authorship::pallet::Error<T>
    **/
   PalletAuthorshipError: {
     _enum: ['InvalidUncleParent', 'UnclesAlreadySet', 'TooManyUncles', 'GenesisUncle', 'TooHighUncle', 'UncleAlreadyIncluded', 'OldUncle']
   },
   /**
-   * Lookup440: pallet_balances::BalanceLock<Balance>
+   * Lookup439: pallet_balances::BalanceLock<Balance>
    **/
   PalletBalancesBalanceLock: {
     id: '[u8;8]',
@@ -3695,38 +3689,38 @@ export default {
     reasons: 'PalletBalancesReasons'
   },
   /**
-   * Lookup441: pallet_balances::Reasons
+   * Lookup440: pallet_balances::Reasons
    **/
   PalletBalancesReasons: {
     _enum: ['Fee', 'Misc', 'All']
   },
   /**
-   * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+   * Lookup443: pallet_balances::ReserveData<ReserveIdentifier, Balance>
    **/
   PalletBalancesReserveData: {
     id: '[u8;8]',
     amount: 'u128'
   },
   /**
-   * Lookup446: pallet_balances::Releases
+   * Lookup445: pallet_balances::Releases
    **/
   PalletBalancesReleases: {
     _enum: ['V1_0_0', 'V2_0_0']
   },
   /**
-   * Lookup447: pallet_balances::pallet::Error<T, I>
+   * Lookup446: pallet_balances::pallet::Error<T, I>
    **/
   PalletBalancesError: {
     _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
   },
   /**
-   * Lookup449: pallet_transaction_payment::Releases
+   * Lookup448: pallet_transaction_payment::Releases
    **/
   PalletTransactionPaymentReleases: {
     _enum: ['V1Ancient', 'V2']
   },
   /**
-   * Lookup450: pallet_election_provider_multi_phase::Phase<Bn>
+   * Lookup449: pallet_election_provider_multi_phase::Phase<Bn>
    **/
   PalletElectionProviderMultiPhasePhase: {
     _enum: {
@@ -3737,7 +3731,7 @@ export default {
     }
   },
   /**
-   * Lookup452: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
+   * Lookup451: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>
    **/
   PalletElectionProviderMultiPhaseReadySolution: {
     supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3745,14 +3739,14 @@ export default {
     compute: 'PalletElectionProviderMultiPhaseElectionCompute'
   },
   /**
-   * Lookup453: pallet_election_provider_multi_phase::RoundSnapshot<T>
+   * Lookup452: pallet_election_provider_multi_phase::RoundSnapshot<T>
    **/
   PalletElectionProviderMultiPhaseRoundSnapshot: {
     voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
     targets: 'Vec<AccountId32>'
   },
   /**
-   * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+   * Lookup460: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
    **/
   PalletElectionProviderMultiPhaseSignedSignedSubmission: {
     who: 'AccountId32',
@@ -3761,13 +3755,13 @@ export default {
     callFee: 'u128'
   },
   /**
-   * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
+   * Lookup461: pallet_election_provider_multi_phase::pallet::Error<T>
    **/
   PalletElectionProviderMultiPhaseError: {
     _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed']
   },
   /**
-   * Lookup463: pallet_staking::StakingLedger<T>
+   * Lookup462: pallet_staking::StakingLedger<T>
    **/
   PalletStakingStakingLedger: {
     stash: 'AccountId32',
@@ -3777,14 +3771,14 @@ export default {
     claimedRewards: 'Vec<u32>'
   },
   /**
-   * Lookup465: pallet_staking::UnlockChunk<Balance>
+   * Lookup464: pallet_staking::UnlockChunk<Balance>
    **/
   PalletStakingUnlockChunk: {
     value: 'Compact<u128>',
     era: 'Compact<u32>'
   },
   /**
-   * Lookup467: pallet_staking::Nominations<T>
+   * Lookup466: pallet_staking::Nominations<T>
    **/
   PalletStakingNominations: {
     targets: 'Vec<AccountId32>',
@@ -3792,27 +3786,27 @@ export default {
     suppressed: 'bool'
   },
   /**
-   * Lookup468: pallet_staking::ActiveEraInfo
+   * Lookup467: pallet_staking::ActiveEraInfo
    **/
   PalletStakingActiveEraInfo: {
     index: 'u32',
     start: 'Option<u64>'
   },
   /**
-   * Lookup470: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+   * Lookup469: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
    **/
   PalletStakingEraRewardPoints: {
     total: 'u32',
     individual: 'BTreeMap<AccountId32, u32>'
   },
   /**
-   * Lookup474: pallet_staking::Forcing
+   * Lookup473: pallet_staking::Forcing
    **/
   PalletStakingForcing: {
     _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']
   },
   /**
-   * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+   * Lookup475: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
    **/
   PalletStakingUnappliedSlash: {
     validator: 'AccountId32',
@@ -3822,7 +3816,7 @@ export default {
     payout: 'u128'
   },
   /**
-   * Lookup478: pallet_staking::slashing::SlashingSpans
+   * Lookup477: pallet_staking::slashing::SlashingSpans
    **/
   PalletStakingSlashingSlashingSpans: {
     spanIndex: 'u32',
@@ -3831,36 +3825,36 @@ export default {
     prior: 'Vec<u32>'
   },
   /**
-   * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
+   * Lookup478: pallet_staking::slashing::SpanRecord<Balance>
    **/
   PalletStakingSlashingSpanRecord: {
     slashed: 'u128',
     paidOut: 'u128'
   },
   /**
-   * Lookup482: pallet_staking::Releases
+   * Lookup481: pallet_staking::Releases
    **/
   PalletStakingReleases: {
     _enum: ['V1_0_0Ancient', 'V2_0_0', 'V3_0_0', 'V4_0_0', 'V5_0_0', 'V6_0_0', 'V7_0_0', 'V8_0_0', 'V9_0_0']
   },
   /**
-   * Lookup483: pallet_staking::pallet::pallet::Error<T>
+   * Lookup482: pallet_staking::pallet::pallet::Error<T>
    **/
   PalletStakingPalletError: {
     _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BondingRestricted']
   },
   /**
-   * Lookup487: sp_core::crypto::KeyTypeId
+   * Lookup486: sp_core::crypto::KeyTypeId
    **/
   SpCoreCryptoKeyTypeId: '[u8;4]',
   /**
-   * Lookup488: pallet_session::pallet::Error<T>
+   * Lookup487: pallet_session::pallet::Error<T>
    **/
   PalletSessionError: {
     _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
   },
   /**
-   * Lookup490: pallet_grandpa::StoredState<N>
+   * Lookup489: pallet_grandpa::StoredState<N>
    **/
   PalletGrandpaStoredState: {
     _enum: {
@@ -3877,7 +3871,7 @@ export default {
     }
   },
   /**
-   * Lookup491: pallet_grandpa::StoredPendingChange<N, Limit>
+   * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
    **/
   PalletGrandpaStoredPendingChange: {
     scheduledAt: 'u32',
@@ -3886,39 +3880,33 @@ export default {
     forced: 'Option<u32>'
   },
   /**
-   * Lookup493: pallet_grandpa::pallet::Error<T>
+   * Lookup492: pallet_grandpa::pallet::Error<T>
    **/
   PalletGrandpaError: {
     _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
   },
   /**
-   * Lookup499: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+   * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
    **/
   PalletImOnlineBoundedOpaqueNetworkState: {
     peerId: 'Bytes',
     externalAddresses: 'Vec<Bytes>'
   },
   /**
-   * Lookup503: pallet_im_online::pallet::Error<T>
+   * Lookup502: pallet_im_online::pallet::Error<T>
    **/
   PalletImOnlineError: {
     _enum: ['InvalidKey', 'DuplicatedHeartbeat']
   },
   /**
-   * Lookup504: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+   * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
    **/
   SpStakingOffenceOffenceDetails: {
     offender: '(AccountId32,PalletStakingExposure)',
     reporters: 'Vec<AccountId32>'
   },
   /**
-   * Lookup507: pallet_sudo::pallet::Error<T>
-   **/
-  PalletSudoError: {
-    _enum: ['RequireSudo']
-  },
-  /**
-   * Lookup508: pallet_bags_list::list::Node<T, I>
+   * Lookup506: pallet_bags_list::list::Node<T, I>
    **/
   PalletBagsListListNode: {
     id: 'AccountId32',
@@ -3928,14 +3916,14 @@ export default {
     score: 'u64'
   },
   /**
-   * Lookup509: pallet_bags_list::list::Bag<T, I>
+   * Lookup507: pallet_bags_list::list::Bag<T, I>
    **/
   PalletBagsListListBag: {
     head: 'Option<AccountId32>',
     tail: 'Option<AccountId32>'
   },
   /**
-   * Lookup510: pallet_bags_list::pallet::Error<T, I>
+   * Lookup508: pallet_bags_list::pallet::Error<T, I>
    **/
   PalletBagsListError: {
     _enum: {
@@ -3943,25 +3931,25 @@ export default {
     }
   },
   /**
-   * Lookup511: pallet_bags_list::list::ListError
+   * Lookup509: pallet_bags_list::list::ListError
    **/
   PalletBagsListListListError: {
     _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
   },
   /**
-   * Lookup514: pallet_vesting::Releases
+   * Lookup512: pallet_vesting::Releases
    **/
   PalletVestingReleases: {
     _enum: ['V0', 'V1']
   },
   /**
-   * Lookup515: pallet_vesting::pallet::Error<T>
+   * Lookup513: pallet_vesting::pallet::Error<T>
    **/
   PalletVestingError: {
     _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
   },
   /**
-   * Lookup517: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
+   * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>
    **/
   PalletMultisigMultisig: {
     when: 'PalletMultisigTimepoint',
@@ -3970,20 +3958,20 @@ export default {
     approvals: 'Vec<AccountId32>'
   },
   /**
-   * Lookup519: pallet_multisig::pallet::Error<T>
+   * Lookup517: pallet_multisig::pallet::Error<T>
    **/
   PalletMultisigError: {
     _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
   },
   /**
-   * Lookup520: pallet_council::CouncilStageUpdate<BlockNumber>
+   * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
    **/
   PalletCouncilCouncilStageUpdate: {
     stage: 'PalletCouncilCouncilStage',
     changedAt: 'u32'
   },
   /**
-   * Lookup521: pallet_council::CouncilStage<BlockNumber>
+   * Lookup519: pallet_council::CouncilStage<BlockNumber>
    **/
   PalletCouncilCouncilStage: {
     _enum: {
@@ -3993,26 +3981,26 @@ export default {
     }
   },
   /**
-   * Lookup522: pallet_council::CouncilStageAnnouncing<BlockNumber>
+   * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
    **/
   PalletCouncilCouncilStageAnnouncing: {
     candidatesCount: 'u32',
     endsAt: 'u32'
   },
   /**
-   * Lookup523: pallet_council::CouncilStageElection
+   * Lookup521: pallet_council::CouncilStageElection
    **/
   PalletCouncilCouncilStageElection: {
     candidatesCount: 'u32'
   },
   /**
-   * Lookup524: pallet_council::CouncilStageIdle<BlockNumber>
+   * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
    **/
   PalletCouncilCouncilStageIdle: {
     endsAt: 'u32'
   },
   /**
-   * Lookup526: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+   * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
    **/
   PalletCouncilCouncilMember: {
     stakingAccountId: 'AccountId32',
@@ -4023,7 +4011,7 @@ export default {
     unpaidReward: 'u128'
   },
   /**
-   * Lookup528: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+   * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
    **/
   PalletCouncilCandidate: {
     stakingAccountId: 'AccountId32',
@@ -4034,13 +4022,13 @@ export default {
     noteHash: 'Option<H256>'
   },
   /**
-   * Lookup529: pallet_council::Error<T>
+   * Lookup527: pallet_council::Error<T>
    **/
   PalletCouncilError: {
     _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
   },
   /**
-   * Lookup530: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+   * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
    **/
   PalletReferendumReferendumStage: {
     _enum: {
@@ -4050,7 +4038,7 @@ export default {
     }
   },
   /**
-   * Lookup532: pallet_referendum::ReferendumStageVoting<BlockNumber>
+   * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
    **/
   PalletReferendumReferendumStageVoting: {
     started: 'u32',
@@ -4059,7 +4047,7 @@ export default {
     endsAt: 'u32'
   },
   /**
-   * Lookup533: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+   * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
    **/
   PalletReferendumReferendumStageRevealing: {
     started: 'u32',
@@ -4069,7 +4057,7 @@ export default {
     endsAt: 'u32'
   },
   /**
-   * Lookup534: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+   * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
    **/
   PalletReferendumCastVote: {
     commitment: 'H256',
@@ -4078,13 +4066,13 @@ export default {
     voteFor: 'Option<u64>'
   },
   /**
-   * Lookup535: pallet_referendum::Error<T, I>
+   * Lookup533: pallet_referendum::Error<T, I>
    **/
   PalletReferendumError: {
-    _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden']
+    _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
   },
   /**
-   * Lookup536: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+   * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
    **/
   PalletMembershipMembershipObject: {
     handleHash: 'H256',
@@ -4094,20 +4082,20 @@ export default {
     invites: 'u32'
   },
   /**
-   * Lookup537: pallet_membership::StakingAccountMemberBinding<MemberId>
+   * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
    **/
   PalletMembershipStakingAccountMemberBinding: {
     memberId: 'u64',
     confirmed: 'bool'
   },
   /**
-   * Lookup538: pallet_membership::Error<T>
+   * Lookup536: pallet_membership::Error<T>
    **/
   PalletMembershipError: {
-    _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift']
+    _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
   },
   /**
-   * Lookup539: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletForumCategory: {
     titleHash: 'H256',
@@ -4120,7 +4108,7 @@ export default {
     stickyThreadIds: 'BTreeSet<u64>'
   },
   /**
-   * Lookup541: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletForumThread: {
     categoryId: 'u64',
@@ -4129,7 +4117,7 @@ export default {
     numberOfEditablePosts: 'u64'
   },
   /**
-   * Lookup542: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletForumPost: {
     threadId: 'u64',
@@ -4139,19 +4127,19 @@ export default {
     lastEdited: 'u32'
   },
   /**
-   * Lookup543: pallet_forum::Error<T>
+   * Lookup541: pallet_forum::Error<T>
    **/
   PalletForumError: {
     _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
   },
   /**
-   * Lookup544: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+   * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
    **/
   PalletConstitutionConstitutionInfo: {
     textHash: 'H256'
   },
   /**
-   * Lookup545: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyBountyRecord: {
     creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4161,7 +4149,7 @@ export default {
     hasUnpaidOracleReward: 'bool'
   },
   /**
-   * Lookup547: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyBountyParametersBoundedBTreeSet: {
     oracle: 'PalletBountyBountyActor',
@@ -4173,7 +4161,7 @@ export default {
     fundingType: 'PalletBountyFundingType'
   },
   /**
-   * Lookup548: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup546: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyAssuranceContractTypeBoundedBTreeSet: {
     _enum: {
@@ -4182,7 +4170,7 @@ export default {
     }
   },
   /**
-   * Lookup549: pallet_bounty::BountyMilestone<BlockNumber>
+   * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
    **/
   PalletBountyBountyMilestone: {
     _enum: {
@@ -4199,14 +4187,14 @@ export default {
     }
   },
   /**
-   * Lookup551: pallet_bounty::Contribution<T>
+   * Lookup549: pallet_bounty::Contribution<T>
    **/
   PalletBountyContribution: {
     amount: 'u128',
     funderStateBloatBondAmount: 'u128'
   },
   /**
-   * Lookup552: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+   * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
    **/
   PalletBountyEntryRecord: {
     memberId: 'u64',
@@ -4215,13 +4203,13 @@ export default {
     workSubmitted: 'bool'
   },
   /**
-   * Lookup553: pallet_bounty::Error<T>
+   * Lookup551: pallet_bounty::Error<T>
    **/
   PalletBountyError: {
     _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
   },
   /**
-   * Lookup555: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletContentVideoRecord: {
     inChannel: 'u64',
@@ -4230,7 +4218,7 @@ export default {
     videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
   },
   /**
-   * Lookup556: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+   * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
    **/
   PalletContentNftTypesOwnedNft: {
     owner: 'PalletContentNftTypesNftOwner',
@@ -4239,7 +4227,7 @@ export default {
     openAuctionsNonce: 'u64'
   },
   /**
-   * Lookup557: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
+   * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>
    **/
   PalletContentNftTypesTransactionalStatusRecord: {
     _enum: {
@@ -4251,7 +4239,7 @@ export default {
     }
   },
   /**
-   * Lookup558: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletContentNftTypesEnglishAuctionRecord: {
     startingPrice: 'u128',
@@ -4264,14 +4252,14 @@ export default {
     topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
   },
   /**
-   * Lookup561: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+   * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
    **/
   PalletContentNftTypesEnglishAuctionBid: {
     amount: 'u128',
     bidderId: 'u64'
   },
   /**
-   * Lookup562: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletContentNftTypesOpenAuctionRecord: {
     startingPrice: 'u128',
@@ -4282,7 +4270,7 @@ export default {
     start: 'u32'
   },
   /**
-   * Lookup563: pallet_content::nft::types::NftOwner<MemberId>
+   * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
    **/
   PalletContentNftTypesNftOwner: {
     _enum: {
@@ -4291,7 +4279,7 @@ export default {
     }
   },
   /**
-   * Lookup566: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+   * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
    **/
   PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
     curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4299,7 +4287,7 @@ export default {
     permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
   },
   /**
-   * Lookup573: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+   * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
    **/
   PalletContentNftTypesOpenAuctionBidRecord: {
     amount: 'u128',
@@ -4307,13 +4295,13 @@ export default {
     auctionId: 'u64'
   },
   /**
-   * Lookup574: pallet_content::errors::Error<T>
+   * Lookup572: pallet_content::errors::Error<T>
    **/
   PalletContentErrorsError: {
-    _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales']
+    _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
   },
   /**
-   * Lookup575: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+   * Lookup573: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
    **/
   PalletStorageBagRecord: {
     storedBy: 'BTreeSet<u64>',
@@ -4322,7 +4310,7 @@ export default {
     objectsNumber: 'u64'
   },
   /**
-   * Lookup578: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+   * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
    **/
   PalletStorageStorageBucketRecord: {
     operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4331,7 +4319,7 @@ export default {
     assignedBags: 'u64'
   },
   /**
-   * Lookup579: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+   * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
    **/
   PalletStorageStorageBucketOperatorStatus: {
     _enum: {
@@ -4341,14 +4329,14 @@ export default {
     }
   },
   /**
-   * Lookup581: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+   * Lookup579: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>
    **/
   PalletStorageDynamicBagCreationPolicy: {
     numberOfStorageBuckets: 'u32',
     families: 'BTreeMap<u64, u32>'
   },
   /**
-   * Lookup584: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletStorageDataObject: {
     _alias: {
@@ -4360,13 +4348,13 @@ export default {
     ipfsContentId: 'Bytes'
   },
   /**
-   * Lookup585: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+   * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
    **/
   PalletStorageDistributionBucketFamilyRecord: {
     nextDistributionBucketIndex: 'u64'
   },
   /**
-   * Lookup586: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup584: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletStorageDistributionBucketRecord: {
     acceptingNewBags: 'bool',
@@ -4376,13 +4364,13 @@ export default {
     assignedBags: 'u64'
   },
   /**
-   * Lookup589: pallet_storage::Error<T>
+   * Lookup587: pallet_storage::Error<T>
    **/
   PalletStorageError: {
     _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
   },
   /**
-   * Lookup590: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+   * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
    **/
   PalletProjectTokenAccountData: {
     vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4393,14 +4381,14 @@ export default {
     lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
   },
   /**
-   * Lookup591: pallet_project_token::types::StakingStatus<Balance>
+   * Lookup589: pallet_project_token::types::StakingStatus<Balance>
    **/
   PalletProjectTokenStakingStatus: {
     splitId: 'u32',
     amount: 'u128'
   },
   /**
-   * Lookup593: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+   * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
    **/
   PalletProjectTokenVestingSchedule: {
     linearVestingStartBlock: 'u32',
@@ -4410,7 +4398,7 @@ export default {
     burnedAmount: 'u128'
   },
   /**
-   * Lookup600: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+   * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
    **/
   PalletProjectTokenTokenData: {
     totalSupply: 'u128',
@@ -4423,10 +4411,11 @@ export default {
     accountsNumber: 'u64',
     revenueSplitRate: 'Permill',
     revenueSplit: 'PalletProjectTokenRevenueSplitState',
-    nextRevenueSplitId: 'u32'
+    nextRevenueSplitId: 'u32',
+    ammCurve: 'Option<PalletProjectTokenAmmCurve>'
   },
   /**
-   * Lookup601: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+   * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
    **/
   PalletProjectTokenRevenueSplitState: {
     _enum: {
@@ -4435,7 +4424,7 @@ export default {
     }
   },
   /**
-   * Lookup602: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+   * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
    **/
   PalletProjectTokenRevenueSplitInfo: {
     allocation: 'u128',
@@ -4443,28 +4432,28 @@ export default {
     dividendsClaimed: 'u128'
   },
   /**
-   * Lookup603: pallet_project_token::types::Timeline<BlockNumber>
+   * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
    **/
   PalletProjectTokenTimeline: {
     start: 'u32',
     duration: 'u32'
   },
   /**
-   * Lookup605: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+   * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
    **/
   PalletProjectTokenPatronageData: {
-    rate: 'Perquintill',
+    rate: 'Permill',
     unclaimedPatronageTallyAmount: 'u128',
     lastUnclaimedPatronageTallyBlock: 'u32'
   },
   /**
-   * Lookup607: pallet_project_token::errors::Error<T>
+   * Lookup605: pallet_project_token::errors::Error<T>
    **/
   PalletProjectTokenErrorsError: {
-    _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'MerkleProofVerificationFailure', 'TargetPatronageRateIsHigherThanCurrentRate', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TransferDestinationMemberDoesNotExist', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount']
+    _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded']
   },
   /**
-   * Lookup608: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+   * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
    **/
   PalletProposalsEngineProposal: {
     parameters: 'PalletProposalsEngineProposalParameters',
@@ -4477,7 +4466,7 @@ export default {
     stakingAccountId: 'Option<AccountId32>'
   },
   /**
-   * Lookup609: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+   * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
    **/
   PalletProposalsEngineProposalParameters: {
     votingPeriod: 'u32',
@@ -4490,7 +4479,7 @@ export default {
     constitutionality: 'u32'
   },
   /**
-   * Lookup610: pallet_proposals_engine::types::VotingResults
+   * Lookup608: pallet_proposals_engine::types::VotingResults
    **/
   PalletProposalsEngineVotingResults: {
     abstentions: 'u32',
@@ -4499,13 +4488,13 @@ export default {
     slashes: 'u32'
   },
   /**
-   * Lookup613: pallet_proposals_engine::Error<T>
+   * Lookup611: pallet_proposals_engine::Error<T>
    **/
   PalletProposalsEngineError: {
     _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
   },
   /**
-   * Lookup614: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletProposalsDiscussionDiscussionThread: {
     activatedAt: 'u32',
@@ -4513,7 +4502,7 @@ export default {
     mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
   },
   /**
-   * Lookup616: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup614: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
     _enum: {
@@ -4522,7 +4511,7 @@ export default {
     }
   },
   /**
-   * Lookup617: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletProposalsDiscussionDiscussionPost: {
     authorId: 'u64',
@@ -4530,19 +4519,19 @@ export default {
     lastEdited: 'u32'
   },
   /**
-   * Lookup618: pallet_proposals_discussion::Error<T>
+   * Lookup616: pallet_proposals_discussion::Error<T>
    **/
   PalletProposalsDiscussionError: {
     _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
   },
   /**
-   * Lookup619: pallet_proposals_codex::Error<T>
+   * Lookup617: pallet_proposals_codex::Error<T>
    **/
   PalletProposalsCodexError: {
-    _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+    _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'MaxYearlyPatronageRateCannotBeZero']
   },
   /**
-   * Lookup620: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+   * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
    **/
   PalletWorkingGroupOpening: {
     openingType: 'PalletWorkingGroupOpeningType',
@@ -4553,7 +4542,7 @@ export default {
     creationStake: 'u128'
   },
   /**
-   * Lookup621: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+   * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
    **/
   PalletWorkingGroupJobApplication: {
     roleAccountId: 'AccountId32',
@@ -4564,7 +4553,7 @@ export default {
     openingId: 'u64'
   },
   /**
-   * Lookup622: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+   * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
    **/
   PalletWorkingGroupGroupWorker: {
     memberId: 'u64',
@@ -4578,13 +4567,13 @@ export default {
     createdAt: 'u32'
   },
   /**
-   * Lookup623: pallet_working_group::errors::Error<T, I>
+   * Lookup621: pallet_working_group::errors::Error<T, I>
    **/
   PalletWorkingGroupErrorsError: {
     _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
   },
   /**
-   * Lookup633: sp_runtime::MultiSignature
+   * Lookup631: sp_runtime::MultiSignature
    **/
   SpRuntimeMultiSignature: {
     _enum: {
@@ -4594,39 +4583,39 @@ export default {
     }
   },
   /**
-   * Lookup634: sp_core::ecdsa::Signature
+   * Lookup632: sp_core::ecdsa::Signature
    **/
   SpCoreEcdsaSignature: '[u8;65]',
   /**
-   * Lookup637: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+   * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
    **/
   FrameSystemExtensionsCheckNonZeroSender: 'Null',
   /**
-   * Lookup638: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+   * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
    **/
   FrameSystemExtensionsCheckSpecVersion: 'Null',
   /**
-   * Lookup639: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+   * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
    **/
   FrameSystemExtensionsCheckTxVersion: 'Null',
   /**
-   * Lookup640: frame_system::extensions::check_genesis::CheckGenesis<T>
+   * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
    **/
   FrameSystemExtensionsCheckGenesis: 'Null',
   /**
-   * Lookup643: frame_system::extensions::check_nonce::CheckNonce<T>
+   * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
    **/
   FrameSystemExtensionsCheckNonce: 'Compact<u32>',
   /**
-   * Lookup644: frame_system::extensions::check_weight::CheckWeight<T>
+   * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
    **/
   FrameSystemExtensionsCheckWeight: 'Null',
   /**
-   * Lookup645: pallet_transaction_payment::ChargeTransactionPayment<T>
+   * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
    **/
   PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
   /**
-   * Lookup646: joystream_node_runtime::Runtime
+   * Lookup644: joystream_node_runtime::Runtime
    **/
   JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/node_modules/@joystream/types/src/augment/registry.ts b/node_modules/@joystream/types/src/augment/registry.ts
index cdcf544..a882fb3 100644
--- a/node_modules/@joystream/types/src/augment/registry.ts
+++ b/node_modules/@joystream/types/src/augment/registry.ts
@@ -1,7 +1,7 @@
 // Auto-generated via `yarn polkadot-types-from-defs`, do not edit
 /* eslint-disable */
 
-import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchClass, FrameSupportWeightsDispatchInfo, FrameSupportWeightsPays, FrameSupportWeightsPerDispatchClassU32, FrameSupportWeightsPerDispatchClassU64, FrameSupportWeightsPerDispatchClassWeightsPerClass, FrameSupportWeightsRuntimeDbWeight, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletAuthorshipCall, PalletAuthorshipError, PalletAuthorshipUncleEntryItem, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReleases, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPayment, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfersPayment, PalletProjectTokenTransfersPaymentWithVesting, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingReleases, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletSudoCall, PalletSudoError, PalletSudoEvent, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletUtilityRawEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpFinalityGrandpaAppPublic, SpFinalityGrandpaAppSignature, SpFinalityGrandpaEquivocation, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeArithmeticError, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion } from '@polkadot/types/lookup';
+import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSupportWeightsDispatchClass, FrameSupportWeightsDispatchInfo, FrameSupportWeightsPays, FrameSupportWeightsPerDispatchClassU32, FrameSupportWeightsPerDispatchClassU64, FrameSupportWeightsPerDispatchClassWeightsPerClass, FrameSupportWeightsRuntimeDbWeight, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletAuthorshipCall, PalletAuthorshipError, PalletAuthorshipUncleEntryItem, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReleases, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingReleases, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletUtilityRawEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpFinalityGrandpaAppPublic, SpFinalityGrandpaAppSignature, SpFinalityGrandpaEquivocation, SpFinalityGrandpaEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeArithmeticError, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion } from '@polkadot/types/lookup';
 
 declare module '@polkadot/types/types/registry' {
   export interface InterfaceTypes {
@@ -176,13 +176,14 @@ declare module '@polkadot/types/types/registry' {
     PalletMultisigTimepoint: PalletMultisigTimepoint;
     PalletOffencesEvent: PalletOffencesEvent;
     PalletProjectTokenAccountData: PalletProjectTokenAccountData;
+    PalletProjectTokenAmmCurve: PalletProjectTokenAmmCurve;
+    PalletProjectTokenAmmParams: PalletProjectTokenAmmParams;
     PalletProjectTokenCall: PalletProjectTokenCall;
     PalletProjectTokenErrorsError: PalletProjectTokenErrorsError;
     PalletProjectTokenEventsRawEvent: PalletProjectTokenEventsRawEvent;
     PalletProjectTokenMerkleProof: PalletProjectTokenMerkleProof;
     PalletProjectTokenMerkleSide: PalletProjectTokenMerkleSide;
     PalletProjectTokenPatronageData: PalletProjectTokenPatronageData;
-    PalletProjectTokenPayment: PalletProjectTokenPayment;
     PalletProjectTokenPaymentWithVesting: PalletProjectTokenPaymentWithVesting;
     PalletProjectTokenRevenueSplitInfo: PalletProjectTokenRevenueSplitInfo;
     PalletProjectTokenRevenueSplitState: PalletProjectTokenRevenueSplitState;
@@ -196,8 +197,7 @@ declare module '@polkadot/types/types/registry' {
     PalletProjectTokenTokenSaleParams: PalletProjectTokenTokenSaleParams;
     PalletProjectTokenTransferPolicy: PalletProjectTokenTransferPolicy;
     PalletProjectTokenTransferPolicyParams: PalletProjectTokenTransferPolicyParams;
-    PalletProjectTokenTransfersPayment: PalletProjectTokenTransfersPayment;
-    PalletProjectTokenTransfersPaymentWithVesting: PalletProjectTokenTransfersPaymentWithVesting;
+    PalletProjectTokenTransfers: PalletProjectTokenTransfers;
     PalletProjectTokenValidated: PalletProjectTokenValidated;
     PalletProjectTokenValidatedPayment: PalletProjectTokenValidatedPayment;
     PalletProjectTokenVestingSchedule: PalletProjectTokenVestingSchedule;
@@ -282,9 +282,6 @@ declare module '@polkadot/types/types/registry' {
     PalletStorageStorageBucketRecord: PalletStorageStorageBucketRecord;
     PalletStorageUploadParametersRecord: PalletStorageUploadParametersRecord;
     PalletStorageVoucher: PalletStorageVoucher;
-    PalletSudoCall: PalletSudoCall;
-    PalletSudoError: PalletSudoError;
-    PalletSudoEvent: PalletSudoEvent;
     PalletTimestampCall: PalletTimestampCall;
     PalletTransactionPaymentChargeTransactionPayment: PalletTransactionPaymentChargeTransactionPayment;
     PalletTransactionPaymentReleases: PalletTransactionPaymentReleases;
diff --git a/node_modules/@joystream/types/src/augment/types-lookup.ts b/node_modules/@joystream/types/src/augment/types-lookup.ts
index c035e7d..5ea6d0d 100644
--- a/node_modules/@joystream/types/src/augment/types-lookup.ts
+++ b/node_modules/@joystream/types/src/augment/types-lookup.ts
@@ -4,7 +4,7 @@
 declare module '@polkadot/types/lookup' {
   import type { BTreeMap, BTreeSet, Bytes, Compact, Enum, Null, Option, Result, Struct, Text, U8aFixed, Vec, WrapperKeepOpaque, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
   import type { ITuple } from '@polkadot/types-codec/types';
-  import type { AccountId32, Call, H256, PerU16, Perbill, Percent, Permill, Perquintill } from '@polkadot/types/interfaces/runtime';
+  import type { AccountId32, Call, H256, PerU16, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
   import type { Event } from '@polkadot/types/interfaces/system';
 
   /** @name FrameSystemAccountInfo (3) */
@@ -392,24 +392,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Offence';
   }
 
-  /** @name PalletSudoEvent (57) */
-  export interface PalletSudoEvent extends Enum {
-    readonly isSudid: boolean;
-    readonly asSudid: {
-      readonly sudoResult: Result<Null, SpRuntimeDispatchError>;
-    } & Struct;
-    readonly isKeyChanged: boolean;
-    readonly asKeyChanged: {
-      readonly oldSudoer: Option<AccountId32>;
-    } & Struct;
-    readonly isSudoAsDone: boolean;
-    readonly asSudoAsDone: {
-      readonly sudoResult: Result<Null, SpRuntimeDispatchError>;
-    } & Struct;
-    readonly type: 'Sudid' | 'KeyChanged' | 'SudoAsDone';
-  }
-
-  /** @name PalletBagsListEvent (59) */
+  /** @name PalletBagsListEvent (57) */
   export interface PalletBagsListEvent extends Enum {
     readonly isRebagged: boolean;
     readonly asRebagged: {
@@ -425,7 +408,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Rebagged' | 'ScoreUpdated';
   }
 
-  /** @name PalletVestingEvent (60) */
+  /** @name PalletVestingEvent (58) */
   export interface PalletVestingEvent extends Enum {
     readonly isVestingUpdated: boolean;
     readonly asVestingUpdated: {
@@ -439,7 +422,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'VestingUpdated' | 'VestingCompleted';
   }
 
-  /** @name PalletMultisigEvent (61) */
+  /** @name PalletMultisigEvent (59) */
   export interface PalletMultisigEvent extends Enum {
     readonly isNewMultisig: boolean;
     readonly asNewMultisig: {
@@ -472,13 +455,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NewMultisig' | 'MultisigApproval' | 'MultisigExecuted' | 'MultisigCancelled';
   }
 
-  /** @name PalletMultisigTimepoint (62) */
+  /** @name PalletMultisigTimepoint (60) */
   export interface PalletMultisigTimepoint extends Struct {
     readonly height: u32;
     readonly index: u32;
   }
 
-  /** @name PalletCouncilRawEvent (63) */
+  /** @name PalletCouncilRawEvent (61) */
   export interface PalletCouncilRawEvent extends Enum {
     readonly isAnnouncingPeriodStarted: boolean;
     readonly asAnnouncingPeriodStarted: u32;
@@ -521,7 +504,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked';
   }
 
-  /** @name PalletReferendumRawEvent (65) */
+  /** @name PalletReferendumRawEvent (63) */
   export interface PalletReferendumRawEvent extends Enum {
     readonly isReferendumStarted: boolean;
     readonly asReferendumStarted: ITuple<[u32, u32]>;
@@ -537,22 +520,24 @@ declare module '@polkadot/types/lookup' {
     readonly asVoteRevealed: ITuple<[AccountId32, u64, Bytes]>;
     readonly isStakeReleased: boolean;
     readonly asStakeReleased: AccountId32;
-    readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased';
+    readonly isAccountOptedOutOfVoting: boolean;
+    readonly asAccountOptedOutOfVoting: AccountId32;
+    readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased' | 'AccountOptedOutOfVoting';
   }
 
-  /** @name PalletReferendumInstance1 (66) */
+  /** @name PalletReferendumInstance1 (64) */
   export type PalletReferendumInstance1 = Null;
 
-  /** @name PalletReferendumOptionResult (68) */
+  /** @name PalletReferendumOptionResult (66) */
   export interface PalletReferendumOptionResult extends Struct {
     readonly optionId: u64;
     readonly votePower: u128;
   }
 
-  /** @name PalletMembershipRawEvent (69) */
+  /** @name PalletMembershipRawEvent (67) */
   export interface PalletMembershipRawEvent extends Enum {
     readonly isMemberInvited: boolean;
-    readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters]>;
+    readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters, u128]>;
     readonly isMembershipGifted: boolean;
     readonly asMembershipGifted: ITuple<[u64, PalletMembershipGiftMembershipParameters]>;
     readonly isMembershipBought: boolean;
@@ -582,13 +567,13 @@ declare module '@polkadot/types/lookup' {
     readonly isStakingAccountConfirmed: boolean;
     readonly asStakingAccountConfirmed: ITuple<[AccountId32, u64]>;
     readonly isMemberRemarked: boolean;
-    readonly asMemberRemarked: ITuple<[u64, Bytes]>;
+    readonly asMemberRemarked: ITuple<[u64, Bytes, Option<ITuple<[AccountId32, u128]>>]>;
     readonly isMemberCreated: boolean;
     readonly asMemberCreated: ITuple<[u64, PalletMembershipCreateMemberParameters, u32]>;
     readonly type: 'MemberInvited' | 'MembershipGifted' | 'MembershipBought' | 'MemberProfileUpdated' | 'MemberAccountsUpdated' | 'MemberVerificationStatusUpdated' | 'ReferralCutUpdated' | 'InvitesTransferred' | 'MembershipPriceUpdated' | 'InitialInvitationBalanceUpdated' | 'LeaderInvitationQuotaUpdated' | 'InitialInvitationCountUpdated' | 'StakingAccountAdded' | 'StakingAccountRemoved' | 'StakingAccountConfirmed' | 'MemberRemarked' | 'MemberCreated';
   }
 
-  /** @name PalletMembershipBuyMembershipParameters (70) */
+  /** @name PalletMembershipBuyMembershipParameters (68) */
   export interface PalletMembershipBuyMembershipParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -597,7 +582,7 @@ declare module '@polkadot/types/lookup' {
     readonly referrerId: Option<u64>;
   }
 
-  /** @name PalletMembershipInviteMembershipParameters (73) */
+  /** @name PalletMembershipInviteMembershipParameters (71) */
   export interface PalletMembershipInviteMembershipParameters extends Struct {
     readonly invitingMemberId: u64;
     readonly rootAccount: AccountId32;
@@ -606,7 +591,7 @@ declare module '@polkadot/types/lookup' {
     readonly metadata: Bytes;
   }
 
-  /** @name PalletMembershipCreateMemberParameters (74) */
+  /** @name PalletMembershipCreateMemberParameters (72) */
   export interface PalletMembershipCreateMemberParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -615,7 +600,7 @@ declare module '@polkadot/types/lookup' {
     readonly isFoundingMember: bool;
   }
 
-  /** @name PalletMembershipGiftMembershipParameters (75) */
+  /** @name PalletMembershipGiftMembershipParameters (73) */
   export interface PalletMembershipGiftMembershipParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -627,7 +612,7 @@ declare module '@polkadot/types/lookup' {
     readonly applyRootAccountInvitationLock: Option<u128>;
   }
 
-  /** @name PalletForumRawEvent (77) */
+  /** @name PalletForumRawEvent (78) */
   export interface PalletForumRawEvent extends Enum {
     readonly isCategoryCreated: boolean;
     readonly asCategoryCreated: ITuple<[u64, Option<u64>, Bytes, Bytes]>;
@@ -666,7 +651,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CategoryCreated' | 'CategoryArchivalStatusUpdated' | 'CategoryTitleUpdated' | 'CategoryDescriptionUpdated' | 'CategoryDeleted' | 'ThreadCreated' | 'ThreadModerated' | 'ThreadUpdated' | 'ThreadMetadataUpdated' | 'ThreadDeleted' | 'ThreadMoved' | 'PostAdded' | 'PostModerated' | 'PostDeleted' | 'PostTextUpdated' | 'CategoryStickyThreadUpdate' | 'CategoryMembershipOfModeratorUpdated';
   }
 
-  /** @name PalletForumPrivilegedActor (78) */
+  /** @name PalletForumPrivilegedActor (79) */
   export interface PalletForumPrivilegedActor extends Enum {
     readonly isLead: boolean;
     readonly isModerator: boolean;
@@ -674,21 +659,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Lead' | 'Moderator';
   }
 
-  /** @name PalletForumExtendedPostIdObject (79) */
+  /** @name PalletForumExtendedPostIdObject (80) */
   export interface PalletForumExtendedPostIdObject extends Struct {
     readonly categoryId: u64;
     readonly threadId: u64;
     readonly postId: u64;
   }
 
-  /** @name PalletConstitutionRawEvent (84) */
+  /** @name PalletConstitutionRawEvent (85) */
   export interface PalletConstitutionRawEvent extends Enum {
     readonly isConstutionAmended: boolean;
     readonly asConstutionAmended: ITuple<[H256, Bytes]>;
     readonly type: 'ConstutionAmended';
   }
 
-  /** @name PalletBountyRawEvent (85) */
+  /** @name PalletBountyRawEvent (86) */
   export interface PalletBountyRawEvent extends Enum {
     readonly isBountyCreated: boolean;
     readonly asBountyCreated: ITuple<[u64, PalletBountyBountyParametersBTreeSet, Bytes]>;
@@ -739,7 +724,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'BountyCreated' | 'BountyOracleSwitched' | 'BountyTerminated' | 'BountyFunded' | 'BountyMaxFundingReached' | 'BountyFundingWithdrawal' | 'BountyCreatorCherryWithdrawal' | 'BountyCreatorOracleRewardWithdrawal' | 'BountyOracleRewardWithdrawal' | 'BountyRemoved' | 'WorkEntryAnnounced' | 'WorkSubmitted' | 'OracleJudgmentSubmitted' | 'WorkEntrantFundsWithdrawn' | 'BountyContributorRemarked' | 'BountyOracleRemarked' | 'BountyEntrantRemarked' | 'BountyCreatorRemarked' | 'WorkSubmissionPeriodEnded' | 'WorkEntrantStakeUnlocked' | 'WorkEntrantStakeSlashed' | 'FunderStateBloatBondWithdrawn' | 'CreatorStateBloatBondWithdrawn';
   }
 
-  /** @name PalletBountyBountyParametersBTreeSet (86) */
+  /** @name PalletBountyBountyParametersBTreeSet (87) */
   export interface PalletBountyBountyParametersBTreeSet extends Struct {
     readonly oracle: PalletBountyBountyActor;
     readonly contractType: PalletBountyAssuranceContractTypeBTreeSet;
@@ -750,7 +735,7 @@ declare module '@polkadot/types/lookup' {
     readonly fundingType: PalletBountyFundingType;
   }
 
-  /** @name PalletBountyBountyActor (87) */
+  /** @name PalletBountyBountyActor (88) */
   export interface PalletBountyBountyActor extends Enum {
     readonly isCouncil: boolean;
     readonly isMember: boolean;
@@ -758,7 +743,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Council' | 'Member';
   }
 
-  /** @name PalletBountyAssuranceContractTypeBTreeSet (88) */
+  /** @name PalletBountyAssuranceContractTypeBTreeSet (89) */
   export interface PalletBountyAssuranceContractTypeBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -766,7 +751,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletBountyFundingType (89) */
+  /** @name PalletBountyFundingType (90) */
   export interface PalletBountyFundingType extends Enum {
     readonly isPerpetual: boolean;
     readonly asPerpetual: {
@@ -780,7 +765,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Perpetual' | 'Limited';
   }
 
-  /** @name PalletBountyOracleWorkEntryJudgment (91) */
+  /** @name PalletBountyOracleWorkEntryJudgment (92) */
   export interface PalletBountyOracleWorkEntryJudgment extends Enum {
     readonly isWinner: boolean;
     readonly asWinner: {
@@ -794,7 +779,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Winner' | 'Rejected';
   }
 
-  /** @name PalletUtilityRawEvent (94) */
+  /** @name PalletUtilityRawEvent (95) */
   export interface PalletUtilityRawEvent extends Enum {
     readonly isSignaled: boolean;
     readonly asSignaled: Bytes;
@@ -807,7 +792,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Signaled' | 'RuntimeUpgraded' | 'UpdatedWorkingGroupBudget' | 'TokensBurned';
   }
 
-  /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (95) */
+  /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (96) */
   export interface PalletCommonWorkingGroupIterableEnumsWorkingGroup extends Enum {
     readonly isForum: boolean;
     readonly isStorage: boolean;
@@ -821,14 +806,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Forum' | 'Storage' | 'Content' | 'OperationsAlpha' | 'App' | 'Distribution' | 'OperationsBeta' | 'OperationsGamma' | 'Membership';
   }
 
-  /** @name PalletCommonBalanceKind (96) */
+  /** @name PalletCommonBalanceKind (97) */
   export interface PalletCommonBalanceKind extends Enum {
     readonly isPositive: boolean;
     readonly isNegative: boolean;
     readonly type: 'Positive' | 'Negative';
   }
 
-  /** @name PalletContentRawEvent (97) */
+  /** @name PalletContentRawEvent (98) */
   export interface PalletContentRawEvent extends Enum {
     readonly isCuratorGroupCreated: boolean;
     readonly asCuratorGroupCreated: u64;
@@ -879,11 +864,9 @@ declare module '@polkadot/types/lookup' {
     readonly isVideoAssetsDeletedByModerator: boolean;
     readonly asVideoAssetsDeletedByModerator: ITuple<[PalletContentPermissionsContentActor, u64, BTreeSet<u64>, bool, Bytes]>;
     readonly isChannelPayoutsUpdated: boolean;
-    readonly asChannelPayoutsUpdated: ITuple<[PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>]>;
+    readonly asChannelPayoutsUpdated: ITuple<[PalletContentUpdateChannelPayoutsParametersRecord, Option<u64>, AccountId32]>;
     readonly isChannelRewardUpdated: boolean;
-    readonly asChannelRewardUpdated: ITuple<[u128, u64]>;
-    readonly isCouncilRewardClaimed: boolean;
-    readonly asCouncilRewardClaimed: ITuple<[u64, u128]>;
+    readonly asChannelRewardUpdated: ITuple<[u128, u128, u64]>;
     readonly isEnglishAuctionStarted: boolean;
     readonly asEnglishAuctionStarted: ITuple<[PalletContentPermissionsContentActor, u64, PalletContentNftTypesEnglishAuctionParamsRecord]>;
     readonly isOpenAuctionStarted: boolean;
@@ -940,10 +923,10 @@ declare module '@polkadot/types/lookup' {
     readonly asToggledNftLimits: bool;
     readonly isCreatorTokenIssued: boolean;
     readonly asCreatorTokenIssued: ITuple<[PalletContentPermissionsContentActor, u64, u64]>;
-    readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelDeletedByModerator' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoDeletedByModerator' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'CouncilRewardClaimed' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued';
+    readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelDeletedByModerator' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoDeletedByModerator' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued';
   }
 
-  /** @name PalletContentPermissionsContentActor (98) */
+  /** @name PalletContentPermissionsContentActor (99) */
   export interface PalletContentPermissionsContentActor extends Enum {
     readonly isCurator: boolean;
     readonly asCurator: ITuple<[u64, u64]>;
@@ -953,7 +936,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Curator' | 'Member' | 'Lead';
   }
 
-  /** @name PalletContentChannelRecord (99) */
+  /** @name PalletContentChannelRecord (100) */
   export interface PalletContentChannelRecord extends Struct {
     readonly owner: PalletContentChannelOwner;
     readonly numVideos: u64;
@@ -971,7 +954,7 @@ declare module '@polkadot/types/lookup' {
     readonly channelStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
   }
 
-  /** @name PalletContentIterableEnumsChannelActionPermission (103) */
+  /** @name PalletContentIterableEnumsChannelActionPermission (104) */
   export interface PalletContentIterableEnumsChannelActionPermission extends Enum {
     readonly isUpdateChannelMetadata: boolean;
     readonly isManageNonVideoChannelAssets: boolean;
@@ -994,10 +977,11 @@ declare module '@polkadot/types/lookup' {
     readonly isReduceCreatorTokenPatronageRate: boolean;
     readonly isManageRevenueSplits: boolean;
     readonly isDeissueCreatorToken: boolean;
-    readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken';
+    readonly isAmmControl: boolean;
+    readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken' | 'AmmControl';
   }
 
-  /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (110) */
+  /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (111) */
   export interface PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature extends Enum {
     readonly isChannelFundsTransfer: boolean;
     readonly isCreatorCashout: boolean;
@@ -1009,13 +993,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ChannelFundsTransfer' | 'CreatorCashout' | 'VideoNftIssuance' | 'VideoCreation' | 'VideoUpdate' | 'ChannelUpdate' | 'CreatorTokenIssuance';
   }
 
-  /** @name PalletCommonBloatBondRepayableBloatBond (113) */
+  /** @name PalletCommonBloatBondRepayableBloatBond (114) */
   export interface PalletCommonBloatBondRepayableBloatBond extends Struct {
     readonly repaymentRestrictedTo: Option<AccountId32>;
     readonly amount: u128;
   }
 
-  /** @name PalletContentChannelOwner (114) */
+  /** @name PalletContentChannelOwner (115) */
   export interface PalletContentChannelOwner extends Enum {
     readonly isMember: boolean;
     readonly asMember: u64;
@@ -1024,7 +1008,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Member' | 'CuratorGroup';
   }
 
-  /** @name PalletContentChannelTransferStatus (115) */
+  /** @name PalletContentChannelTransferStatus (116) */
   export interface PalletContentChannelTransferStatus extends Enum {
     readonly isNoActiveTransfer: boolean;
     readonly isPendingTransfer: boolean;
@@ -1032,32 +1016,32 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NoActiveTransfer' | 'PendingTransfer';
   }
 
-  /** @name PalletContentPendingTransfer (116) */
+  /** @name PalletContentPendingTransfer (117) */
   export interface PalletContentPendingTransfer extends Struct {
     readonly newOwner: PalletContentChannelOwner;
     readonly transferParams: PalletContentTransferCommitmentParametersBoundedBTreeMap;
   }
 
-  /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (117) */
+  /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (118) */
   export interface PalletContentTransferCommitmentParametersBoundedBTreeMap extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly transferId: u64;
   }
 
-  /** @name PalletContentLimitPerPeriod (118) */
+  /** @name PalletContentLimitPerPeriod (119) */
   export interface PalletContentLimitPerPeriod extends Struct {
     readonly limit: u64;
     readonly blockNumberPeriod: u32;
   }
 
-  /** @name PalletContentNftCounter (119) */
+  /** @name PalletContentNftCounter (120) */
   export interface PalletContentNftCounter extends Struct {
     readonly counter: u64;
     readonly lastUpdated: u32;
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionParamsRecord (120) */
+  /** @name PalletContentNftTypesEnglishAuctionParamsRecord (121) */
   export interface PalletContentNftTypesEnglishAuctionParamsRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -1068,7 +1052,7 @@ declare module '@polkadot/types/lookup' {
     readonly minBidStep: u128;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionParamsRecord (122) */
+  /** @name PalletContentNftTypesOpenAuctionParamsRecord (123) */
   export interface PalletContentNftTypesOpenAuctionParamsRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -1077,7 +1061,7 @@ declare module '@polkadot/types/lookup' {
     readonly bidLockDuration: u32;
   }
 
-  /** @name PalletContentNftTypesNftIssuanceParametersRecord (123) */
+  /** @name PalletContentNftTypesNftIssuanceParametersRecord (124) */
   export interface PalletContentNftTypesNftIssuanceParametersRecord extends Struct {
     readonly royalty: Option<Perbill>;
     readonly nftMetadata: Bytes;
@@ -1085,7 +1069,7 @@ declare module '@polkadot/types/lookup' {
     readonly initTransactionalStatus: PalletContentNftTypesInitTransactionalStatusRecord;
   }
 
-  /** @name PalletContentNftTypesInitTransactionalStatusRecord (124) */
+  /** @name PalletContentNftTypesInitTransactionalStatusRecord (125) */
   export interface PalletContentNftTypesInitTransactionalStatusRecord extends Enum {
     readonly isIdle: boolean;
     readonly isBuyNow: boolean;
@@ -1099,7 +1083,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Idle' | 'BuyNow' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction';
   }
 
-  /** @name PalletContentChannelCreationParametersRecord (126) */
+  /** @name PalletContentChannelCreationParametersRecord (127) */
   export interface PalletContentChannelCreationParametersRecord extends Struct {
     readonly assets: Option<PalletContentStorageAssetsRecord>;
     readonly meta: Option<Bytes>;
@@ -1110,25 +1094,25 @@ declare module '@polkadot/types/lookup' {
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletContentStorageAssetsRecord (127) */
+  /** @name PalletContentStorageAssetsRecord (128) */
   export interface PalletContentStorageAssetsRecord extends Struct {
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
     readonly expectedDataSizeFee: u128;
   }
 
-  /** @name PalletStorageDataObjectCreationParameters (129) */
+  /** @name PalletStorageDataObjectCreationParameters (130) */
   export interface PalletStorageDataObjectCreationParameters extends Struct {
     readonly size_: u64;
     readonly ipfsContentId: Bytes;
   }
 
-  /** @name PalletStorageDistributionBucketIdRecord (130) */
+  /** @name PalletStorageDistributionBucketIdRecord (131) */
   export interface PalletStorageDistributionBucketIdRecord extends Struct {
     readonly distributionBucketFamilyId: u64;
     readonly distributionBucketIndex: u64;
   }
 
-  /** @name PalletContentChannelUpdateParametersRecord (137) */
+  /** @name PalletContentChannelUpdateParametersRecord (138) */
   export interface PalletContentChannelUpdateParametersRecord extends Struct {
     readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
     readonly newMeta: Option<Bytes>;
@@ -1138,7 +1122,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: Option<u32>;
   }
 
-  /** @name PalletContentVideoCreationParametersRecord (139) */
+  /** @name PalletContentVideoCreationParametersRecord (140) */
   export interface PalletContentVideoCreationParametersRecord extends Struct {
     readonly assets: Option<PalletContentStorageAssetsRecord>;
     readonly meta: Option<Bytes>;
@@ -1148,7 +1132,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: u32;
   }
 
-  /** @name PalletContentVideoUpdateParametersRecord (141) */
+  /** @name PalletContentVideoUpdateParametersRecord (142) */
   export interface PalletContentVideoUpdateParametersRecord extends Struct {
     readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
     readonly newMeta: Option<Bytes>;
@@ -1158,7 +1142,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: Option<u32>;
   }
 
-  /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (144) */
+  /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (145) */
   export interface PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction extends Enum {
     readonly isHideVideo: boolean;
     readonly isHideChannel: boolean;
@@ -1173,14 +1157,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'HideVideo' | 'HideChannel' | 'ChangeChannelFeatureStatus' | 'DeleteVideo' | 'DeleteChannel' | 'DeleteVideoAssets' | 'DeleteNonVideoChannelAssets' | 'UpdateChannelNftLimits';
   }
 
-  /** @name PalletContentTransferCommitmentParametersBTreeMap (148) */
+  /** @name PalletContentTransferCommitmentParametersBTreeMap (149) */
   export interface PalletContentTransferCommitmentParametersBTreeMap extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly transferId: u64;
   }
 
-  /** @name PalletContentUpdateChannelPayoutsParametersRecord (149) */
+  /** @name PalletContentUpdateChannelPayoutsParametersRecord (150) */
   export interface PalletContentUpdateChannelPayoutsParametersRecord extends Struct {
     readonly commitment: Option<H256>;
     readonly payload: Option<PalletContentChannelPayoutsPayloadParametersRecord>;
@@ -1189,15 +1173,14 @@ declare module '@polkadot/types/lookup' {
     readonly channelCashoutsEnabled: Option<bool>;
   }
 
-  /** @name PalletContentChannelPayoutsPayloadParametersRecord (150) */
+  /** @name PalletContentChannelPayoutsPayloadParametersRecord (151) */
   export interface PalletContentChannelPayoutsPayloadParametersRecord extends Struct {
-    readonly uploaderAccount: AccountId32;
     readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
     readonly expectedDataSizeFee: u128;
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletContentChannelFundsDestination (154) */
+  /** @name PalletContentChannelFundsDestination (155) */
   export interface PalletContentChannelFundsDestination extends Enum {
     readonly isAccountId: boolean;
     readonly asAccountId: AccountId32;
@@ -1205,14 +1188,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AccountId' | 'CouncilBudget';
   }
 
-  /** @name PalletContentNftLimitPeriod (155) */
+  /** @name PalletContentNftLimitPeriod (156) */
   export interface PalletContentNftLimitPeriod extends Enum {
     readonly isDaily: boolean;
     readonly isWeekly: boolean;
     readonly type: 'Daily' | 'Weekly';
   }
 
-  /** @name PalletStorageRawEvent (156) */
+  /** @name PalletStorageRawEvent (157) */
   export interface PalletStorageRawEvent extends Enum {
     readonly isStorageBucketCreated: boolean;
     readonly asStorageBucketCreated: ITuple<[u64, Option<u64>, bool, u64, u64]>;
@@ -1301,7 +1284,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'StorageBucketCreated' | 'StorageBucketInvitationAccepted' | 'StorageBucketsUpdatedForBag' | 'DataObjectsUploaded' | 'StorageOperatorMetadataSet' | 'StorageBucketVoucherLimitsSet' | 'PendingDataObjectsAccepted' | 'StorageBucketInvitationCancelled' | 'StorageBucketOperatorInvited' | 'StorageBucketOperatorRemoved' | 'UploadingBlockStatusUpdated' | 'DataObjectPerMegabyteFeeUpdated' | 'StorageBucketsPerBagLimitUpdated' | 'StorageBucketsVoucherMaxLimitsUpdated' | 'DataObjectsMoved' | 'DataObjectsDeleted' | 'StorageBucketStatusUpdated' | 'UpdateBlacklist' | 'DynamicBagDeleted' | 'DynamicBagCreated' | 'VoucherChanged' | 'StorageBucketDeleted' | 'NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated' | 'DistributionBucketFamilyCreated' | 'DistributionBucketFamilyDeleted' | 'DistributionBucketCreated' | 'DistributionBucketStatusUpdated' | 'DistributionBucketDeleted' | 'DistributionBucketsUpdatedForBag' | 'DistributionBucketsPerBagLimitUpdated' | 'DistributionBucketModeUpdated' | 'FamiliesInDynamicBagCreationPolicyUpdated' | 'DistributionBucketOperatorInvited' | 'DistributionBucketInvitationCancelled' | 'DistributionBucketInvitationAccepted' | 'DistributionBucketMetadataSet' | 'DistributionBucketOperatorRemoved' | 'DistributionBucketFamilyMetadataSet' | 'DataObjectStateBloatBondValueUpdated' | 'DataObjectsUpdated' | 'StorageOperatorRemarked' | 'DistributionOperatorRemarked';
   }
 
-  /** @name PalletStorageUploadParametersRecord (157) */
+  /** @name PalletStorageUploadParametersRecord (158) */
   export interface PalletStorageUploadParametersRecord extends Struct {
     readonly bagId: PalletStorageBagIdType;
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1310,7 +1293,7 @@ declare module '@polkadot/types/lookup' {
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletStorageBagIdType (158) */
+  /** @name PalletStorageBagIdType (159) */
   export interface PalletStorageBagIdType extends Enum {
     readonly isStatic: boolean;
     readonly asStatic: PalletStorageStaticBagId;
@@ -1319,7 +1302,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Static' | 'Dynamic';
   }
 
-  /** @name PalletStorageStaticBagId (159) */
+  /** @name PalletStorageStaticBagId (160) */
   export interface PalletStorageStaticBagId extends Enum {
     readonly isCouncil: boolean;
     readonly isWorkingGroup: boolean;
@@ -1327,7 +1310,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Council' | 'WorkingGroup';
   }
 
-  /** @name PalletStorageDynamicBagIdType (160) */
+  /** @name PalletStorageDynamicBagIdType (161) */
   export interface PalletStorageDynamicBagIdType extends Enum {
     readonly isMember: boolean;
     readonly asMember: u64;
@@ -1336,7 +1319,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Member' | 'Channel';
   }
 
-  /** @name PalletStorageDynBagCreationParametersRecord (161) */
+  /** @name PalletStorageDynBagCreationParametersRecord (162) */
   export interface PalletStorageDynBagCreationParametersRecord extends Struct {
     readonly bagId: PalletStorageDynamicBagIdType;
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1347,7 +1330,7 @@ declare module '@polkadot/types/lookup' {
     readonly distributionBuckets: BTreeSet<PalletStorageDistributionBucketIdRecord>;
   }
 
-  /** @name PalletStorageVoucher (164) */
+  /** @name PalletStorageVoucher (165) */
   export interface PalletStorageVoucher extends Struct {
     readonly sizeLimit: u64;
     readonly objectsLimit: u64;
@@ -1355,21 +1338,21 @@ declare module '@polkadot/types/lookup' {
     readonly objectsUsed: u64;
   }
 
-  /** @name PalletStorageDynamicBagType (165) */
+  /** @name PalletStorageDynamicBagType (166) */
   export interface PalletStorageDynamicBagType extends Enum {
     readonly isMember: boolean;
     readonly isChannel: boolean;
     readonly type: 'Member' | 'Channel';
   }
 
-  /** @name PalletProjectTokenEventsRawEvent (169) */
+  /** @name PalletProjectTokenEventsRawEvent (170) */
   export interface PalletProjectTokenEventsRawEvent extends Enum {
     readonly isTokenAmountTransferred: boolean;
-    readonly asTokenAmountTransferred: ITuple<[u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+    readonly asTokenAmountTransferred: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
     readonly isTokenAmountTransferredByIssuer: boolean;
-    readonly asTokenAmountTransferredByIssuer: ITuple<[u64, u64, BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>, Bytes]>;
+    readonly asTokenAmountTransferredByIssuer: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
     readonly isPatronageRateDecreasedTo: boolean;
-    readonly asPatronageRateDecreasedTo: ITuple<[u64, Perquintill]>;
+    readonly asPatronageRateDecreasedTo: ITuple<[u64, Permill]>;
     readonly isPatronageCreditClaimed: boolean;
     readonly asPatronageCreditClaimed: ITuple<[u64, u128, u64]>;
     readonly isRevenueSplitIssued: boolean;
@@ -1400,10 +1383,20 @@ declare module '@polkadot/types/lookup' {
     readonly asTransferPolicyChangedToPermissionless: u64;
     readonly isTokensBurned: boolean;
     readonly asTokensBurned: ITuple<[u64, u64, u128]>;
-    readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned';
-  }
-
-  /** @name PalletProjectTokenTransferPolicy (170) */
+    readonly isAmmActivated: boolean;
+    readonly asAmmActivated: ITuple<[u64, u64, PalletProjectTokenAmmCurve]>;
+    readonly isTokensBoughtOnAmm: boolean;
+    readonly asTokensBoughtOnAmm: ITuple<[u64, u64, u128, u128]>;
+    readonly isTokensSoldOnAmm: boolean;
+    readonly asTokensSoldOnAmm: ITuple<[u64, u64, u128, u128]>;
+    readonly isAmmDeactivated: boolean;
+    readonly asAmmDeactivated: ITuple<[u64, u64, u128]>;
+    readonly isMaxYearlyPatronageRateUpdated: boolean;
+    readonly asMaxYearlyPatronageRateUpdated: Permill;
+    readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'MaxYearlyPatronageRateUpdated';
+  }
+
+  /** @name PalletProjectTokenTransferPolicy (171) */
   export interface PalletProjectTokenTransferPolicy extends Enum {
     readonly isPermissionless: boolean;
     readonly isPermissioned: boolean;
@@ -1411,7 +1404,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Permissionless' | 'Permissioned';
   }
 
-  /** @name PalletProjectTokenTokenIssuanceParameters (171) */
+  /** @name PalletProjectTokenTokenIssuanceParameters (172) */
   export interface PalletProjectTokenTokenIssuanceParameters extends Struct {
     readonly initialAllocation: BTreeMap<u64, PalletProjectTokenTokenAllocation>;
     readonly symbol: H256;
@@ -1420,20 +1413,20 @@ declare module '@polkadot/types/lookup' {
     readonly revenueSplitRate: Permill;
   }
 
-  /** @name PalletProjectTokenTokenAllocation (172) */
+  /** @name PalletProjectTokenTokenAllocation (173) */
   export interface PalletProjectTokenTokenAllocation extends Struct {
     readonly amount: u128;
     readonly vestingScheduleParams: Option<PalletProjectTokenVestingScheduleParams>;
   }
 
-  /** @name PalletProjectTokenVestingScheduleParams (173) */
+  /** @name PalletProjectTokenVestingScheduleParams (174) */
   export interface PalletProjectTokenVestingScheduleParams extends Struct {
     readonly linearVestingDuration: u32;
     readonly blocksBeforeCliff: u32;
     readonly cliffAmountPercentage: Permill;
   }
 
-  /** @name PalletProjectTokenTransferPolicyParams (176) */
+  /** @name PalletProjectTokenTransferPolicyParams (177) */
   export interface PalletProjectTokenTransferPolicyParams extends Enum {
     readonly isPermissionless: boolean;
     readonly isPermissioned: boolean;
@@ -1441,20 +1434,23 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Permissionless' | 'Permissioned';
   }
 
-  /** @name PalletProjectTokenWhitelistParams (177) */
+  /** @name PalletProjectTokenWhitelistParams (178) */
   export interface PalletProjectTokenWhitelistParams extends Struct {
     readonly commitment: H256;
     readonly payload: Option<PalletProjectTokenSingleDataObjectUploadParams>;
   }
 
-  /** @name PalletProjectTokenSingleDataObjectUploadParams (178) */
+  /** @name PalletProjectTokenSingleDataObjectUploadParams (179) */
   export interface PalletProjectTokenSingleDataObjectUploadParams extends Struct {
     readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
     readonly expectedDataSizeFee: u128;
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletProjectTokenValidated (185) */
+  /** @name PalletProjectTokenTransfers (185) */
+  export interface PalletProjectTokenTransfers extends BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment> {}
+
+  /** @name PalletProjectTokenValidated (186) */
   export interface PalletProjectTokenValidated extends Enum {
     readonly isExisting: boolean;
     readonly asExisting: u64;
@@ -1463,19 +1459,19 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Existing' | 'NonExisting';
   }
 
-  /** @name PalletProjectTokenValidatedPayment (186) */
+  /** @name PalletProjectTokenValidatedPayment (187) */
   export interface PalletProjectTokenValidatedPayment extends Struct {
     readonly payment: PalletProjectTokenPaymentWithVesting;
     readonly vestingCleanupCandidate: Option<PalletProjectTokenVestingSource>;
   }
 
-  /** @name PalletProjectTokenPaymentWithVesting (187) */
+  /** @name PalletProjectTokenPaymentWithVesting (188) */
   export interface PalletProjectTokenPaymentWithVesting extends Struct {
     readonly amount: u128;
     readonly vestingSchedule: Option<PalletProjectTokenVestingScheduleParams>;
   }
 
-  /** @name PalletProjectTokenVestingSource (189) */
+  /** @name PalletProjectTokenVestingSource (190) */
   export interface PalletProjectTokenVestingSource extends Enum {
     readonly isInitialIssuance: boolean;
     readonly isSale: boolean;
@@ -1485,7 +1481,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InitialIssuance' | 'Sale' | 'IssuerTransfer';
   }
 
-  /** @name PalletProjectTokenTokenSale (193) */
+  /** @name PalletProjectTokenTokenSale (194) */
   export interface PalletProjectTokenTokenSale extends Struct {
     readonly unitPrice: u128;
     readonly quantityLeft: u128;
@@ -1499,7 +1495,14 @@ declare module '@polkadot/types/lookup' {
     readonly autoFinalize: bool;
   }
 
-  /** @name PalletProposalsEngineRawEvent (195) */
+  /** @name PalletProjectTokenAmmCurve (195) */
+  export interface PalletProjectTokenAmmCurve extends Struct {
+    readonly slope: u128;
+    readonly intercept: u128;
+    readonly providedSupply: u128;
+  }
+
+  /** @name PalletProposalsEngineRawEvent (196) */
   export interface PalletProposalsEngineRawEvent extends Enum {
     readonly isProposalStatusUpdated: boolean;
     readonly asProposalStatusUpdated: ITuple<[u32, PalletProposalsEngineProposalStatusesProposalStatus]>;
@@ -1516,7 +1519,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ProposalStatusUpdated' | 'ProposalDecisionMade' | 'ProposalExecuted' | 'Voted' | 'ProposalCancelled' | 'ProposerRemarked';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesProposalStatus (196) */
+  /** @name PalletProposalsEngineProposalStatusesProposalStatus (197) */
   export interface PalletProposalsEngineProposalStatusesProposalStatus extends Enum {
     readonly isActive: boolean;
     readonly isPendingExecution: boolean;
@@ -1525,7 +1528,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Active' | 'PendingExecution' | 'PendingConstitutionality';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesProposalDecision (197) */
+  /** @name PalletProposalsEngineProposalStatusesProposalDecision (198) */
   export interface PalletProposalsEngineProposalStatusesProposalDecision extends Enum {
     readonly isCanceled: boolean;
     readonly isCanceledByRuntime: boolean;
@@ -1538,14 +1541,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Canceled' | 'CanceledByRuntime' | 'Vetoed' | 'Rejected' | 'Slashed' | 'Expired' | 'Approved';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (198) */
+  /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (199) */
   export interface PalletProposalsEngineProposalStatusesApprovedProposalDecision extends Enum {
     readonly isPendingExecution: boolean;
     readonly isPendingConstitutionality: boolean;
     readonly type: 'PendingExecution' | 'PendingConstitutionality';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesExecutionStatus (199) */
+  /** @name PalletProposalsEngineProposalStatusesExecutionStatus (200) */
   export interface PalletProposalsEngineProposalStatusesExecutionStatus extends Enum {
     readonly isExecuted: boolean;
     readonly isExecutionFailed: boolean;
@@ -1555,7 +1558,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Executed' | 'ExecutionFailed';
   }
 
-  /** @name PalletProposalsEngineVoteKind (200) */
+  /** @name PalletProposalsEngineVoteKind (201) */
   export interface PalletProposalsEngineVoteKind extends Enum {
     readonly isApprove: boolean;
     readonly isReject: boolean;
@@ -1564,7 +1567,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Approve' | 'Reject' | 'Slash' | 'Abstain';
   }
 
-  /** @name PalletProposalsDiscussionRawEvent (201) */
+  /** @name PalletProposalsDiscussionRawEvent (202) */
   export interface PalletProposalsDiscussionRawEvent extends Enum {
     readonly isThreadCreated: boolean;
     readonly asThreadCreated: ITuple<[u64, u64]>;
@@ -1579,7 +1582,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ThreadCreated' | 'PostCreated' | 'PostUpdated' | 'ThreadModeChanged' | 'PostDeleted';
   }
 
-  /** @name PalletProposalsDiscussionThreadModeBTreeSet (202) */
+  /** @name PalletProposalsDiscussionThreadModeBTreeSet (203) */
   export interface PalletProposalsDiscussionThreadModeBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -1587,14 +1590,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletProposalsCodexRawEvent (203) */
+  /** @name PalletProposalsCodexRawEvent (204) */
   export interface PalletProposalsCodexRawEvent extends Enum {
     readonly isProposalCreated: boolean;
     readonly asProposalCreated: ITuple<[u32, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, u64]>;
     readonly type: 'ProposalCreated';
   }
 
-  /** @name PalletProposalsCodexGeneralProposalParams (204) */
+  /** @name PalletProposalsCodexGeneralProposalParams (205) */
   export interface PalletProposalsCodexGeneralProposalParams extends Struct {
     readonly memberId: u64;
     readonly title: Bytes;
@@ -1603,7 +1606,7 @@ declare module '@polkadot/types/lookup' {
     readonly exactExecutionBlock: Option<u32>;
   }
 
-  /** @name PalletProposalsCodexProposalDetails (205) */
+  /** @name PalletProposalsCodexProposalDetails (206) */
   export interface PalletProposalsCodexProposalDetails extends Enum {
     readonly isSignal: boolean;
     readonly asSignal: Bytes;
@@ -1651,16 +1654,18 @@ declare module '@polkadot/types/lookup' {
     readonly asUpdateGlobalNftLimit: ITuple<[PalletContentNftLimitPeriod, u64]>;
     readonly isUpdateChannelPayouts: boolean;
     readonly asUpdateChannelPayouts: PalletContentUpdateChannelPayoutsParametersRecord;
-    readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts';
+    readonly isUpdateMaxYearlyPatronageRate: boolean;
+    readonly asUpdateMaxYearlyPatronageRate: Permill;
+    readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'UpdateMaxYearlyPatronageRate';
   }
 
-  /** @name PalletCommonFundingRequestParameters (207) */
+  /** @name PalletCommonFundingRequestParameters (208) */
   export interface PalletCommonFundingRequestParameters extends Struct {
     readonly account: AccountId32;
     readonly amount: u128;
   }
 
-  /** @name PalletProposalsCodexCreateOpeningParameters (208) */
+  /** @name PalletProposalsCodexCreateOpeningParameters (209) */
   export interface PalletProposalsCodexCreateOpeningParameters extends Struct {
     readonly description: Bytes;
     readonly stakePolicy: PalletWorkingGroupStakePolicy;
@@ -1668,27 +1673,27 @@ declare module '@polkadot/types/lookup' {
     readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletWorkingGroupStakePolicy (209) */
+  /** @name PalletWorkingGroupStakePolicy (210) */
   export interface PalletWorkingGroupStakePolicy extends Struct {
     readonly stakeAmount: u128;
     readonly leavingUnstakingPeriod: u32;
   }
 
-  /** @name PalletProposalsCodexFillOpeningParameters (210) */
+  /** @name PalletProposalsCodexFillOpeningParameters (211) */
   export interface PalletProposalsCodexFillOpeningParameters extends Struct {
     readonly openingId: u64;
     readonly applicationId: u64;
     readonly workingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletProposalsCodexTerminateRoleParameters (211) */
+  /** @name PalletProposalsCodexTerminateRoleParameters (212) */
   export interface PalletProposalsCodexTerminateRoleParameters extends Struct {
     readonly workerId: u64;
     readonly slashingAmount: Option<u128>;
     readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletWorkingGroupRawEventInstance1 (212) */
+  /** @name PalletWorkingGroupRawEventInstance1 (213) */
   export interface PalletWorkingGroupRawEventInstance1 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1742,14 +1747,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupOpeningType (216) */
+  /** @name PalletWorkingGroupOpeningType (217) */
   export interface PalletWorkingGroupOpeningType extends Enum {
     readonly isLeader: boolean;
     readonly isRegular: boolean;
     readonly type: 'Leader' | 'Regular';
   }
 
-  /** @name PalletWorkingGroupApplyOnOpeningParams (217) */
+  /** @name PalletWorkingGroupApplyOnOpeningParams (218) */
   export interface PalletWorkingGroupApplyOnOpeningParams extends Struct {
     readonly memberId: u64;
     readonly openingId: u64;
@@ -1759,23 +1764,23 @@ declare module '@polkadot/types/lookup' {
     readonly stakeParameters: PalletWorkingGroupStakeParameters;
   }
 
-  /** @name PalletWorkingGroupStakeParameters (218) */
+  /** @name PalletWorkingGroupStakeParameters (219) */
   export interface PalletWorkingGroupStakeParameters extends Struct {
     readonly stake: u128;
     readonly stakingAccountId: AccountId32;
   }
 
-  /** @name PalletWorkingGroupInstance1 (219) */
+  /** @name PalletWorkingGroupInstance1 (220) */
   export type PalletWorkingGroupInstance1 = Null;
 
-  /** @name PalletWorkingGroupRewardPaymentType (220) */
+  /** @name PalletWorkingGroupRewardPaymentType (221) */
   export interface PalletWorkingGroupRewardPaymentType extends Enum {
     readonly isMissedReward: boolean;
     readonly isRegularReward: boolean;
     readonly type: 'MissedReward' | 'RegularReward';
   }
 
-  /** @name PalletWorkingGroupRawEventInstance2 (221) */
+  /** @name PalletWorkingGroupRawEventInstance2 (222) */
   export interface PalletWorkingGroupRawEventInstance2 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1829,10 +1834,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance2 (222) */
+  /** @name PalletWorkingGroupInstance2 (223) */
   export type PalletWorkingGroupInstance2 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance3 (223) */
+  /** @name PalletWorkingGroupRawEventInstance3 (224) */
   export interface PalletWorkingGroupRawEventInstance3 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1886,10 +1891,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance3 (224) */
+  /** @name PalletWorkingGroupInstance3 (225) */
   export type PalletWorkingGroupInstance3 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance4 (225) */
+  /** @name PalletWorkingGroupRawEventInstance4 (226) */
   export interface PalletWorkingGroupRawEventInstance4 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1943,10 +1948,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance4 (226) */
+  /** @name PalletWorkingGroupInstance4 (227) */
   export type PalletWorkingGroupInstance4 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance5 (227) */
+  /** @name PalletWorkingGroupRawEventInstance5 (228) */
   export interface PalletWorkingGroupRawEventInstance5 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2000,10 +2005,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance5 (228) */
+  /** @name PalletWorkingGroupInstance5 (229) */
   export type PalletWorkingGroupInstance5 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance6 (229) */
+  /** @name PalletWorkingGroupRawEventInstance6 (230) */
   export interface PalletWorkingGroupRawEventInstance6 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2057,10 +2062,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance6 (230) */
+  /** @name PalletWorkingGroupInstance6 (231) */
   export type PalletWorkingGroupInstance6 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance7 (231) */
+  /** @name PalletWorkingGroupRawEventInstance7 (232) */
   export interface PalletWorkingGroupRawEventInstance7 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2114,10 +2119,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance7 (232) */
+  /** @name PalletWorkingGroupInstance7 (233) */
   export type PalletWorkingGroupInstance7 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance8 (233) */
+  /** @name PalletWorkingGroupRawEventInstance8 (234) */
   export interface PalletWorkingGroupRawEventInstance8 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2171,10 +2176,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance8 (234) */
+  /** @name PalletWorkingGroupInstance8 (235) */
   export type PalletWorkingGroupInstance8 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance9 (235) */
+  /** @name PalletWorkingGroupRawEventInstance9 (236) */
   export interface PalletWorkingGroupRawEventInstance9 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2228,10 +2233,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance9 (236) */
+  /** @name PalletWorkingGroupInstance9 (237) */
   export type PalletWorkingGroupInstance9 = Null;
 
-  /** @name FrameSystemPhase (237) */
+  /** @name FrameSystemPhase (238) */
   export interface FrameSystemPhase extends Enum {
     readonly isApplyExtrinsic: boolean;
     readonly asApplyExtrinsic: u32;
@@ -2240,13 +2245,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ApplyExtrinsic' | 'Finalization' | 'Initialization';
   }
 
-  /** @name FrameSystemLastRuntimeUpgradeInfo (241) */
+  /** @name FrameSystemLastRuntimeUpgradeInfo (242) */
   export interface FrameSystemLastRuntimeUpgradeInfo extends Struct {
     readonly specVersion: Compact<u32>;
     readonly specName: Text;
   }
 
-  /** @name FrameSystemCall (244) */
+  /** @name FrameSystemCall (245) */
   export interface FrameSystemCall extends Enum {
     readonly isFillBlock: boolean;
     readonly asFillBlock: {
@@ -2288,21 +2293,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'FillBlock' | 'Remark' | 'SetHeapPages' | 'SetCode' | 'SetCodeWithoutChecks' | 'SetStorage' | 'KillStorage' | 'KillPrefix' | 'RemarkWithEvent';
   }
 
-  /** @name FrameSystemLimitsBlockWeights (247) */
+  /** @name FrameSystemLimitsBlockWeights (248) */
   export interface FrameSystemLimitsBlockWeights extends Struct {
     readonly baseBlock: u64;
     readonly maxBlock: u64;
     readonly perClass: FrameSupportWeightsPerDispatchClassWeightsPerClass;
   }
 
-  /** @name FrameSupportWeightsPerDispatchClassWeightsPerClass (248) */
+  /** @name FrameSupportWeightsPerDispatchClassWeightsPerClass (249) */
   export interface FrameSupportWeightsPerDispatchClassWeightsPerClass extends Struct {
     readonly normal: FrameSystemLimitsWeightsPerClass;
     readonly operational: FrameSystemLimitsWeightsPerClass;
     readonly mandatory: FrameSystemLimitsWeightsPerClass;
   }
 
-  /** @name FrameSystemLimitsWeightsPerClass (249) */
+  /** @name FrameSystemLimitsWeightsPerClass (250) */
   export interface FrameSystemLimitsWeightsPerClass extends Struct {
     readonly baseExtrinsic: u64;
     readonly maxExtrinsic: Option<u64>;
@@ -2310,25 +2315,25 @@ declare module '@polkadot/types/lookup' {
     readonly reserved: Option<u64>;
   }
 
-  /** @name FrameSystemLimitsBlockLength (250) */
+  /** @name FrameSystemLimitsBlockLength (251) */
   export interface FrameSystemLimitsBlockLength extends Struct {
     readonly max: FrameSupportWeightsPerDispatchClassU32;
   }
 
-  /** @name FrameSupportWeightsPerDispatchClassU32 (251) */
+  /** @name FrameSupportWeightsPerDispatchClassU32 (252) */
   export interface FrameSupportWeightsPerDispatchClassU32 extends Struct {
     readonly normal: u32;
     readonly operational: u32;
     readonly mandatory: u32;
   }
 
-  /** @name FrameSupportWeightsRuntimeDbWeight (252) */
+  /** @name FrameSupportWeightsRuntimeDbWeight (253) */
   export interface FrameSupportWeightsRuntimeDbWeight extends Struct {
     readonly read: u64;
     readonly write: u64;
   }
 
-  /** @name SpVersionRuntimeVersion (253) */
+  /** @name SpVersionRuntimeVersion (254) */
   export interface SpVersionRuntimeVersion extends Struct {
     readonly specName: Text;
     readonly implName: Text;
@@ -2340,7 +2345,7 @@ declare module '@polkadot/types/lookup' {
     readonly stateVersion: u8;
   }
 
-  /** @name FrameSystemError (259) */
+  /** @name FrameSystemError (260) */
   export interface FrameSystemError extends Enum {
     readonly isInvalidSpecName: boolean;
     readonly isSpecVersionNeedsToIncrease: boolean;
@@ -2351,7 +2356,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidSpecName' | 'SpecVersionNeedsToIncrease' | 'FailedToExtractRuntimeVersion' | 'NonDefaultComposite' | 'NonZeroRefCount' | 'CallFiltered';
   }
 
-  /** @name PalletUtilityCall (260) */
+  /** @name PalletUtilityCall (261) */
   export interface PalletUtilityCall extends Enum {
     readonly isBatch: boolean;
     readonly asBatch: {
@@ -2378,7 +2383,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Batch' | 'AsDerivative' | 'BatchAll' | 'DispatchAs' | 'ForceBatch';
   }
 
-  /** @name PalletBabeCall (263) */
+  /** @name PalletBabeCall (264) */
   export interface PalletBabeCall extends Enum {
     readonly isReportEquivocation: boolean;
     readonly asReportEquivocation: {
@@ -2397,7 +2402,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'PlanConfigChange';
   }
 
-  /** @name SpConsensusSlotsEquivocationProof (264) */
+  /** @name SpConsensusSlotsEquivocationProof (265) */
   export interface SpConsensusSlotsEquivocationProof extends Struct {
     readonly offender: SpConsensusBabeAppPublic;
     readonly slot: u64;
@@ -2405,7 +2410,7 @@ declare module '@polkadot/types/lookup' {
     readonly secondHeader: SpRuntimeHeader;
   }
 
-  /** @name SpRuntimeHeader (265) */
+  /** @name SpRuntimeHeader (266) */
   export interface SpRuntimeHeader extends Struct {
     readonly parentHash: H256;
     readonly number: Compact<u32>;
@@ -2414,20 +2419,20 @@ declare module '@polkadot/types/lookup' {
     readonly digest: SpRuntimeDigest;
   }
 
-  /** @name SpRuntimeBlakeTwo256 (266) */
+  /** @name SpRuntimeBlakeTwo256 (267) */
   export type SpRuntimeBlakeTwo256 = Null;
 
-  /** @name SpConsensusBabeAppPublic (267) */
+  /** @name SpConsensusBabeAppPublic (268) */
   export interface SpConsensusBabeAppPublic extends SpCoreSr25519Public {}
 
-  /** @name SpSessionMembershipProof (269) */
+  /** @name SpSessionMembershipProof (270) */
   export interface SpSessionMembershipProof extends Struct {
     readonly session: u32;
     readonly trieNodes: Vec<Bytes>;
     readonly validatorCount: u32;
   }
 
-  /** @name SpConsensusBabeDigestsNextConfigDescriptor (270) */
+  /** @name SpConsensusBabeDigestsNextConfigDescriptor (271) */
   export interface SpConsensusBabeDigestsNextConfigDescriptor extends Enum {
     readonly isV1: boolean;
     readonly asV1: {
@@ -2437,7 +2442,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'V1';
   }
 
-  /** @name SpConsensusBabeAllowedSlots (271) */
+  /** @name SpConsensusBabeAllowedSlots (272) */
   export interface SpConsensusBabeAllowedSlots extends Enum {
     readonly isPrimarySlots: boolean;
     readonly isPrimaryAndSecondaryPlainSlots: boolean;
@@ -2445,7 +2450,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PrimarySlots' | 'PrimaryAndSecondaryPlainSlots' | 'PrimaryAndSecondaryVRFSlots';
   }
 
-  /** @name PalletTimestampCall (272) */
+  /** @name PalletTimestampCall (273) */
   export interface PalletTimestampCall extends Enum {
     readonly isSet: boolean;
     readonly asSet: {
@@ -2454,7 +2459,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Set';
   }
 
-  /** @name PalletAuthorshipCall (274) */
+  /** @name PalletAuthorshipCall (275) */
   export interface PalletAuthorshipCall extends Enum {
     readonly isSetUncles: boolean;
     readonly asSetUncles: {
@@ -2463,7 +2468,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'SetUncles';
   }
 
-  /** @name PalletBalancesCall (276) */
+  /** @name PalletBalancesCall (277) */
   export interface PalletBalancesCall extends Enum {
     readonly isTransfer: boolean;
     readonly asTransfer: {
@@ -2500,7 +2505,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Transfer' | 'SetBalance' | 'ForceTransfer' | 'TransferKeepAlive' | 'TransferAll' | 'ForceUnreserve';
   }
 
-  /** @name PalletElectionProviderMultiPhaseCall (277) */
+  /** @name PalletElectionProviderMultiPhaseCall (278) */
   export interface PalletElectionProviderMultiPhaseCall extends Enum {
     readonly isSubmitUnsigned: boolean;
     readonly asSubmitUnsigned: {
@@ -2527,14 +2532,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'SubmitUnsigned' | 'SetMinimumUntrustedScore' | 'SetEmergencyElectionResult' | 'Submit' | 'GovernanceFallback';
   }
 
-  /** @name PalletElectionProviderMultiPhaseRawSolution (278) */
+  /** @name PalletElectionProviderMultiPhaseRawSolution (279) */
   export interface PalletElectionProviderMultiPhaseRawSolution extends Struct {
     readonly solution: JoystreamNodeRuntimeNposSolution16;
     readonly score: SpNposElectionsElectionScore;
     readonly round: u32;
   }
 
-  /** @name JoystreamNodeRuntimeNposSolution16 (279) */
+  /** @name JoystreamNodeRuntimeNposSolution16 (280) */
   export interface JoystreamNodeRuntimeNposSolution16 extends Struct {
     readonly votes1: Vec<ITuple<[Compact<u32>, Compact<u16>]>>;
     readonly votes2: Vec<ITuple<[Compact<u32>, ITuple<[Compact<u16>, Compact<PerU16>]>, Compact<u16>]>>;
@@ -2554,20 +2559,20 @@ declare module '@polkadot/types/lookup' {
     readonly votes16: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
   }
 
-  /** @name SpNposElectionsElectionScore (330) */
+  /** @name SpNposElectionsElectionScore (331) */
   export interface SpNposElectionsElectionScore extends Struct {
     readonly minimalStake: u128;
     readonly sumStake: u128;
     readonly sumStakeSquared: u128;
   }
 
-  /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (331) */
+  /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (332) */
   export interface PalletElectionProviderMultiPhaseSolutionOrSnapshotSize extends Struct {
     readonly voters: Compact<u32>;
     readonly targets: Compact<u32>;
   }
 
-  /** @name SpNposElectionsSupport (335) */
+  /** @name SpNposElectionsSupport (336) */
   export interface SpNposElectionsSupport extends Struct {
     readonly total: u128;
     readonly voters: Vec<ITuple<[AccountId32, u128]>>;
@@ -2851,30 +2856,7 @@ declare module '@polkadot/types/lookup' {
   /** @name SpCoreSr25519Signature (369) */
   export interface SpCoreSr25519Signature extends U8aFixed {}
 
-  /** @name PalletSudoCall (370) */
-  export interface PalletSudoCall extends Enum {
-    readonly isSudo: boolean;
-    readonly asSudo: {
-      readonly call: Call;
-    } & Struct;
-    readonly isSudoUncheckedWeight: boolean;
-    readonly asSudoUncheckedWeight: {
-      readonly call: Call;
-      readonly weight: u64;
-    } & Struct;
-    readonly isSetKey: boolean;
-    readonly asSetKey: {
-      readonly new_: AccountId32;
-    } & Struct;
-    readonly isSudoAs: boolean;
-    readonly asSudoAs: {
-      readonly who: AccountId32;
-      readonly call: Call;
-    } & Struct;
-    readonly type: 'Sudo' | 'SudoUncheckedWeight' | 'SetKey' | 'SudoAs';
-  }
-
-  /** @name PalletBagsListCall (371) */
+  /** @name PalletBagsListCall (370) */
   export interface PalletBagsListCall extends Enum {
     readonly isRebag: boolean;
     readonly asRebag: {
@@ -2887,7 +2869,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Rebag' | 'PutInFrontOf';
   }
 
-  /** @name PalletVestingCall (372) */
+  /** @name PalletVestingCall (371) */
   export interface PalletVestingCall extends Enum {
     readonly isVest: boolean;
     readonly isVestOther: boolean;
@@ -2913,14 +2895,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Vest' | 'VestOther' | 'VestedTransfer' | 'ForceVestedTransfer' | 'MergeSchedules';
   }
 
-  /** @name PalletVestingVestingInfo (373) */
+  /** @name PalletVestingVestingInfo (372) */
   export interface PalletVestingVestingInfo extends Struct {
     readonly locked: u128;
     readonly perBlock: u128;
     readonly startingBlock: u32;
   }
 
-  /** @name PalletMultisigCall (374) */
+  /** @name PalletMultisigCall (373) */
   export interface PalletMultisigCall extends Enum {
     readonly isAsMultiThreshold1: boolean;
     readonly asAsMultiThreshold1: {
@@ -2954,7 +2936,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AsMultiThreshold1' | 'AsMulti' | 'ApproveAsMulti' | 'CancelAsMulti';
   }
 
-  /** @name PalletCouncilCall (377) */
+  /** @name PalletCouncilCall (376) */
   export interface PalletCouncilCall extends Enum {
     readonly isAnnounceCandidacy: boolean;
     readonly asAnnounceCandidacy: {
@@ -3015,7 +2997,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
   }
 
-  /** @name PalletReferendumCall (378) */
+  /** @name PalletReferendumCall (377) */
   export interface PalletReferendumCall extends Enum {
     readonly isVote: boolean;
     readonly asVote: {
@@ -3028,10 +3010,11 @@ declare module '@polkadot/types/lookup' {
       readonly voteOptionId: u64;
     } & Struct;
     readonly isReleaseVoteStake: boolean;
-    readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake';
+    readonly isOptOutOfVoting: boolean;
+    readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake' | 'OptOutOfVoting';
   }
 
-  /** @name PalletMembershipCall (379) */
+  /** @name PalletMembershipCall (378) */
   export interface PalletMembershipCall extends Enum {
     readonly isBuyMembership: boolean;
     readonly asBuyMembership: {
@@ -3106,6 +3089,7 @@ declare module '@polkadot/types/lookup' {
     readonly asMemberRemark: {
       readonly memberId: u64;
       readonly msg: Bytes;
+      readonly payment: Option<ITuple<[AccountId32, u128]>>;
     } & Struct;
     readonly isCreateMember: boolean;
     readonly asCreateMember: {
@@ -3114,7 +3098,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'BuyMembership' | 'UpdateProfile' | 'UpdateAccounts' | 'UpdateProfileVerification' | 'SetReferralCut' | 'TransferInvites' | 'InviteMember' | 'GiftMembership' | 'SetMembershipPrice' | 'SetLeaderInvitationQuota' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'AddStakingAccountCandidate' | 'RemoveStakingAccount' | 'ConfirmStakingAccount' | 'MemberRemark' | 'CreateMember';
   }
 
-  /** @name PalletForumCall (380) */
+  /** @name PalletForumCall (379) */
   export interface PalletForumCall extends Enum {
     readonly isUpdateCategoryMembershipOfModerator: boolean;
     readonly asUpdateCategoryMembershipOfModerator: {
@@ -3225,7 +3209,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'UpdateCategoryMembershipOfModerator' | 'CreateCategory' | 'UpdateCategoryArchivalStatus' | 'UpdateCategoryTitle' | 'UpdateCategoryDescription' | 'DeleteCategory' | 'CreateThread' | 'EditThreadMetadata' | 'DeleteThread' | 'MoveThreadToCategory' | 'ModerateThread' | 'AddPost' | 'EditPostText' | 'ModeratePost' | 'DeletePosts' | 'SetStickiedThreads';
   }
 
-  /** @name PalletConstitutionCall (381) */
+  /** @name PalletConstitutionCall (380) */
   export interface PalletConstitutionCall extends Enum {
     readonly isAmendConstitution: boolean;
     readonly asAmendConstitution: {
@@ -3234,7 +3218,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AmendConstitution';
   }
 
-  /** @name PalletBountyCall (382) */
+  /** @name PalletBountyCall (381) */
   export interface PalletBountyCall extends Enum {
     readonly isCreateBounty: boolean;
     readonly asCreateBounty: {
@@ -3323,7 +3307,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CreateBounty' | 'FundBounty' | 'TerminateBounty' | 'SwitchOracle' | 'WithdrawFunding' | 'AnnounceWorkEntry' | 'SubmitWork' | 'EndWorkingPeriod' | 'SubmitOracleJudgment' | 'WithdrawEntrantStake' | 'WithdrawOracleReward' | 'ContributorRemark' | 'OracleRemark' | 'EntrantRemark' | 'CreatorRemark';
   }
 
-  /** @name PalletContentCall (384) */
+  /** @name PalletContentCall (383) */
   export interface PalletContentCall extends Enum {
     readonly isCreateCuratorGroup: boolean;
     readonly asCreateCuratorGroup: {
@@ -3449,6 +3433,7 @@ declare module '@polkadot/types/lookup' {
     readonly isUpdateChannelPayouts: boolean;
     readonly asUpdateChannelPayouts: {
       readonly params: PalletContentUpdateChannelPayoutsParametersRecord;
+      readonly uploaderAccount: AccountId32;
     } & Struct;
     readonly isClaimChannelReward: boolean;
     readonly asClaimChannelReward: {
@@ -3654,7 +3639,7 @@ declare module '@polkadot/types/lookup' {
     readonly asCreatorTokenIssuerTransfer: {
       readonly actor: PalletContentPermissionsContentActor;
       readonly channelId: u64;
-      readonly outputs: PalletProjectTokenTransfersPaymentWithVesting;
+      readonly outputs: Vec<ITuple<[u64, PalletProjectTokenPaymentWithVesting]>>;
       readonly metadata: Bytes;
     } & Struct;
     readonly isMakeCreatorTokenPermissionless: boolean;
@@ -3695,43 +3680,54 @@ declare module '@polkadot/types/lookup' {
       readonly actor: PalletContentPermissionsContentActor;
       readonly channelId: u64;
     } & Struct;
-    readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'DeleteChannelAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'DeleteVideoAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'ClaimAndWithdrawChannelReward' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken';
+    readonly isActivateAmm: boolean;
+    readonly asActivateAmm: {
+      readonly actor: PalletContentPermissionsContentActor;
+      readonly channelId: u64;
+      readonly params: PalletProjectTokenAmmParams;
+    } & Struct;
+    readonly isDeactivateAmm: boolean;
+    readonly asDeactivateAmm: {
+      readonly actor: PalletContentPermissionsContentActor;
+      readonly channelId: u64;
+    } & Struct;
+    readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'DeleteChannelAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'DeleteVideoAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'ClaimAndWithdrawChannelReward' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken' | 'ActivateAmm' | 'DeactivateAmm';
   }
 
-  /** @name PalletContentChannelBagWitness (385) */
+  /** @name PalletContentChannelBagWitness (384) */
   export interface PalletContentChannelBagWitness extends Struct {
     readonly storageBucketsNum: u32;
     readonly distributionBucketsNum: u32;
   }
 
-  /** @name PalletCommonMerkleTreeProofElementRecord (387) */
+  /** @name PalletCommonMerkleTreeProofElementRecord (386) */
   export interface PalletCommonMerkleTreeProofElementRecord extends Struct {
     readonly hash_: H256;
     readonly side: PalletCommonMerkleTreeSide;
   }
 
-  /** @name PalletCommonMerkleTreeSide (388) */
+  /** @name PalletCommonMerkleTreeSide (387) */
   export interface PalletCommonMerkleTreeSide extends Enum {
     readonly isLeft: boolean;
     readonly isRight: boolean;
     readonly type: 'Left' | 'Right';
   }
 
-  /** @name PalletContentPullPaymentElement (389) */
+  /** @name PalletContentPullPaymentElement (388) */
   export interface PalletContentPullPaymentElement extends Struct {
     readonly channelId: u64;
     readonly cumulativeRewardEarned: u128;
     readonly reason: H256;
   }
 
-  /** @name PalletContentInitTransferParameters (390) */
+  /** @name PalletContentInitTransferParameters (389) */
   export interface PalletContentInitTransferParameters extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly newOwner: PalletContentChannelOwner;
   }
 
-  /** @name PalletProjectTokenTokenSaleParams (391) */
+  /** @name PalletProjectTokenTokenSaleParams (390) */
   export interface PalletProjectTokenTokenSaleParams extends Struct {
     readonly unitPrice: u128;
     readonly upperBoundQuantity: u128;
@@ -3742,10 +3738,13 @@ declare module '@polkadot/types/lookup' {
     readonly metadata: Option<Bytes>;
   }
 
-  /** @name PalletProjectTokenTransfersPaymentWithVesting (392) */
-  export interface PalletProjectTokenTransfersPaymentWithVesting extends BTreeMap<u64, PalletProjectTokenPaymentWithVesting> {}
+  /** @name PalletProjectTokenAmmParams (394) */
+  export interface PalletProjectTokenAmmParams extends Struct {
+    readonly slope: u128;
+    readonly intercept: u128;
+  }
 
-  /** @name PalletStorageCall (396) */
+  /** @name PalletStorageCall (395) */
   export interface PalletStorageCall extends Enum {
     readonly isDeleteStorageBucket: boolean;
     readonly asDeleteStorageBucket: {
@@ -3909,10 +3908,6 @@ declare module '@polkadot/types/lookup' {
       readonly bucketId: PalletStorageDistributionBucketIdRecord;
       readonly metadata: Bytes;
     } & Struct;
-    readonly isSudoUploadDataObjects: boolean;
-    readonly asSudoUploadDataObjects: {
-      readonly params: PalletStorageUploadParametersRecord;
-    } & Struct;
     readonly isStorageOperatorRemark: boolean;
     readonly asStorageOperatorRemark: {
       readonly workerId: u64;
@@ -3925,16 +3920,16 @@ declare module '@polkadot/types/lookup' {
       readonly distributionBucketId: PalletStorageDistributionBucketIdRecord;
       readonly msg: Bytes;
     } & Struct;
-    readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'SudoUploadDataObjects' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
+    readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
   }
 
-  /** @name PalletProjectTokenCall (397) */
+  /** @name PalletProjectTokenCall (396) */
   export interface PalletProjectTokenCall extends Enum {
     readonly isTransfer: boolean;
     readonly asTransfer: {
       readonly srcMemberId: u64;
       readonly tokenId: u64;
-      readonly outputs: PalletProjectTokenTransfersPayment;
+      readonly outputs: Vec<ITuple<[u64, u128]>>;
       readonly metadata: Bytes;
     } & Struct;
     readonly isBurn: boolean;
@@ -3971,28 +3966,38 @@ declare module '@polkadot/types/lookup' {
       readonly tokenId: u64;
       readonly memberId: u64;
     } & Struct;
-    readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit';
-  }
-
-  /** @name PalletProjectTokenTransfersPayment (398) */
-  export interface PalletProjectTokenTransfersPayment extends BTreeMap<u64, PalletProjectTokenPayment> {}
-
-  /** @name PalletProjectTokenPayment (399) */
-  export interface PalletProjectTokenPayment extends Struct {
-    readonly amount: u128;
+    readonly isBuyOnAmm: boolean;
+    readonly asBuyOnAmm: {
+      readonly tokenId: u64;
+      readonly memberId: u64;
+      readonly amount: u128;
+      readonly slippageTolerance: Option<ITuple<[Permill, u128]>>;
+    } & Struct;
+    readonly isSellOnAmm: boolean;
+    readonly asSellOnAmm: {
+      readonly tokenId: u64;
+      readonly memberId: u64;
+      readonly amount: u128;
+      readonly slippageTolerance: Option<ITuple<[Permill, u128]>>;
+    } & Struct;
+    readonly isUpdateMaxYearlyPatronageRate: boolean;
+    readonly asUpdateMaxYearlyPatronageRate: {
+      readonly rate: Permill;
+    } & Struct;
+    readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'UpdateMaxYearlyPatronageRate';
   }
 
-  /** @name PalletProjectTokenMerkleProof (403) */
+  /** @name PalletProjectTokenMerkleProof (400) */
   export interface PalletProjectTokenMerkleProof extends Vec<ITuple<[H256, PalletProjectTokenMerkleSide]>> {}
 
-  /** @name PalletProjectTokenMerkleSide (406) */
+  /** @name PalletProjectTokenMerkleSide (403) */
   export interface PalletProjectTokenMerkleSide extends Enum {
     readonly isRight: boolean;
     readonly isLeft: boolean;
     readonly type: 'Right' | 'Left';
   }
 
-  /** @name PalletProposalsEngineCall (407) */
+  /** @name PalletProposalsEngineCall (406) */
   export interface PalletProposalsEngineCall extends Enum {
     readonly isVote: boolean;
     readonly asVote: {
@@ -4019,7 +4024,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Vote' | 'CancelProposal' | 'VetoProposal' | 'ProposerRemark';
   }
 
-  /** @name PalletProposalsDiscussionCall (408) */
+  /** @name PalletProposalsDiscussionCall (407) */
   export interface PalletProposalsDiscussionCall extends Enum {
     readonly isAddPost: boolean;
     readonly asAddPost: {
@@ -4050,7 +4055,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AddPost' | 'DeletePost' | 'UpdatePost' | 'ChangeThreadMode';
   }
 
-  /** @name PalletProposalsCodexCall (409) */
+  /** @name PalletProposalsCodexCall (408) */
   export interface PalletProposalsCodexCall extends Enum {
     readonly isCreateProposal: boolean;
     readonly asCreateProposal: {
@@ -4060,7 +4065,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CreateProposal';
   }
 
-  /** @name PalletWorkingGroupCall (410) */
+  /** @name PalletWorkingGroupCall (409) */
   export interface PalletWorkingGroupCall extends Enum {
     readonly isAddOpening: boolean;
     readonly asAddOpening: {
@@ -4160,7 +4165,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
   }
 
-  /** @name JoystreamNodeRuntimeOriginCaller (419) */
+  /** @name JoystreamNodeRuntimeOriginCaller (418) */
   export interface JoystreamNodeRuntimeOriginCaller extends Enum {
     readonly isSystem: boolean;
     readonly asSystem: FrameSupportDispatchRawOrigin;
@@ -4168,7 +4173,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'System' | 'Void';
   }
 
-  /** @name FrameSupportDispatchRawOrigin (420) */
+  /** @name FrameSupportDispatchRawOrigin (419) */
   export interface FrameSupportDispatchRawOrigin extends Enum {
     readonly isRoot: boolean;
     readonly isSigned: boolean;
@@ -4177,16 +4182,16 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Root' | 'Signed' | 'None';
   }
 
-  /** @name SpCoreVoid (421) */
+  /** @name SpCoreVoid (420) */
   export type SpCoreVoid = Null;
 
-  /** @name PalletUtilityError (422) */
+  /** @name PalletUtilityError (421) */
   export interface PalletUtilityError extends Enum {
     readonly isTooManyCalls: boolean;
     readonly type: 'TooManyCalls';
   }
 
-  /** @name SpConsensusBabeDigestsPreDigest (429) */
+  /** @name SpConsensusBabeDigestsPreDigest (428) */
   export interface SpConsensusBabeDigestsPreDigest extends Enum {
     readonly isPrimary: boolean;
     readonly asPrimary: SpConsensusBabeDigestsPrimaryPreDigest;
@@ -4197,7 +4202,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Primary' | 'SecondaryPlain' | 'SecondaryVRF';
   }
 
-  /** @name SpConsensusBabeDigestsPrimaryPreDigest (430) */
+  /** @name SpConsensusBabeDigestsPrimaryPreDigest (429) */
   export interface SpConsensusBabeDigestsPrimaryPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
@@ -4205,13 +4210,13 @@ declare module '@polkadot/types/lookup' {
     readonly vrfProof: U8aFixed;
   }
 
-  /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (431) */
+  /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (430) */
   export interface SpConsensusBabeDigestsSecondaryPlainPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
   }
 
-  /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (432) */
+  /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (431) */
   export interface SpConsensusBabeDigestsSecondaryVRFPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
@@ -4219,13 +4224,13 @@ declare module '@polkadot/types/lookup' {
     readonly vrfProof: U8aFixed;
   }
 
-  /** @name SpConsensusBabeBabeEpochConfiguration (434) */
+  /** @name SpConsensusBabeBabeEpochConfiguration (433) */
   export interface SpConsensusBabeBabeEpochConfiguration extends Struct {
     readonly c: ITuple<[u64, u64]>;
     readonly allowedSlots: SpConsensusBabeAllowedSlots;
   }
 
-  /** @name PalletBabeError (435) */
+  /** @name PalletBabeError (434) */
   export interface PalletBabeError extends Enum {
     readonly isInvalidEquivocationProof: boolean;
     readonly isInvalidKeyOwnershipProof: boolean;
@@ -4234,7 +4239,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidEquivocationProof' | 'InvalidKeyOwnershipProof' | 'DuplicateOffenceReport' | 'InvalidConfiguration';
   }
 
-  /** @name PalletAuthorshipUncleEntryItem (437) */
+  /** @name PalletAuthorshipUncleEntryItem (436) */
   export interface PalletAuthorshipUncleEntryItem extends Enum {
     readonly isInclusionHeight: boolean;
     readonly asInclusionHeight: u32;
@@ -4243,7 +4248,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InclusionHeight' | 'Uncle';
   }
 
-  /** @name PalletAuthorshipError (438) */
+  /** @name PalletAuthorshipError (437) */
   export interface PalletAuthorshipError extends Enum {
     readonly isInvalidUncleParent: boolean;
     readonly isUnclesAlreadySet: boolean;
@@ -4255,14 +4260,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidUncleParent' | 'UnclesAlreadySet' | 'TooManyUncles' | 'GenesisUncle' | 'TooHighUncle' | 'UncleAlreadyIncluded' | 'OldUncle';
   }
 
-  /** @name PalletBalancesBalanceLock (440) */
+  /** @name PalletBalancesBalanceLock (439) */
   export interface PalletBalancesBalanceLock extends Struct {
     readonly id: U8aFixed;
     readonly amount: u128;
     readonly reasons: PalletBalancesReasons;
   }
 
-  /** @name PalletBalancesReasons (441) */
+  /** @name PalletBalancesReasons (440) */
   export interface PalletBalancesReasons extends Enum {
     readonly isFee: boolean;
     readonly isMisc: boolean;
@@ -4270,20 +4275,20 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Fee' | 'Misc' | 'All';
   }
 
-  /** @name PalletBalancesReserveData (444) */
+  /** @name PalletBalancesReserveData (443) */
   export interface PalletBalancesReserveData extends Struct {
     readonly id: U8aFixed;
     readonly amount: u128;
   }
 
-  /** @name PalletBalancesReleases (446) */
+  /** @name PalletBalancesReleases (445) */
   export interface PalletBalancesReleases extends Enum {
     readonly isV100: boolean;
     readonly isV200: boolean;
     readonly type: 'V100' | 'V200';
   }
 
-  /** @name PalletBalancesError (447) */
+  /** @name PalletBalancesError (446) */
   export interface PalletBalancesError extends Enum {
     readonly isVestingBalance: boolean;
     readonly isLiquidityRestrictions: boolean;
@@ -4296,14 +4301,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'VestingBalance' | 'LiquidityRestrictions' | 'InsufficientBalance' | 'ExistentialDeposit' | 'KeepAlive' | 'ExistingVestingSchedule' | 'DeadAccount' | 'TooManyReserves';
   }
 
-  /** @name PalletTransactionPaymentReleases (449) */
+  /** @name PalletTransactionPaymentReleases (448) */
   export interface PalletTransactionPaymentReleases extends Enum {
     readonly isV1Ancient: boolean;
     readonly isV2: boolean;
     readonly type: 'V1Ancient' | 'V2';
   }
 
-  /** @name PalletElectionProviderMultiPhasePhase (450) */
+  /** @name PalletElectionProviderMultiPhasePhase (449) */
   export interface PalletElectionProviderMultiPhasePhase extends Enum {
     readonly isOff: boolean;
     readonly isSigned: boolean;
@@ -4313,20 +4318,20 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Off' | 'Signed' | 'Unsigned' | 'Emergency';
   }
 
-  /** @name PalletElectionProviderMultiPhaseReadySolution (452) */
+  /** @name PalletElectionProviderMultiPhaseReadySolution (451) */
   export interface PalletElectionProviderMultiPhaseReadySolution extends Struct {
     readonly supports: Vec<ITuple<[AccountId32, SpNposElectionsSupport]>>;
     readonly score: SpNposElectionsElectionScore;
     readonly compute: PalletElectionProviderMultiPhaseElectionCompute;
   }
 
-  /** @name PalletElectionProviderMultiPhaseRoundSnapshot (453) */
+  /** @name PalletElectionProviderMultiPhaseRoundSnapshot (452) */
   export interface PalletElectionProviderMultiPhaseRoundSnapshot extends Struct {
     readonly voters: Vec<ITuple<[AccountId32, u64, Vec<AccountId32>]>>;
     readonly targets: Vec<AccountId32>;
   }
 
-  /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (461) */
+  /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (460) */
   export interface PalletElectionProviderMultiPhaseSignedSignedSubmission extends Struct {
     readonly who: AccountId32;
     readonly deposit: u128;
@@ -4334,7 +4339,7 @@ declare module '@polkadot/types/lookup' {
     readonly callFee: u128;
   }
 
-  /** @name PalletElectionProviderMultiPhaseError (462) */
+  /** @name PalletElectionProviderMultiPhaseError (461) */
   export interface PalletElectionProviderMultiPhaseError extends Enum {
     readonly isPreDispatchEarlySubmission: boolean;
     readonly isPreDispatchWrongWinnerCount: boolean;
@@ -4351,7 +4356,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PreDispatchEarlySubmission' | 'PreDispatchWrongWinnerCount' | 'PreDispatchWeakSubmission' | 'SignedQueueFull' | 'SignedCannotPayDeposit' | 'SignedInvalidWitness' | 'SignedTooMuchWeight' | 'OcwCallWrongEra' | 'MissingSnapshotMetadata' | 'InvalidSubmissionIndex' | 'CallNotAllowed' | 'FallbackFailed';
   }
 
-  /** @name PalletStakingStakingLedger (463) */
+  /** @name PalletStakingStakingLedger (462) */
   export interface PalletStakingStakingLedger extends Struct {
     readonly stash: AccountId32;
     readonly total: Compact<u128>;
@@ -4360,32 +4365,32 @@ declare module '@polkadot/types/lookup' {
     readonly claimedRewards: Vec<u32>;
   }
 
-  /** @name PalletStakingUnlockChunk (465) */
+  /** @name PalletStakingUnlockChunk (464) */
   export interface PalletStakingUnlockChunk extends Struct {
     readonly value: Compact<u128>;
     readonly era: Compact<u32>;
   }
 
-  /** @name PalletStakingNominations (467) */
+  /** @name PalletStakingNominations (466) */
   export interface PalletStakingNominations extends Struct {
     readonly targets: Vec<AccountId32>;
     readonly submittedIn: u32;
     readonly suppressed: bool;
   }
 
-  /** @name PalletStakingActiveEraInfo (468) */
+  /** @name PalletStakingActiveEraInfo (467) */
   export interface PalletStakingActiveEraInfo extends Struct {
     readonly index: u32;
     readonly start: Option<u64>;
   }
 
-  /** @name PalletStakingEraRewardPoints (470) */
+  /** @name PalletStakingEraRewardPoints (469) */
   export interface PalletStakingEraRewardPoints extends Struct {
     readonly total: u32;
     readonly individual: BTreeMap<AccountId32, u32>;
   }
 
-  /** @name PalletStakingForcing (474) */
+  /** @name PalletStakingForcing (473) */
   export interface PalletStakingForcing extends Enum {
     readonly isNotForcing: boolean;
     readonly isForceNew: boolean;
@@ -4394,7 +4399,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotForcing' | 'ForceNew' | 'ForceNone' | 'ForceAlways';
   }
 
-  /** @name PalletStakingUnappliedSlash (476) */
+  /** @name PalletStakingUnappliedSlash (475) */
   export interface PalletStakingUnappliedSlash extends Struct {
     readonly validator: AccountId32;
     readonly own: u128;
@@ -4403,7 +4408,7 @@ declare module '@polkadot/types/lookup' {
     readonly payout: u128;
   }
 
-  /** @name PalletStakingSlashingSlashingSpans (478) */
+  /** @name PalletStakingSlashingSlashingSpans (477) */
   export interface PalletStakingSlashingSlashingSpans extends Struct {
     readonly spanIndex: u32;
     readonly lastStart: u32;
@@ -4411,13 +4416,13 @@ declare module '@polkadot/types/lookup' {
     readonly prior: Vec<u32>;
   }
 
-  /** @name PalletStakingSlashingSpanRecord (479) */
+  /** @name PalletStakingSlashingSpanRecord (478) */
   export interface PalletStakingSlashingSpanRecord extends Struct {
     readonly slashed: u128;
     readonly paidOut: u128;
   }
 
-  /** @name PalletStakingReleases (482) */
+  /** @name PalletStakingReleases (481) */
   export interface PalletStakingReleases extends Enum {
     readonly isV100Ancient: boolean;
     readonly isV200: boolean;
@@ -4431,7 +4436,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'V100Ancient' | 'V200' | 'V300' | 'V400' | 'V500' | 'V600' | 'V700' | 'V800' | 'V900';
   }
 
-  /** @name PalletStakingPalletError (483) */
+  /** @name PalletStakingPalletError (482) */
   export interface PalletStakingPalletError extends Enum {
     readonly isNotController: boolean;
     readonly isNotStash: boolean;
@@ -4461,10 +4466,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotController' | 'NotStash' | 'AlreadyBonded' | 'AlreadyPaired' | 'EmptyTargets' | 'DuplicateIndex' | 'InvalidSlashIndex' | 'InsufficientBond' | 'NoMoreChunks' | 'NoUnlockChunk' | 'FundedTarget' | 'InvalidEraToReward' | 'InvalidNumberOfNominations' | 'NotSortedAndUnique' | 'AlreadyClaimed' | 'IncorrectHistoryDepth' | 'IncorrectSlashingSpans' | 'BadState' | 'TooManyTargets' | 'BadTarget' | 'CannotChillOther' | 'TooManyNominators' | 'TooManyValidators' | 'CommissionTooLow' | 'BondingRestricted';
   }
 
-  /** @name SpCoreCryptoKeyTypeId (487) */
+  /** @name SpCoreCryptoKeyTypeId (486) */
   export interface SpCoreCryptoKeyTypeId extends U8aFixed {}
 
-  /** @name PalletSessionError (488) */
+  /** @name PalletSessionError (487) */
   export interface PalletSessionError extends Enum {
     readonly isInvalidProof: boolean;
     readonly isNoAssociatedValidatorId: boolean;
@@ -4474,7 +4479,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidProof' | 'NoAssociatedValidatorId' | 'DuplicatedKey' | 'NoKeys' | 'NoAccount';
   }
 
-  /** @name PalletGrandpaStoredState (490) */
+  /** @name PalletGrandpaStoredState (489) */
   export interface PalletGrandpaStoredState extends Enum {
     readonly isLive: boolean;
     readonly isPendingPause: boolean;
@@ -4491,7 +4496,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Live' | 'PendingPause' | 'Paused' | 'PendingResume';
   }
 
-  /** @name PalletGrandpaStoredPendingChange (491) */
+  /** @name PalletGrandpaStoredPendingChange (490) */
   export interface PalletGrandpaStoredPendingChange extends Struct {
     readonly scheduledAt: u32;
     readonly delay: u32;
@@ -4499,7 +4504,7 @@ declare module '@polkadot/types/lookup' {
     readonly forced: Option<u32>;
   }
 
-  /** @name PalletGrandpaError (493) */
+  /** @name PalletGrandpaError (492) */
   export interface PalletGrandpaError extends Enum {
     readonly isPauseFailed: boolean;
     readonly isResumeFailed: boolean;
@@ -4511,32 +4516,26 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PauseFailed' | 'ResumeFailed' | 'ChangePending' | 'TooSoon' | 'InvalidKeyOwnershipProof' | 'InvalidEquivocationProof' | 'DuplicateOffenceReport';
   }
 
-  /** @name PalletImOnlineBoundedOpaqueNetworkState (499) */
+  /** @name PalletImOnlineBoundedOpaqueNetworkState (498) */
   export interface PalletImOnlineBoundedOpaqueNetworkState extends Struct {
     readonly peerId: Bytes;
     readonly externalAddresses: Vec<Bytes>;
   }
 
-  /** @name PalletImOnlineError (503) */
+  /** @name PalletImOnlineError (502) */
   export interface PalletImOnlineError extends Enum {
     readonly isInvalidKey: boolean;
     readonly isDuplicatedHeartbeat: boolean;
     readonly type: 'InvalidKey' | 'DuplicatedHeartbeat';
   }
 
-  /** @name SpStakingOffenceOffenceDetails (504) */
+  /** @name SpStakingOffenceOffenceDetails (503) */
   export interface SpStakingOffenceOffenceDetails extends Struct {
     readonly offender: ITuple<[AccountId32, PalletStakingExposure]>;
     readonly reporters: Vec<AccountId32>;
   }
 
-  /** @name PalletSudoError (507) */
-  export interface PalletSudoError extends Enum {
-    readonly isRequireSudo: boolean;
-    readonly type: 'RequireSudo';
-  }
-
-  /** @name PalletBagsListListNode (508) */
+  /** @name PalletBagsListListNode (506) */
   export interface PalletBagsListListNode extends Struct {
     readonly id: AccountId32;
     readonly prev: Option<AccountId32>;
@@ -4545,20 +4544,20 @@ declare module '@polkadot/types/lookup' {
     readonly score: u64;
   }
 
-  /** @name PalletBagsListListBag (509) */
+  /** @name PalletBagsListListBag (507) */
   export interface PalletBagsListListBag extends Struct {
     readonly head: Option<AccountId32>;
     readonly tail: Option<AccountId32>;
   }
 
-  /** @name PalletBagsListError (510) */
+  /** @name PalletBagsListError (508) */
   export interface PalletBagsListError extends Enum {
     readonly isList: boolean;
     readonly asList: PalletBagsListListListError;
     readonly type: 'List';
   }
 
-  /** @name PalletBagsListListListError (511) */
+  /** @name PalletBagsListListListError (509) */
   export interface PalletBagsListListListError extends Enum {
     readonly isDuplicate: boolean;
     readonly isNotHeavier: boolean;
@@ -4567,14 +4566,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Duplicate' | 'NotHeavier' | 'NotInSameBag' | 'NodeNotFound';
   }
 
-  /** @name PalletVestingReleases (514) */
+  /** @name PalletVestingReleases (512) */
   export interface PalletVestingReleases extends Enum {
     readonly isV0: boolean;
     readonly isV1: boolean;
     readonly type: 'V0' | 'V1';
   }
 
-  /** @name PalletVestingError (515) */
+  /** @name PalletVestingError (513) */
   export interface PalletVestingError extends Enum {
     readonly isNotVesting: boolean;
     readonly isAtMaxVestingSchedules: boolean;
@@ -4584,7 +4583,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotVesting' | 'AtMaxVestingSchedules' | 'AmountLow' | 'ScheduleIndexOutOfBounds' | 'InvalidScheduleParams';
   }
 
-  /** @name PalletMultisigMultisig (517) */
+  /** @name PalletMultisigMultisig (515) */
   export interface PalletMultisigMultisig extends Struct {
     readonly when: PalletMultisigTimepoint;
     readonly deposit: u128;
@@ -4592,7 +4591,7 @@ declare module '@polkadot/types/lookup' {
     readonly approvals: Vec<AccountId32>;
   }
 
-  /** @name PalletMultisigError (519) */
+  /** @name PalletMultisigError (517) */
   export interface PalletMultisigError extends Enum {
     readonly isMinimumThreshold: boolean;
     readonly isAlreadyApproved: boolean;
@@ -4611,13 +4610,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'MinimumThreshold' | 'AlreadyApproved' | 'NoApprovalsNeeded' | 'TooFewSignatories' | 'TooManySignatories' | 'SignatoriesOutOfOrder' | 'SenderInSignatories' | 'NotFound' | 'NotOwner' | 'NoTimepoint' | 'WrongTimepoint' | 'UnexpectedTimepoint' | 'MaxWeightTooLow' | 'AlreadyStored';
   }
 
-  /** @name PalletCouncilCouncilStageUpdate (520) */
+  /** @name PalletCouncilCouncilStageUpdate (518) */
   export interface PalletCouncilCouncilStageUpdate extends Struct {
     readonly stage: PalletCouncilCouncilStage;
     readonly changedAt: u32;
   }
 
-  /** @name PalletCouncilCouncilStage (521) */
+  /** @name PalletCouncilCouncilStage (519) */
   export interface PalletCouncilCouncilStage extends Enum {
     readonly isAnnouncing: boolean;
     readonly asAnnouncing: PalletCouncilCouncilStageAnnouncing;
@@ -4628,23 +4627,23 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Announcing' | 'Election' | 'Idle';
   }
 
-  /** @name PalletCouncilCouncilStageAnnouncing (522) */
+  /** @name PalletCouncilCouncilStageAnnouncing (520) */
   export interface PalletCouncilCouncilStageAnnouncing extends Struct {
     readonly candidatesCount: u32;
     readonly endsAt: u32;
   }
 
-  /** @name PalletCouncilCouncilStageElection (523) */
+  /** @name PalletCouncilCouncilStageElection (521) */
   export interface PalletCouncilCouncilStageElection extends Struct {
     readonly candidatesCount: u32;
   }
 
-  /** @name PalletCouncilCouncilStageIdle (524) */
+  /** @name PalletCouncilCouncilStageIdle (522) */
   export interface PalletCouncilCouncilStageIdle extends Struct {
     readonly endsAt: u32;
   }
 
-  /** @name PalletCouncilCouncilMember (526) */
+  /** @name PalletCouncilCouncilMember (524) */
   export interface PalletCouncilCouncilMember extends Struct {
     readonly stakingAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -4654,7 +4653,7 @@ declare module '@polkadot/types/lookup' {
     readonly unpaidReward: u128;
   }
 
-  /** @name PalletCouncilCandidate (528) */
+  /** @name PalletCouncilCandidate (526) */
   export interface PalletCouncilCandidate extends Struct {
     readonly stakingAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -4664,7 +4663,7 @@ declare module '@polkadot/types/lookup' {
     readonly noteHash: Option<H256>;
   }
 
-  /** @name PalletCouncilError (529) */
+  /** @name PalletCouncilError (527) */
   export interface PalletCouncilError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isBadOrigin: boolean;
@@ -4693,7 +4692,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer';
   }
 
-  /** @name PalletReferendumReferendumStage (530) */
+  /** @name PalletReferendumReferendumStage (528) */
   export interface PalletReferendumReferendumStage extends Enum {
     readonly isInactive: boolean;
     readonly isVoting: boolean;
@@ -4703,7 +4702,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Inactive' | 'Voting' | 'Revealing';
   }
 
-  /** @name PalletReferendumReferendumStageVoting (532) */
+  /** @name PalletReferendumReferendumStageVoting (530) */
   export interface PalletReferendumReferendumStageVoting extends Struct {
     readonly started: u32;
     readonly winningTargetCount: u32;
@@ -4711,7 +4710,7 @@ declare module '@polkadot/types/lookup' {
     readonly endsAt: u32;
   }
 
-  /** @name PalletReferendumReferendumStageRevealing (533) */
+  /** @name PalletReferendumReferendumStageRevealing (531) */
   export interface PalletReferendumReferendumStageRevealing extends Struct {
     readonly started: u32;
     readonly winningTargetCount: u32;
@@ -4720,7 +4719,7 @@ declare module '@polkadot/types/lookup' {
     readonly endsAt: u32;
   }
 
-  /** @name PalletReferendumCastVote (534) */
+  /** @name PalletReferendumCastVote (532) */
   export interface PalletReferendumCastVote extends Struct {
     readonly commitment: H256;
     readonly cycleId: u64;
@@ -4728,7 +4727,7 @@ declare module '@polkadot/types/lookup' {
     readonly voteFor: Option<u64>;
   }
 
-  /** @name PalletReferendumError (535) */
+  /** @name PalletReferendumError (533) */
   export interface PalletReferendumError extends Enum {
     readonly isBadOrigin: boolean;
     readonly isReferendumNotRunning: boolean;
@@ -4743,10 +4742,11 @@ declare module '@polkadot/types/lookup' {
     readonly isUnstakingVoteInSameCycle: boolean;
     readonly isSaltTooLong: boolean;
     readonly isUnstakingForbidden: boolean;
-    readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden';
+    readonly isAccountAlreadyOptedOutOfVoting: boolean;
+    readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden' | 'AccountAlreadyOptedOutOfVoting';
   }
 
-  /** @name PalletMembershipMembershipObject (536) */
+  /** @name PalletMembershipMembershipObject (534) */
   export interface PalletMembershipMembershipObject extends Struct {
     readonly handleHash: H256;
     readonly rootAccount: AccountId32;
@@ -4755,13 +4755,13 @@ declare module '@polkadot/types/lookup' {
     readonly invites: u32;
   }
 
-  /** @name PalletMembershipStakingAccountMemberBinding (537) */
+  /** @name PalletMembershipStakingAccountMemberBinding (535) */
   export interface PalletMembershipStakingAccountMemberBinding extends Struct {
     readonly memberId: u64;
     readonly confirmed: bool;
   }
 
-  /** @name PalletMembershipError (538) */
+  /** @name PalletMembershipError (536) */
   export interface PalletMembershipError extends Enum {
     readonly isNotEnoughBalanceToBuyMembership: boolean;
     readonly isControllerAccountRequired: boolean;
@@ -4784,10 +4784,11 @@ declare module '@polkadot/types/lookup' {
     readonly isInsufficientBalanceToCoverStake: boolean;
     readonly isGifLockExceedsCredit: boolean;
     readonly isInsufficientBalanceToGift: boolean;
-    readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift';
+    readonly isInsufficientBalanceToCoverPayment: boolean;
+    readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift' | 'InsufficientBalanceToCoverPayment';
   }
 
-  /** @name PalletForumCategory (539) */
+  /** @name PalletForumCategory (537) */
   export interface PalletForumCategory extends Struct {
     readonly titleHash: H256;
     readonly descriptionHash: H256;
@@ -4799,7 +4800,7 @@ declare module '@polkadot/types/lookup' {
     readonly stickyThreadIds: BTreeSet<u64>;
   }
 
-  /** @name PalletForumThread (541) */
+  /** @name PalletForumThread (539) */
   export interface PalletForumThread extends Struct {
     readonly categoryId: u64;
     readonly authorId: u64;
@@ -4807,7 +4808,7 @@ declare module '@polkadot/types/lookup' {
     readonly numberOfEditablePosts: u64;
   }
 
-  /** @name PalletForumPost (542) */
+  /** @name PalletForumPost (540) */
   export interface PalletForumPost extends Struct {
     readonly threadId: u64;
     readonly textHash: H256;
@@ -4816,7 +4817,7 @@ declare module '@polkadot/types/lookup' {
     readonly lastEdited: u32;
   }
 
-  /** @name PalletForumError (543) */
+  /** @name PalletForumError (541) */
   export interface PalletForumError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isOriginNotForumLead: boolean;
@@ -4848,12 +4849,12 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'OriginNotForumLead' | 'ForumUserIdNotMatchAccount' | 'ModeratorIdNotMatchAccount' | 'AccountDoesNotMatchThreadAuthor' | 'ThreadDoesNotExist' | 'ModeratorModerateOriginCategory' | 'ModeratorModerateDestinationCategory' | 'ThreadMoveInvalid' | 'ThreadNotBeingUpdated' | 'InsufficientBalanceForThreadCreation' | 'CannotDeleteThreadWithOutstandingPosts' | 'PostDoesNotExist' | 'AccountDoesNotMatchPostAuthor' | 'InsufficientBalanceForPost' | 'CategoryNotBeingUpdated' | 'AncestorCategoryImmutable' | 'MaxValidCategoryDepthExceeded' | 'CategoryDoesNotExist' | 'CategoryModeratorDoesNotExist' | 'CategoryNotEmptyThreads' | 'CategoryNotEmptyCategories' | 'ModeratorCantDeleteCategory' | 'ModeratorCantUpdateCategory' | 'MapSizeLimit' | 'PathLengthShouldBeGreaterThanZero' | 'MaxNumberOfStickiedThreadsExceeded';
   }
 
-  /** @name PalletConstitutionConstitutionInfo (544) */
+  /** @name PalletConstitutionConstitutionInfo (542) */
   export interface PalletConstitutionConstitutionInfo extends Struct {
     readonly textHash: H256;
   }
 
-  /** @name PalletBountyBountyRecord (545) */
+  /** @name PalletBountyBountyRecord (543) */
   export interface PalletBountyBountyRecord extends Struct {
     readonly creationParams: PalletBountyBountyParametersBoundedBTreeSet;
     readonly totalFunding: u128;
@@ -4862,7 +4863,7 @@ declare module '@polkadot/types/lookup' {
     readonly hasUnpaidOracleReward: bool;
   }
 
-  /** @name PalletBountyBountyParametersBoundedBTreeSet (547) */
+  /** @name PalletBountyBountyParametersBoundedBTreeSet (545) */
   export interface PalletBountyBountyParametersBoundedBTreeSet extends Struct {
     readonly oracle: PalletBountyBountyActor;
     readonly contractType: PalletBountyAssuranceContractTypeBoundedBTreeSet;
@@ -4873,7 +4874,7 @@ declare module '@polkadot/types/lookup' {
     readonly fundingType: PalletBountyFundingType;
   }
 
-  /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (548) */
+  /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (546) */
   export interface PalletBountyAssuranceContractTypeBoundedBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -4881,7 +4882,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletBountyBountyMilestone (549) */
+  /** @name PalletBountyBountyMilestone (547) */
   export interface PalletBountyBountyMilestone extends Enum {
     readonly isCreated: boolean;
     readonly asCreated: {
@@ -4898,13 +4899,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Created' | 'BountyMaxFundingReached' | 'WorkSubmitted' | 'Terminated' | 'JudgmentSubmitted';
   }
 
-  /** @name PalletBountyContribution (551) */
+  /** @name PalletBountyContribution (549) */
   export interface PalletBountyContribution extends Struct {
     readonly amount: u128;
     readonly funderStateBloatBondAmount: u128;
   }
 
-  /** @name PalletBountyEntryRecord (552) */
+  /** @name PalletBountyEntryRecord (550) */
   export interface PalletBountyEntryRecord extends Struct {
     readonly memberId: u64;
     readonly stakingAccountId: AccountId32;
@@ -4912,7 +4913,7 @@ declare module '@polkadot/types/lookup' {
     readonly workSubmitted: bool;
   }
 
-  /** @name PalletBountyError (553) */
+  /** @name PalletBountyError (551) */
   export interface PalletBountyError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isMinFundingAmountCannotBeGreaterThanMaxAmount: boolean;
@@ -4952,7 +4953,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'MinFundingAmountCannotBeGreaterThanMaxAmount' | 'BountyDoesntExist' | 'SwitchOracleOriginIsRoot' | 'InvalidStageUnexpectedFunding' | 'InvalidStageUnexpectedNoFundingContributed' | 'InvalidStageUnexpectedCancelled' | 'InvalidStageUnexpectedWorkSubmission' | 'InvalidStageUnexpectedJudgment' | 'InvalidStageUnexpectedSuccessfulBountyWithdrawal' | 'InvalidStageUnexpectedFailedBountyWithdrawal' | 'InsufficientBalanceForBounty' | 'NoBountyContributionFound' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'WorkEntryDoesntExist' | 'CherryLessThenMinimumAllowed' | 'CannotSubmitWorkToClosedContractBounty' | 'ClosedContractMemberListIsEmpty' | 'ClosedContractMemberListIsTooLarge' | 'ClosedContractMemberNotFound' | 'InvalidOracleMemberId' | 'InvalidStakingAccountForMember' | 'ZeroWinnerReward' | 'TotalRewardShouldBeEqualToTotalFunding' | 'EntrantStakeIsLessThanMininum' | 'FundingAmountCannotBeZero' | 'FundingPeriodCannotBeZero' | 'WinnerShouldHasWorkSubmission' | 'InvalidContributorActorSpecified' | 'InvalidOracleActorSpecified' | 'InvalidEntrantWorkerSpecified' | 'InvalidCreatorActorSpecified' | 'WorkEntryDoesntBelongToWorker' | 'OracleRewardAlreadyWithdrawn';
   }
 
-  /** @name PalletContentVideoRecord (555) */
+  /** @name PalletContentVideoRecord (553) */
   export interface PalletContentVideoRecord extends Struct {
     readonly inChannel: u64;
     readonly nftStatus: Option<PalletContentNftTypesOwnedNft>;
@@ -4960,7 +4961,7 @@ declare module '@polkadot/types/lookup' {
     readonly videoStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
   }
 
-  /** @name PalletContentNftTypesOwnedNft (556) */
+  /** @name PalletContentNftTypesOwnedNft (554) */
   export interface PalletContentNftTypesOwnedNft extends Struct {
     readonly owner: PalletContentNftTypesNftOwner;
     readonly transactionalStatus: PalletContentNftTypesTransactionalStatusRecord;
@@ -4968,7 +4969,7 @@ declare module '@polkadot/types/lookup' {
     readonly openAuctionsNonce: u64;
   }
 
-  /** @name PalletContentNftTypesTransactionalStatusRecord (557) */
+  /** @name PalletContentNftTypesTransactionalStatusRecord (555) */
   export interface PalletContentNftTypesTransactionalStatusRecord extends Enum {
     readonly isIdle: boolean;
     readonly isInitiatedOfferToMember: boolean;
@@ -4982,7 +4983,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Idle' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction' | 'BuyNow';
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionRecord (558) */
+  /** @name PalletContentNftTypesEnglishAuctionRecord (556) */
   export interface PalletContentNftTypesEnglishAuctionRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -4994,13 +4995,13 @@ declare module '@polkadot/types/lookup' {
     readonly topBid: Option<PalletContentNftTypesEnglishAuctionBid>;
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionBid (561) */
+  /** @name PalletContentNftTypesEnglishAuctionBid (559) */
   export interface PalletContentNftTypesEnglishAuctionBid extends Struct {
     readonly amount: u128;
     readonly bidderId: u64;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionRecord (562) */
+  /** @name PalletContentNftTypesOpenAuctionRecord (560) */
   export interface PalletContentNftTypesOpenAuctionRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -5010,7 +5011,7 @@ declare module '@polkadot/types/lookup' {
     readonly start: u32;
   }
 
-  /** @name PalletContentNftTypesNftOwner (563) */
+  /** @name PalletContentNftTypesNftOwner (561) */
   export interface PalletContentNftTypesNftOwner extends Enum {
     readonly isChannelOwner: boolean;
     readonly isMember: boolean;
@@ -5018,21 +5019,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ChannelOwner' | 'Member';
   }
 
-  /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (566) */
+  /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (564) */
   export interface PalletContentPermissionsCuratorGroupCuratorGroupRecord extends Struct {
     readonly curators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly active: bool;
     readonly permissionsByLevel: BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionBidRecord (573) */
+  /** @name PalletContentNftTypesOpenAuctionBidRecord (571) */
   export interface PalletContentNftTypesOpenAuctionBidRecord extends Struct {
     readonly amount: u128;
     readonly madeAtBlock: u32;
     readonly auctionId: u64;
   }
 
-  /** @name PalletContentErrorsError (574) */
+  /** @name PalletContentErrorsError (572) */
   export interface PalletContentErrorsError extends Enum {
     readonly isChannelStateBloatBondChanged: boolean;
     readonly isVideoStateBloatBondChanged: boolean;
@@ -5162,10 +5163,11 @@ declare module '@polkadot/types/lookup' {
     readonly isPatronageCanOnlyBeClaimedForMemberOwnedChannels: boolean;
     readonly isChannelTransfersBlockedDuringRevenueSplits: boolean;
     readonly isChannelTransfersBlockedDuringTokenSales: boolean;
-    readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales';
+    readonly isChannelTransfersBlockedDuringActiveAmm: boolean;
+    readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales' | 'ChannelTransfersBlockedDuringActiveAmm';
   }
 
-  /** @name PalletStorageBagRecord (575) */
+  /** @name PalletStorageBagRecord (573) */
   export interface PalletStorageBagRecord extends Struct {
     readonly storedBy: BTreeSet<u64>;
     readonly distributedBy: BTreeSet<PalletStorageDistributionBucketIdRecord>;
@@ -5173,7 +5175,7 @@ declare module '@polkadot/types/lookup' {
     readonly objectsNumber: u64;
   }
 
-  /** @name PalletStorageStorageBucketRecord (578) */
+  /** @name PalletStorageStorageBucketRecord (576) */
   export interface PalletStorageStorageBucketRecord extends Struct {
     readonly operatorStatus: PalletStorageStorageBucketOperatorStatus;
     readonly acceptingNewBags: bool;
@@ -5181,7 +5183,7 @@ declare module '@polkadot/types/lookup' {
     readonly assignedBags: u64;
   }
 
-  /** @name PalletStorageStorageBucketOperatorStatus (579) */
+  /** @name PalletStorageStorageBucketOperatorStatus (577) */
   export interface PalletStorageStorageBucketOperatorStatus extends Enum {
     readonly isMissing: boolean;
     readonly isInvitedStorageWorker: boolean;
@@ -5191,13 +5193,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Missing' | 'InvitedStorageWorker' | 'StorageWorker';
   }
 
-  /** @name PalletStorageDynamicBagCreationPolicy (581) */
+  /** @name PalletStorageDynamicBagCreationPolicy (579) */
   export interface PalletStorageDynamicBagCreationPolicy extends Struct {
     readonly numberOfStorageBuckets: u32;
     readonly families: BTreeMap<u64, u32>;
   }
 
-  /** @name PalletStorageDataObject (584) */
+  /** @name PalletStorageDataObject (582) */
   export interface PalletStorageDataObject extends Struct {
     readonly accepted: bool;
     readonly stateBloatBond: PalletCommonBloatBondRepayableBloatBond;
@@ -5205,12 +5207,12 @@ declare module '@polkadot/types/lookup' {
     readonly ipfsContentId: Bytes;
   }
 
-  /** @name PalletStorageDistributionBucketFamilyRecord (585) */
+  /** @name PalletStorageDistributionBucketFamilyRecord (583) */
   export interface PalletStorageDistributionBucketFamilyRecord extends Struct {
     readonly nextDistributionBucketIndex: u64;
   }
 
-  /** @name PalletStorageDistributionBucketRecord (586) */
+  /** @name PalletStorageDistributionBucketRecord (584) */
   export interface PalletStorageDistributionBucketRecord extends Struct {
     readonly acceptingNewBags: bool;
     readonly distributing: bool;
@@ -5219,7 +5221,7 @@ declare module '@polkadot/types/lookup' {
     readonly assignedBags: u64;
   }
 
-  /** @name PalletStorageError (589) */
+  /** @name PalletStorageError (587) */
   export interface PalletStorageError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isInvalidCidLength: boolean;
@@ -5289,7 +5291,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'InvalidCidLength' | 'NoObjectsOnUpload' | 'StorageBucketDoesntExist' | 'StorageBucketIsNotBoundToBag' | 'StorageBucketIsBoundToBag' | 'NoStorageBucketInvitation' | 'StorageProviderAlreadySet' | 'StorageProviderMustBeSet' | 'DifferentStorageProviderInvited' | 'InvitedStorageProvider' | 'StorageBucketIdCollectionsAreEmpty' | 'StorageBucketsNumberViolatesDynamicBagCreationPolicy' | 'DistributionBucketsViolatesDynamicBagCreationPolicy' | 'EmptyContentId' | 'ZeroObjectSize' | 'InvalidStateBloatBondSourceAccount' | 'InvalidStorageProvider' | 'InsufficientBalance' | 'DataObjectDoesntExist' | 'UploadingBlocked' | 'DataObjectIdCollectionIsEmpty' | 'SourceAndDestinationBagsAreEqual' | 'DataObjectBlacklisted' | 'BlacklistSizeLimitExceeded' | 'VoucherMaxObjectSizeLimitExceeded' | 'VoucherMaxObjectNumberLimitExceeded' | 'StorageBucketObjectNumberLimitReached' | 'StorageBucketObjectSizeLimitReached' | 'InsufficientTreasuryBalance' | 'CannotDeleteNonEmptyStorageBucket' | 'DataObjectIdParamsAreEmpty' | 'StorageBucketsPerBagLimitTooLow' | 'StorageBucketsPerBagLimitTooHigh' | 'StorageBucketPerBagLimitExceeded' | 'StorageBucketDoesntAcceptNewBags' | 'DynamicBagExists' | 'DynamicBagDoesntExist' | 'StorageProviderOperatorDoesntExist' | 'DataSizeFeeChanged' | 'DataObjectStateBloatBondChanged' | 'CannotDeleteNonEmptyDynamicBag' | 'MaxDistributionBucketFamilyNumberLimitExceeded' | 'DistributionBucketFamilyDoesntExist' | 'DistributionBucketDoesntExist' | 'DistributionBucketIdCollectionsAreEmpty' | 'DistributionBucketDoesntAcceptNewBags' | 'MaxDistributionBucketNumberPerBagLimitExceeded' | 'DistributionBucketIsNotBoundToBag' | 'DistributionBucketIsBoundToBag' | 'DistributionBucketsPerBagLimitTooLow' | 'DistributionBucketsPerBagLimitTooHigh' | 'DistributionProviderOperatorDoesntExist' | 'DistributionProviderOperatorAlreadyInvited' | 'DistributionProviderOperatorSet' | 'NoDistributionBucketInvitation' | 'MustBeDistributionProviderOperatorForBucket' | 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached' | 'MaxNumberOfOperatorsPerDistributionBucketReached' | 'DistributionFamilyBoundToBagCreationPolicy' | 'MaxDataObjectSizeExceeded' | 'InvalidTransactorAccount' | 'NumberOfStorageBucketsOutsideOfAllowedContraints' | 'NumberOfDistributionBucketsOutsideOfAllowedContraints' | 'CallDisabled';
   }
 
-  /** @name PalletProjectTokenAccountData (590) */
+  /** @name PalletProjectTokenAccountData (588) */
   export interface PalletProjectTokenAccountData extends Struct {
     readonly vestingSchedules: BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>;
     readonly amount: u128;
@@ -5299,13 +5301,13 @@ declare module '@polkadot/types/lookup' {
     readonly lastSaleTotalPurchasedAmount: Option<ITuple<[u32, u128]>>;
   }
 
-  /** @name PalletProjectTokenStakingStatus (591) */
+  /** @name PalletProjectTokenStakingStatus (589) */
   export interface PalletProjectTokenStakingStatus extends Struct {
     readonly splitId: u32;
     readonly amount: u128;
   }
 
-  /** @name PalletProjectTokenVestingSchedule (593) */
+  /** @name PalletProjectTokenVestingSchedule (591) */
   export interface PalletProjectTokenVestingSchedule extends Struct {
     readonly linearVestingStartBlock: u32;
     readonly linearVestingDuration: u32;
@@ -5314,7 +5316,7 @@ declare module '@polkadot/types/lookup' {
     readonly burnedAmount: u128;
   }
 
-  /** @name PalletProjectTokenTokenData (600) */
+  /** @name PalletProjectTokenTokenData (598) */
   export interface PalletProjectTokenTokenData extends Struct {
     readonly totalSupply: u128;
     readonly tokensIssued: u128;
@@ -5327,9 +5329,10 @@ declare module '@polkadot/types/lookup' {
     readonly revenueSplitRate: Permill;
     readonly revenueSplit: PalletProjectTokenRevenueSplitState;
     readonly nextRevenueSplitId: u32;
+    readonly ammCurve: Option<PalletProjectTokenAmmCurve>;
   }
 
-  /** @name PalletProjectTokenRevenueSplitState (601) */
+  /** @name PalletProjectTokenRevenueSplitState (599) */
   export interface PalletProjectTokenRevenueSplitState extends Enum {
     readonly isInactive: boolean;
     readonly isActive: boolean;
@@ -5337,38 +5340,38 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Inactive' | 'Active';
   }
 
-  /** @name PalletProjectTokenRevenueSplitInfo (602) */
+  /** @name PalletProjectTokenRevenueSplitInfo (600) */
   export interface PalletProjectTokenRevenueSplitInfo extends Struct {
     readonly allocation: u128;
     readonly timeline: PalletProjectTokenTimeline;
     readonly dividendsClaimed: u128;
   }
 
-  /** @name PalletProjectTokenTimeline (603) */
+  /** @name PalletProjectTokenTimeline (601) */
   export interface PalletProjectTokenTimeline extends Struct {
     readonly start: u32;
     readonly duration: u32;
   }
 
-  /** @name PalletProjectTokenPatronageData (605) */
+  /** @name PalletProjectTokenPatronageData (603) */
   export interface PalletProjectTokenPatronageData extends Struct {
-    readonly rate: Perquintill;
+    readonly rate: Permill;
     readonly unclaimedPatronageTallyAmount: u128;
     readonly lastUnclaimedPatronageTallyBlock: u32;
   }
 
-  /** @name PalletProjectTokenErrorsError (607) */
+  /** @name PalletProjectTokenErrorsError (605) */
   export interface PalletProjectTokenErrorsError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isInsufficientTransferrableBalance: boolean;
     readonly isTokenDoesNotExist: boolean;
     readonly isAccountInformationDoesNotExist: boolean;
+    readonly isTransferDestinationMemberDoesNotExist: boolean;
     readonly isMerkleProofVerificationFailure: boolean;
-    readonly isTargetPatronageRateIsHigherThanCurrentRate: boolean;
     readonly isTokenSymbolAlreadyInUse: boolean;
     readonly isInitialAllocationToNonExistingMember: boolean;
     readonly isAccountAlreadyExists: boolean;
-    readonly isTransferDestinationMemberDoesNotExist: boolean;
+    readonly isTooManyTransferOutputs: boolean;
     readonly isTokenIssuanceNotInIdleState: boolean;
     readonly isInsufficientJoyBalance: boolean;
     readonly isJoyTransferSubjectToDusting: boolean;
@@ -5393,6 +5396,7 @@ declare module '@polkadot/types/lookup' {
     readonly isSaleCapPerMemberIsZero: boolean;
     readonly isSaleUnitPriceIsZero: boolean;
     readonly isSalePurchaseAmountIsZero: boolean;
+    readonly isCannotInitSaleIfAmmIsActive: boolean;
     readonly isRevenueSplitTimeToStartTooShort: boolean;
     readonly isRevenueSplitDurationTooShort: boolean;
     readonly isRevenueSplitAlreadyActiveForToken: boolean;
@@ -5408,10 +5412,19 @@ declare module '@polkadot/types/lookup' {
     readonly isRevenueSplitRateIsZero: boolean;
     readonly isBurnAmountIsZero: boolean;
     readonly isBurnAmountGreaterThanAccountTokensAmount: boolean;
-    readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'MerkleProofVerificationFailure' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TransferDestinationMemberDoesNotExist' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount';
+    readonly isNotInAmmState: boolean;
+    readonly isInvalidCurveParameters: boolean;
+    readonly isDeadlineExpired: boolean;
+    readonly isSlippageToleranceExceeded: boolean;
+    readonly isInsufficientTokenBalance: boolean;
+    readonly isOutstandingAmmProvidedSupplyTooLarge: boolean;
+    readonly isCurveSlopeParametersTooLow: boolean;
+    readonly isTargetPatronageRateIsHigherThanCurrentRate: boolean;
+    readonly isYearlyPatronageRateLimitExceeded: boolean;
+    readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'TransferDestinationMemberDoesNotExist' | 'MerkleProofVerificationFailure' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TooManyTransferOutputs' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'CannotInitSaleIfAmmIsActive' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount' | 'NotInAmmState' | 'InvalidCurveParameters' | 'DeadlineExpired' | 'SlippageToleranceExceeded' | 'InsufficientTokenBalance' | 'OutstandingAmmProvidedSupplyTooLarge' | 'CurveSlopeParametersTooLow' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'YearlyPatronageRateLimitExceeded';
   }
 
-  /** @name PalletProposalsEngineProposal (608) */
+  /** @name PalletProposalsEngineProposal (606) */
   export interface PalletProposalsEngineProposal extends Struct {
     readonly parameters: PalletProposalsEngineProposalParameters;
     readonly proposerId: u64;
@@ -5423,7 +5436,7 @@ declare module '@polkadot/types/lookup' {
     readonly stakingAccountId: Option<AccountId32>;
   }
 
-  /** @name PalletProposalsEngineProposalParameters (609) */
+  /** @name PalletProposalsEngineProposalParameters (607) */
   export interface PalletProposalsEngineProposalParameters extends Struct {
     readonly votingPeriod: u32;
     readonly gracePeriod: u32;
@@ -5435,7 +5448,7 @@ declare module '@polkadot/types/lookup' {
     readonly constitutionality: u32;
   }
 
-  /** @name PalletProposalsEngineVotingResults (610) */
+  /** @name PalletProposalsEngineVotingResults (608) */
   export interface PalletProposalsEngineVotingResults extends Struct {
     readonly abstentions: u32;
     readonly approvals: u32;
@@ -5443,7 +5456,7 @@ declare module '@polkadot/types/lookup' {
     readonly slashes: u32;
   }
 
-  /** @name PalletProposalsEngineError (613) */
+  /** @name PalletProposalsEngineError (611) */
   export interface PalletProposalsEngineError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isEmptyTitleProvided: boolean;
@@ -5471,14 +5484,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'EmptyTitleProvided' | 'EmptyDescriptionProvided' | 'TitleIsTooLong' | 'DescriptionIsTooLong' | 'ProposalNotFound' | 'ProposalFinalized' | 'AlreadyVoted' | 'NotAuthor' | 'MaxActiveProposalNumberExceeded' | 'EmptyStake' | 'StakeShouldBeEmpty' | 'StakeDiffersFromRequired' | 'InvalidParameterApprovalThreshold' | 'InvalidParameterSlashingThreshold' | 'RequireRootOrigin' | 'ProposalHasVotes' | 'ZeroExactExecutionBlock' | 'InvalidExactExecutionBlock' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'InvalidStakingAccountForMember' | 'MaxDispatchableCallCodeSizeExceeded';
   }
 
-  /** @name PalletProposalsDiscussionDiscussionThread (614) */
+  /** @name PalletProposalsDiscussionDiscussionThread (612) */
   export interface PalletProposalsDiscussionDiscussionThread extends Struct {
     readonly activatedAt: u32;
     readonly authorId: u64;
     readonly mode: PalletProposalsDiscussionThreadModeBoundedBTreeSet;
   }
 
-  /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (616) */
+  /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (614) */
   export interface PalletProposalsDiscussionThreadModeBoundedBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -5486,14 +5499,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletProposalsDiscussionDiscussionPost (617) */
+  /** @name PalletProposalsDiscussionDiscussionPost (615) */
   export interface PalletProposalsDiscussionDiscussionPost extends Struct {
     readonly authorId: u64;
     readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
     readonly lastEdited: u32;
   }
 
-  /** @name PalletProposalsDiscussionError (618) */
+  /** @name PalletProposalsDiscussionError (616) */
   export interface PalletProposalsDiscussionError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isThreadDoesntExist: boolean;
@@ -5508,7 +5521,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'ThreadDoesntExist' | 'PostDoesntExist' | 'RequireRootOrigin' | 'CannotPostOnClosedThread' | 'NotAuthorOrCouncilor' | 'MaxWhiteListSizeExceeded' | 'WhitelistedMemberDoesNotExist' | 'InsufficientBalanceForPost' | 'CannotDeletePost';
   }
 
-  /** @name PalletProposalsCodexError (619) */
+  /** @name PalletProposalsCodexError (617) */
   export interface PalletProposalsCodexError extends Enum {
     readonly isSignalProposalIsEmpty: boolean;
     readonly isRuntimeProposalIsEmpty: boolean;
@@ -5536,10 +5549,11 @@ declare module '@polkadot/types/lookup' {
     readonly isInvalidLeadApplicationId: boolean;
     readonly isInvalidProposalId: boolean;
     readonly isArithmeticError: boolean;
-    readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError';
+    readonly isMaxYearlyPatronageRateCannotBeZero: boolean;
+    readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError' | 'MaxYearlyPatronageRateCannotBeZero';
   }
 
-  /** @name PalletWorkingGroupOpening (620) */
+  /** @name PalletWorkingGroupOpening (618) */
   export interface PalletWorkingGroupOpening extends Struct {
     readonly openingType: PalletWorkingGroupOpeningType;
     readonly created: u32;
@@ -5549,7 +5563,7 @@ declare module '@polkadot/types/lookup' {
     readonly creationStake: u128;
   }
 
-  /** @name PalletWorkingGroupJobApplication (621) */
+  /** @name PalletWorkingGroupJobApplication (619) */
   export interface PalletWorkingGroupJobApplication extends Struct {
     readonly roleAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -5559,7 +5573,7 @@ declare module '@polkadot/types/lookup' {
     readonly openingId: u64;
   }
 
-  /** @name PalletWorkingGroupGroupWorker (622) */
+  /** @name PalletWorkingGroupGroupWorker (620) */
   export interface PalletWorkingGroupGroupWorker extends Struct {
     readonly memberId: u64;
     readonly roleAccountId: AccountId32;
@@ -5572,7 +5586,7 @@ declare module '@polkadot/types/lookup' {
     readonly createdAt: u32;
   }
 
-  /** @name PalletWorkingGroupErrorsError (623) */
+  /** @name PalletWorkingGroupErrorsError (621) */
   export interface PalletWorkingGroupErrorsError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isStakeBalanceCannotBeZero: boolean;
@@ -5609,7 +5623,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'StakeBalanceCannotBeZero' | 'OpeningDoesNotExist' | 'CannotHireMultipleLeaders' | 'WorkerApplicationDoesNotExist' | 'MaxActiveWorkerNumberExceeded' | 'SuccessfulWorkerApplicationDoesNotExist' | 'CannotHireLeaderWhenLeaderExists' | 'IsNotLeadAccount' | 'CurrentLeadNotSet' | 'WorkerDoesNotExist' | 'InvalidMemberOrigin' | 'SignerIsNotWorkerRoleAccount' | 'BelowMinimumStakes' | 'InsufficientBalanceToCoverStake' | 'ApplicationStakeDoesntMatchOpening' | 'OriginIsNotApplicant' | 'WorkerIsLeaving' | 'CannotRewardWithZero' | 'InvalidStakingAccountForMember' | 'ConflictStakesOnAccount' | 'WorkerHasNoReward' | 'UnstakingPeriodLessThanMinimum' | 'CannotSpendZero' | 'InsufficientBudgetForSpending' | 'NoApplicationsProvided' | 'CannotDecreaseStakeDeltaGreaterThanStake' | 'ApplicationsNotForOpening' | 'WorkerStorageValueTooLong' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'InsufficientBalanceForTransfer';
   }
 
-  /** @name SpRuntimeMultiSignature (633) */
+  /** @name SpRuntimeMultiSignature (631) */
   export interface SpRuntimeMultiSignature extends Enum {
     readonly isEd25519: boolean;
     readonly asEd25519: SpCoreEd25519Signature;
@@ -5620,31 +5634,31 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Ed25519' | 'Sr25519' | 'Ecdsa';
   }
 
-  /** @name SpCoreEcdsaSignature (634) */
+  /** @name SpCoreEcdsaSignature (632) */
   export interface SpCoreEcdsaSignature extends U8aFixed {}
 
-  /** @name FrameSystemExtensionsCheckNonZeroSender (637) */
+  /** @name FrameSystemExtensionsCheckNonZeroSender (635) */
   export type FrameSystemExtensionsCheckNonZeroSender = Null;
 
-  /** @name FrameSystemExtensionsCheckSpecVersion (638) */
+  /** @name FrameSystemExtensionsCheckSpecVersion (636) */
   export type FrameSystemExtensionsCheckSpecVersion = Null;
 
-  /** @name FrameSystemExtensionsCheckTxVersion (639) */
+  /** @name FrameSystemExtensionsCheckTxVersion (637) */
   export type FrameSystemExtensionsCheckTxVersion = Null;
 
-  /** @name FrameSystemExtensionsCheckGenesis (640) */
+  /** @name FrameSystemExtensionsCheckGenesis (638) */
   export type FrameSystemExtensionsCheckGenesis = Null;
 
-  /** @name FrameSystemExtensionsCheckNonce (643) */
+  /** @name FrameSystemExtensionsCheckNonce (641) */
   export interface FrameSystemExtensionsCheckNonce extends Compact<u32> {}
 
-  /** @name FrameSystemExtensionsCheckWeight (644) */
+  /** @name FrameSystemExtensionsCheckWeight (642) */
   export type FrameSystemExtensionsCheckWeight = Null;
 
-  /** @name PalletTransactionPaymentChargeTransactionPayment (645) */
+  /** @name PalletTransactionPaymentChargeTransactionPayment (643) */
   export interface PalletTransactionPaymentChargeTransactionPayment extends Compact<u128> {}
 
-  /** @name JoystreamNodeRuntimeRuntime (646) */
+  /** @name JoystreamNodeRuntimeRuntime (644) */
   export type JoystreamNodeRuntimeRuntime = Null;
 
 } // declare module
