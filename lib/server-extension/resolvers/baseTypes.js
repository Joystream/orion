"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OwnedNftWhereInput = exports.VideosConnection = exports.VideoOrderByInput = exports.Membership = exports.VideoHero = exports.VideoCategory = exports.VideoWhereInput = exports.Video = exports.ChannelOrderByInput = exports.ChannelWhereInput = exports.OwnedNft = exports.Channel = void 0;
const type_graphql_1 = require("type-graphql");
const graphql_1 = require("graphql");
// We only need to define one field for each type, which matches with the autogenerated type's field
let Channel = class Channel {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], Channel.prototype, "id", void 0);
Channel = __decorate([
    (0, type_graphql_1.ObjectType)()
], Channel);
exports.Channel = Channel;
let OwnedNft = class OwnedNft {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], OwnedNft.prototype, "id", void 0);
OwnedNft = __decorate([
    (0, type_graphql_1.ObjectType)()
], OwnedNft);
exports.OwnedNft = OwnedNft;
exports.ChannelWhereInput = new graphql_1.GraphQLScalarType({
    name: 'ChannelWhereInput',
});
var ChannelOrderByInput;
(function (ChannelOrderByInput) {
    ChannelOrderByInput[ChannelOrderByInput["id_ASC"] = 0] = "id_ASC";
})(ChannelOrderByInput = exports.ChannelOrderByInput || (exports.ChannelOrderByInput = {}));
(0, type_graphql_1.registerEnumType)(ChannelOrderByInput, { name: 'ChannelOrderByInput' });
let Video = class Video {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], Video.prototype, "id", void 0);
Video = __decorate([
    (0, type_graphql_1.ObjectType)()
], Video);
exports.Video = Video;
exports.VideoWhereInput = new graphql_1.GraphQLScalarType({
    name: 'VideoWhereInput',
});
let VideoCategory = class VideoCategory {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], VideoCategory.prototype, "id", void 0);
VideoCategory = __decorate([
    (0, type_graphql_1.ObjectType)()
], VideoCategory);
exports.VideoCategory = VideoCategory;
let VideoHero = class VideoHero {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], VideoHero.prototype, "id", void 0);
VideoHero = __decorate([
    (0, type_graphql_1.ObjectType)()
], VideoHero);
exports.VideoHero = VideoHero;
let Membership = class Membership {
};
__decorate([
    (0, type_graphql_1.Field)(() => String, { nullable: false }),
    __metadata("design:type", String)
], Membership.prototype, "id", void 0);
Membership = __decorate([
    (0, type_graphql_1.ObjectType)()
], Membership);
exports.Membership = Membership;
var VideoOrderByInput;
(function (VideoOrderByInput) {
    VideoOrderByInput["id_ASC"] = "id_ASC";
    VideoOrderByInput["viewsNum_ASC"] = "viewsNum_ASC";
    VideoOrderByInput["viewsNum_DESC"] = "viewsNum_DESC";
})(VideoOrderByInput = exports.VideoOrderByInput || (exports.VideoOrderByInput = {}));
(0, type_graphql_1.registerEnumType)(VideoOrderByInput, { name: 'VideoOrderByInput' });
let VideosConnection = class VideosConnection {
};
__decorate([
    (0, type_graphql_1.Field)(() => type_graphql_1.Int, { nullable: false }),
    __metadata("design:type", Number)
], VideosConnection.prototype, "totalCount", void 0);
VideosConnection = __decorate([
    (0, type_graphql_1.ObjectType)()
], VideosConnection);
exports.VideosConnection = VideosConnection;
exports.OwnedNftWhereInput = new graphql_1.GraphQLScalarType({
    name: 'OwnedNftWhereInput',
});
//# sourceMappingURL=baseTypes.js.map