/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/video-consumed': {
    /** @description Dispatches video consumed event to the recommendation service. */
    post: operations['videoConsumed']
  }
  '/video-portion': {
    /** @description Dispatches video portion event to the recommendation service. */
    post: operations['videoPortion']
  }
  '/video-clicked': {
    /** @description Dispatches video click event to the recommendation service. */
    post: operations['videoClicked']
  }
  '/channel-clicked': {
    /** @description Dispatches channel click event to the recommendation service. */
    post: operations['channelClicked']
  }
  '/rate-video': {
    /** @description Dispatches video rate event to the recommendation service. */
    post: operations['rateVideo']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ItemRateInteractionRequestData: {
      itemId?: string
      rating?: number
      recommId?: string
    }
    ItemClickInteractionRequestData: {
      itemId?: string
      duration?: number
      recommId?: string
    }
    ItemConsumedInteractionRequestData: {
      itemId?: string
      recommId?: string
    }
    ItemPortionInteractionRequestData: {
      itemId?: string
      portion?: number
      recommId?: string
    }
    GenericErrorResponseData: {
      message?: string
      errors?: string[]
    }
    GenericOkResponseData: {
      success: boolean
    }
  }
  responses: {
    /** @description Invalid request data */
    GenericBadRequestResponse: {
      content: {
        'application/json': components['schemas']['GenericErrorResponseData']
      }
    }
    /** @description Internal server error */
    GenericInternalServerErrorResponse: {
      content: {
        'application/json': components['schemas']['GenericErrorResponseData']
      }
    }
    /** @description Ok */
    GenericOkResponse: {
      content: {
        'application/json': components['schemas']['GenericOkResponseData']
      }
    }
    /** @description Access token (session id) is missing or invalid. */
    GenericUnauthorizedResponse: {
      content: {
        'application/json': components['schemas']['GenericErrorResponseData']
      }
    }
    /** @description Too many requests sent within a given timeframe. */
    GenericTooManyRequestsResponse: {
      content: {
        'application/json': components['schemas']['GenericErrorResponseData']
      }
    }
  }
  parameters: never
  requestBodies: {
    ItemRateInteractionBody?: {
      content: {
        'application/json': components['schemas']['ItemRateInteractionRequestData']
      }
    }
    ItemClickInteractionBody?: {
      content: {
        'application/json': components['schemas']['ItemClickInteractionRequestData']
      }
    }
    ItemConsumedInteractionBody?: {
      content: {
        'application/json': components['schemas']['ItemConsumedInteractionRequestData']
      }
    }
    ItemPortionInteractionBody?: {
      content: {
        'application/json': components['schemas']['ItemPortionInteractionRequestData']
      }
    }
  }
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  /** @description Dispatches video consumed event to the recommendation service. */
  videoConsumed: {
    requestBody: components['requestBodies']['ItemConsumedInteractionBody']
    responses: {
      200: components['responses']['GenericOkResponse']
      400: components['responses']['GenericBadRequestResponse']
      401: components['responses']['GenericUnauthorizedResponse']
      429: components['responses']['GenericTooManyRequestsResponse']
      default: components['responses']['GenericInternalServerErrorResponse']
    }
  }
  /** @description Dispatches video portion event to the recommendation service. */
  videoPortion: {
    requestBody: components['requestBodies']['ItemPortionInteractionBody']
    responses: {
      200: components['responses']['GenericOkResponse']
      400: components['responses']['GenericBadRequestResponse']
      401: components['responses']['GenericUnauthorizedResponse']
      429: components['responses']['GenericTooManyRequestsResponse']
      default: components['responses']['GenericInternalServerErrorResponse']
    }
  }
  /** @description Dispatches video click event to the recommendation service. */
  videoClicked: {
    requestBody: components['requestBodies']['ItemClickInteractionBody']
    responses: {
      200: components['responses']['GenericOkResponse']
      400: components['responses']['GenericBadRequestResponse']
      401: components['responses']['GenericUnauthorizedResponse']
      429: components['responses']['GenericTooManyRequestsResponse']
      default: components['responses']['GenericInternalServerErrorResponse']
    }
  }
  /** @description Dispatches channel click event to the recommendation service. */
  channelClicked: {
    requestBody: components['requestBodies']['ItemClickInteractionBody']
    responses: {
      200: components['responses']['GenericOkResponse']
      400: components['responses']['GenericBadRequestResponse']
      401: components['responses']['GenericUnauthorizedResponse']
      429: components['responses']['GenericTooManyRequestsResponse']
      default: components['responses']['GenericInternalServerErrorResponse']
    }
  }
  /** @description Dispatches video rate event to the recommendation service. */
  rateVideo: {
    requestBody: components['requestBodies']['ItemRateInteractionBody']
    responses: {
      200: components['responses']['GenericOkResponse']
      400: components['responses']['GenericBadRequestResponse']
      401: components['responses']['GenericUnauthorizedResponse']
      429: components['responses']['GenericTooManyRequestsResponse']
      default: components['responses']['GenericInternalServerErrorResponse']
    }
  }
}
