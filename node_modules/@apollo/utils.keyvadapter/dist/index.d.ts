import type { KeyValueCache, KeyValueCacheSetOptions } from "@apollo/utils.keyvaluecache";
import Keyv from "keyv";
interface KeyvAdapterOptions {
    disableBatchReads?: boolean;
}
export declare class KeyvAdapter<V = string, O extends Record<string, any> = Record<string, unknown>> implements KeyValueCache<V> {
    private readonly keyv;
    private readonly dataLoader;
    constructor(keyv?: Keyv<V, O>, options?: KeyvAdapterOptions);
    get(key: string): Promise<V | undefined>;
    set(key: string, value: V, opts?: KeyValueCacheSetOptions): Promise<void>;
    delete(key: string): Promise<boolean>;
}
export {};
//# sourceMappingURL=index.d.ts.map