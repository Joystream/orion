// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { u8aToU8a } from "../u8a/toU8a.js";
import { isHex } from "./hex.js";
import { isString } from "./string.js";
/** @internal */

function isAsciiStr(str) {
  const count = str.length;

  for (let i = 0; i < count; i++) {
    const b = str.charCodeAt(i); // check is inlined here, it is faster than making a call

    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {
      return false;
    }
  }

  return true;
}
/** @internal */


function isAsciiU8a(u8a) {
  const count = u8a.length;

  for (let i = 0; i < count; i++) {
    const b = u8a[i]; // check is inlined here, it is faster than making a call

    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {
      return false;
    }
  }

  return true;
}
/**
 * @name isAscii
 * @summary Tests if the input is printable ASCII
 * @description
 * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters
 */


export function isAscii(value) {
  return isString(value) && !isHex(value) ? isAsciiStr(value) : value ? isAsciiU8a(u8aToU8a(value)) : false;
}