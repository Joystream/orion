import { metaToObject } from '@joystream/metadata-protobuf/utils';
import { createType } from '@joystream/types';
import { u8aToHex, stringToHex } from '@polkadot/util';
export function metadataToBytes(metaClass, obj) {
    return createType('Bytes', '0x' + Buffer.from(metaClass.encode(obj).finish()).toString('hex'));
}
export function metadataFromBytes(metaClass, bytes) {
    return metaToObject(metaClass, metaClass.decode(bytes.toU8a(true)));
}
export function asValidatedMetadata(metaClass, anyObject) {
    const error = metaClass.verify(anyObject);
    if (error) {
        throw new Error(`Invalid metadata: ${error}`);
    }
    return { ...anyObject };
}
// Return hex commitment for any app action
export function generateAppActionCommitment(nonce, creatorId, actionType, creatorType, assets, rawAction, rawAppActionMetadata) {
    const rawCommitment = [
        nonce,
        creatorId,
        actionType,
        creatorType,
        u8aToHex(assets),
        u8aToHex(rawAction),
        u8aToHex(rawAppActionMetadata),
    ];
    return stringToHex(JSON.stringify(rawCommitment));
}
