"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateAppActionCommitment = exports.asValidatedMetadata = exports.metadataFromBytes = exports.metadataToBytes = void 0;
const utils_1 = require("@joystream/metadata-protobuf/utils");
const types_1 = require("@joystream/types");
const util_1 = require("@polkadot/util");
function metadataToBytes(metaClass, obj) {
    return (0, types_1.createType)('Bytes', '0x' + Buffer.from(metaClass.encode(obj).finish()).toString('hex'));
}
exports.metadataToBytes = metadataToBytes;
function metadataFromBytes(metaClass, bytes) {
    return (0, utils_1.metaToObject)(metaClass, metaClass.decode(bytes.toU8a(true)));
}
exports.metadataFromBytes = metadataFromBytes;
function asValidatedMetadata(metaClass, anyObject) {
    const error = metaClass.verify(anyObject);
    if (error) {
        throw new Error(`Invalid metadata: ${error}`);
    }
    return Object.assign({}, anyObject);
}
exports.asValidatedMetadata = asValidatedMetadata;
// Return hex commitment for any app action
function generateAppActionCommitment(nonce, creatorId, actionType, creatorType, assets, rawAction, rawAppActionMetadata) {
    const rawCommitment = [
        nonce,
        creatorId,
        actionType,
        creatorType,
        (0, util_1.u8aToHex)(assets),
        (0, util_1.u8aToHex)(rawAction),
        (0, util_1.u8aToHex)(rawAppActionMetadata),
    ];
    return (0, util_1.stringToHex)(JSON.stringify(rawCommitment));
}
exports.generateAppActionCommitment = generateAppActionCommitment;
