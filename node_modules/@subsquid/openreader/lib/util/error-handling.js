"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonErrorThrown = exports.ensureError = exports.addErrorContext = exports.withErrorContext = exports.logGraphQLError = void 0;
const logger_1 = require("@subsquid/logger");
const graphql_1 = require("graphql");
function logGraphQLError(log, err, level = logger_1.LogLevel.ERROR) {
    if (log.level > level)
        return;
    let msg = (0, graphql_1.printError)(err) + '\n';
    log.write(level, {
        graphqlOriginalError: err.originalError,
        graphqlPath: err.path?.join('.'),
        graphqlQuery: err.source?.body,
    }, msg);
}
exports.logGraphQLError = logGraphQLError;
function withErrorContext(ctx) {
    return function (err) {
        throw addErrorContext(err, ctx);
    };
}
exports.withErrorContext = withErrorContext;
function addErrorContext(error, ctx) {
    let e = ensureError(error);
    Object.assign(e, ctx);
    return e;
}
exports.addErrorContext = addErrorContext;
function ensureError(err) {
    if (err instanceof Error)
        return err;
    return new NonErrorThrown(err);
}
exports.ensureError = ensureError;
class NonErrorThrown extends Error {
    constructor(value) {
        super('Non error object thrown');
        this.value = value;
    }
}
exports.NonErrorThrown = NonErrorThrown;
//# sourceMappingURL=error-handling.js.map