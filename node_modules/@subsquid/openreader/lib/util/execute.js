"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executeWithLimit = void 0;
const graphql_1 = require("graphql");
const execute_1 = require("graphql/execution/execute");
function executeWithLimit(maxQueries, args) {
    (0, execute_1.assertValidExecutionArguments)(args.schema, args.document, args.variableValues);
    let xtx = (0, execute_1.buildExecutionContext)(args.schema, args.document, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver, args.typeResolver);
    if (Array.isArray(xtx)) {
        return { errors: xtx };
    }
    let etx = xtx;
    if (etx.operation.operation == 'query') {
        let query = (0, graphql_1.getOperationRootType)(etx.schema, etx.operation);
        let fields = (0, execute_1.collectFields)(etx, query, etx.operation.selectionSet, Object.create(null), Object.create(null));
        let fieldsCount = Object.keys(fields).length;
        if (fieldsCount > maxQueries) {
            return {
                errors: [
                    new graphql_1.GraphQLError(`only ${maxQueries} root query fields allowed, but got ${fieldsCount}`)
                ]
            };
        }
    }
    return (0, execute_1.execute)(args);
}
exports.executeWithLimit = executeWithLimit;
//# sourceMappingURL=execute.js.map