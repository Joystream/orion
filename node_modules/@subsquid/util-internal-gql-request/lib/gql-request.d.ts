export interface GraphqlRequestRetryConfig {
    log?: (err: Error, numberOfFailures: number, backoffMS: number) => void;
    maxCount?: number;
}
export interface GraphqlRequest {
    headers?: Partial<Record<string, string>>;
    url: string;
    query: string;
    method?: 'GET' | 'POST';
    retry?: boolean | GraphqlRequestRetryConfig;
    timeout?: number;
}
export declare function graphqlRequest<T>(req: GraphqlRequest): Promise<T>;
export declare class GqlHttpError extends Error {
    readonly status: number;
    readonly body?: string | undefined;
    constructor(status: number, body?: string | undefined);
}
export interface GraphqlError {
    message: string;
    path?: (string | number)[];
}
export declare class GqlResponseError extends Error {
    readonly errors: GraphqlError[];
    constructor(errors: GraphqlError[]);
}
//# sourceMappingURL=gql-request.d.ts.map