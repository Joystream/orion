"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_internal_1 = require("@subsquid/util-internal");
const commander_1 = require("commander");
const chains_1 = require("../chains");
(0, util_internal_1.runProgram)(async () => {
    let program = new commander_1.Command();
    program.description(`Display list of available archives`);
    program.addOption(new commander_1.Option(`-t --type <type>`, `Network type`).choices([`evm`, `substrate`]));
    program.parse();
    let opts = program.opts();
    let text;
    if (opts.type == null) {
        console.log(getSubstrateArchives() + `\n\n` + getEvmArchives());
    }
    else {
        switch (opts.type) {
            case 'evm':
                console.log(getEvmArchives());
                break;
            case 'substrate':
                console.log(getSubstrateArchives());
                break;
        }
    }
});
function getEvmArchives() {
    let res = [];
    res.push(`EVM archives:`);
    for (let archive of chains_1.knownArchivesEVM) {
        res.push(` - ` + archive);
    }
    return res.join('\n');
}
function getSubstrateArchives() {
    let res = [];
    res.push(`Substrate archives:`);
    for (let archive of chains_1.knownArchivesSubstrate) {
        res.push(` - ` + archive);
    }
    return res.join('\n');
}
//# sourceMappingURL=list.js.map