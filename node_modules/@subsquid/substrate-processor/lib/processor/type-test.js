"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const batchProcessor_1 = require("./batchProcessor");
const db = {};
function getItem(cb) {
    return async function (ctx) {
    };
}
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvent('*')
    .run(db, getItem(item => {
    if (item.kind == 'event') {
        console.log(item.event.args);
        console.log(item.event.call?.parent);
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addCall('*')
    .run(db, getItem(item => {
    if (item.kind == 'call') {
        console.log(item.call.origin);
        console.log(item.extrinsic.fee);
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvent('Balances.Transfer', { data: { event: { extrinsic: { signature: true } } } })
    .run(db, getItem(item => {
    if (item.name == 'Balances.Transfer') {
        console.log(item.event.extrinsic?.signature);
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvent('Balances.Transfer', { data: { event: { extrinsic: { signature: true } } } })
    .addEvent('Balances.Transfer', { data: { event: { extrinsic: {} } } })
    .run(db, getItem(item => {
    if (item.name == 'Balances.Transfer') {
        console.log(item.event.extrinsic?.signature);
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvmLog('0x')
    .run(db, getItem(item => {
    if (item.name == 'EVM.Log') {
        const address = item.event.args.address;
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvmLog('0x00')
    .addEvmLog('*')
    .run(db, getItem(item => {
    if (item.name == 'EVM.Log') {
        const address = item.event.args.address;
    }
}));
new batchProcessor_1.SubstrateBatchProcessor()
    .addEvent('Staking.Rewarded', {
    data: {
        event: {
            args: true,
            call: { args: true },
            extrinsic: { hash: true }
        }
    }
})
    .run(db, getItem(item => {
    if (item.name == 'Staking.Rewarded') {
        let reward = item.event;
        if (reward.call) {
            console.log(reward.call.success);
            console.log(reward.extrinsic.hash);
        }
    }
}));
//# sourceMappingURL=type-test.js.map