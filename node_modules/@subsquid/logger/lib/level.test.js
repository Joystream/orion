"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const level_1 = require("./level");
function suite(config, tests) {
    let name = config.map(([level, pattern]) => level_1.LogLevel[level] + '=' + pattern).join('; ');
    describe(name ? 'with ' + name : 'by default', function () {
        let levels = new level_1.Levels();
        config.forEach(([level, pattern]) => {
            levels.configure(level, pattern);
        });
        tests.forEach(([ns, level]) => {
            it(ns + '=' + level_1.LogLevel[level], () => {
                assert_1.default.strictEqual(levels.get(ns), level);
            });
        });
    });
}
describe("levels", function () {
    suite([], [
        ['foo', level_1.LogLevel.INFO]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, '*']
    ], [
        ['foo', level_1.LogLevel.DEBUG],
        ['bar', level_1.LogLevel.DEBUG]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, 'foo']
    ], [
        ['foo', level_1.LogLevel.DEBUG],
        ['foo:bar', level_1.LogLevel.DEBUG],
        ['foobar', level_1.LogLevel.INFO]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, 'foo:*']
    ], [
        ['foo', level_1.LogLevel.INFO],
        ['foo:bar', level_1.LogLevel.DEBUG],
        ['foobar', level_1.LogLevel.INFO]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, 'foo*bar']
    ], [
        ['foobar', level_1.LogLevel.DEBUG],
        ['foo:bar', level_1.LogLevel.DEBUG],
        ['foo:baz:bar:qux', level_1.LogLevel.DEBUG],
        ['foobaz', level_1.LogLevel.INFO]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, '*'],
        [level_1.LogLevel.WARN, 'foo'],
        [level_1.LogLevel.ERROR, 'foo:*:bar']
    ], [
        ['bar', level_1.LogLevel.DEBUG],
        ['foo', level_1.LogLevel.WARN],
        ['foo:bar', level_1.LogLevel.WARN],
        ['foo:qux:bar', level_1.LogLevel.ERROR]
    ]);
    suite([
        [level_1.LogLevel.DEBUG, 'foo, foo:*:baz'],
        [level_1.LogLevel.WARN, 'foo:*']
    ], [
        ['foo', level_1.LogLevel.DEBUG],
        ['foo:bar:baz', level_1.LogLevel.DEBUG],
        ['foo:bar', level_1.LogLevel.WARN]
    ]);
});
//# sourceMappingURL=level.test.js.map