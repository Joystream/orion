import { LogLevel } from './level';
export interface LogRecord {
    time: number;
    level: LogLevel;
    ns: string;
    msg?: string;
    err?: Error;
}
export type Sink = (rec: LogRecord) => void;
export declare class Logger {
    private sink;
    private ns;
    private attributes?;
    constructor(sink: Sink, ns: string, attributes?: object | undefined);
    get level(): LogLevel;
    child(attributes: object): Logger;
    child(ns: string, attributes?: object): Logger;
    write(level: LogLevel, msg?: string): void;
    write(level: LogLevel, attributes?: object, msg?: string): void;
    trace(msg?: string): void;
    trace(attributes?: object, msg?: string): void;
    debug(msg?: string): void;
    debug(attributes?: object, msg?: string): void;
    info(msg?: string): void;
    info(attributes?: object, msg?: string): void;
    warn(msg?: string): void;
    warn(attributes?: object, msg?: string): void;
    error(msg?: string): void;
    error(attributes?: object, msg?: string): void;
    fatal(msg?: string | null): void;
    fatal(attributes?: object | null, msg?: string): void;
    isTrace(): boolean;
    isDebug(): boolean;
    isInfo(): boolean;
    isWarn(): boolean;
    isError(): boolean;
    isFatal(): boolean;
}
//# sourceMappingURL=logger.d.ts.map