"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toJSON = void 0;
const util_internal_hex_1 = require("@subsquid/util-internal-hex");
function toJSON(val) {
    let json;
    switch (typeof val) {
        case 'bigint':
            return val.toString();
        case 'object':
            if (val == null)
                return null;
            if (val instanceof Uint8Array) {
                return (0, util_internal_hex_1.toHex)(val);
            }
            else if (val instanceof Date) {
                return val.toISOString();
            }
            else if (typeof val.toJSON == 'function' && (json = val.toJSON()) !== val) {
                return toJSON(json);
            }
            else if (val instanceof Error) {
                json = toJsonObject(val);
                if (val.stack) {
                    json.stack = val.stack;
                }
                else {
                    json.stack = val.toString();
                }
                return json;
            }
            else if (val instanceof Map) {
                let entries = [];
                for (let [k, v] of val.entries()) {
                    entries.push({ k, v });
                }
                return toJSON({ map: entries });
            }
            else if (val instanceof Set) {
                return toJSON({ set: [...val] });
            }
            else if (Array.isArray(val)) {
                return toJsonArray(val);
            }
            else {
                return toJsonObject(val);
            }
        default:
            return val;
    }
}
exports.toJSON = toJSON;
function toJsonArray(val) {
    let arr = new Array(val.length);
    for (let i = 0; i < val.length; i++) {
        arr[i] = toJSON(val[i]);
    }
    return arr;
}
function toJsonObject(val) {
    let result = {};
    for (let key in val) {
        result[key] = toJSON(val[key]);
    }
    return result;
}
//# sourceMappingURL=json.js.map