import { Model } from '@subsquid/openreader/lib/model';
import { PluginDefinition } from 'apollo-server-core';
import { GraphQLSchema, OperationDefinitionNode } from 'graphql';
export interface HttpHeaders extends Iterable<[string, string]> {
    get(name: string): string | null;
    has(name: string): boolean;
    entries(): Iterator<[string, string]>;
    keys(): Iterator<string>;
}
export interface HttpRequest {
    readonly url: string;
    readonly method: string;
    readonly headers: HttpHeaders;
}
export interface RequestCheckContext {
    http: HttpRequest;
    operation: OperationDefinitionNode;
    operationName: string | null;
    schema: GraphQLSchema;
    context: Record<string, any>;
    model: Model;
}
export interface RequestCheckFunction {
    (req: RequestCheckContext): Promise<boolean | string>;
}
export declare function createCheckPlugin(requestCheck: RequestCheckFunction, model: Model): PluginDefinition;
//# sourceMappingURL=check.d.ts.map