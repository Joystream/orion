{
  "name": "@subsquid/ss58-codec",
  "version": "0.1.1",
  "description": "SS58 address format encoder/decoder",
  "license": "GPL-3.0-or-later",
  "repository": "git@github.com:subsquid/squid.git",
  "publishConfig": {
    "access": "public"
  },
  "main": "lib/index.js",
  "files": [
    "lib",
    "src"
  ],
  "dependencies": {
    "base-x": "^3.0.9",
    "blake2b": "^2.1.4"
  },
  "devDependencies": {
    "@types/node": "^16.11.41",
    "typescript": "~4.7.4"
  },
  "scripts": {
    "build": "rm -rf lib && tsc",
    "test": "node lib/test.js"
  },
  "readme": "# @subsquid/ss58-codec\n\nEncoder and decoder for [SS58 address format](https://docs.substrate.io/v3/advanced/ss58/).\n\n## Usage\n\n```typescript\nimport * as ss58 from \"@subsquid/ss58-codec\"\n\nlet address = ss58.decode('EXtQYFeY2ivDsfazZvGC9aG87DxnhWH2f9kjUUq2pXTZKF5') \naddress.prefix // => 2 (address type)\naddress.bytes  // => Uint8Array of raw address bytes\n\nss58.encode(address) // => EXtQYFeY2ivDsfazZvGC9aG87DxnhWH2f9kjUUq2pXTZKF5\n```\n"
}