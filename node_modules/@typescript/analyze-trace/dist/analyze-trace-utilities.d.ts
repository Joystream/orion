import normalizePositions = require("./normalize-positions");
import { EventSpan, ParseResult } from "./parse-trace-file";
export declare function buildHotPathsTree(parseResult: ParseResult, thresholdDuration: number, minPercentage: number): EventSpan;
declare type LineChar = normalizePositions.LineChar;
export declare type PositionMap = Map<string, Map<string, LineChar>>;
export declare function getNormalizedPositions(root: EventSpan, relatedTypes: Map<number, object> | undefined): Promise<PositionMap>;
export declare function getLineCharMapKey(line: number, char: number): string;
export declare function getPackageVersion(packagePath: string): Promise<string | undefined>;
export declare function unmangleCamelCase(name: string): string;
export declare function getTypes(typesPath: string): Promise<readonly any[]>;
export interface EmittedImport {
    name: string;
    count: number;
}
export declare function getEmittedImports(dtsPath: string, importExpressionThreshold: number): Promise<EmittedImport[]>;
export declare function getRelatedTypes(root: EventSpan, typesPath: string, leafOnly: boolean): Promise<Map<number, object>>;
export {};
