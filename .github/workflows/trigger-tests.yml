name: Trigger external integration tests

on: [push, pull_request_target]

env:
  INTEGRATION_TESTS_BRANCH: ${{ vars.INTEGRATION_TESTS_BRANCH }}
  SHA: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}

jobs:
  trigger-tests:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    steps:
      - name: Wait until build-docker-image workflow finishes successfully
        run: |
          CONCLUSION="null"
          while [[ "$CONCLUSION" == "null" ]]
          do
            CONCLUSION=$(
              curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-docker-image.yml/runs?head_sha=${{ env.SHA }} \
                | jq -r '.workflow_runs[0].conclusion'
            )
            echo "build-docker-image workflow conclusion: $CONCLUSION"
            if [[ "$CONCLUSION" == "null" ]]
            then
              echo "Waiting for build-docker-image workflow to finish..."
              sleep 30
            fi
          done
          if [[ "$CONCLUSION" != "success" ]]
          then
            echo "build-docker-image workflow failed"
            exit 1
          fi
      - name: Fetch integration tests branch from PR comment if provided
        if: github.event_name == 'pull_request_target'
        run: |
          BRANCH=$(
            curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
              | jq '
                .[]
                | select(
                  (.author_association = "OWNER") or
                  (.author_association = "MEMBER") or
                  (.author_association = "CONTRIBUTOR")
                )
                | select (.body | test("/set-integration-tests-branch +"))
                | .body' \
              | cut -d ' ' -f 2
          )
          echo "INTEGRATION_TESTS_BRANCH=$BRANCH" >> $GITHUB_ENV
      - name: Trigger tests
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.INTEGRATION_TESTS_TOKEN }}
          repo: ${{ vars.INTEGRATION_TESTS_REPO }}
          ref: ${{ env.INTEGRATION_TESTS_BRANCH }}
          workflow: run-network-tests.yml
          inputs: >
            {
              "orion_sha": "${{ env.SHA }}",
              "attempt": "${{ github.run_attempt }}"
            }
      - name: Get tests run result
        run: |
          ARTIFACT_URL="null"
          while [[ "$ARTIFACT_URL" == "null" ]]
          do
            ARTIFACT_URL=$(
              curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.INTEGRATION_TESTS_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/${{ vars.INTEGRATION_TESTS_REPO }}/actions/artifacts?name=orion-tests-${{ env.SHA }}-${{ github.run_attempt }} \
              | jq -r '.artifacts[0].archive_download_url'
            )
            if [[ "$ARTIFACT_URL" != "null" ]]
            then
              # Download artifact
              curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.INTEGRATION_TESTS_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                $ARTIFACT_URL \
                -o artifact.zip
              # Unzip artifact
              unzip artifact.zip
              # Get result
              RESULT=$(cat result.txt)
              if [[ "$RESULT" == "success" ]]
              then
                echo "Tests passed"
                exit 0
              else
                echo "Tests failed"
                exit 1
              fi
            else
              echo "Waiting for test results to be uploaded..."
              sleep 30
            fi
          done
