name: Checks
on: [push, pull_request]

jobs:
  checks:
    name: Checks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}
      - name: Install npm packages
        run: npm ci
      - name: Run checks
        run: npm run checks

  build_images:
    name: Build joystream/node
    needs: checks
    runs-on: ubuntu-latest
    outputs:
      use_artifact: ${{ steps.compute_shasum.outputs.shasum }}-joystream-node-docker-image.tar.gz
      runtime: ${{ steps.compute_shasum.outputs.shasum }}
    steps:
      - name: check out relevant repo
        uses: actions/checkout@v3
        with:
          repository: ignazio-bovo/joystream
          ref: crt_release_fixes_for_orionv2

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - id: compute_shasum
        name: Compute runtime code shasum
        env:
          RUNTIME_PROFILE: 'TESTING'
        run: |
          export RUNTIME_CODE_SHASUM=`scripts/runtime-code-shasum.sh`
          echo "::set-output name=shasum::${RUNTIME_CODE_SHASUM}"

      - name: Setup cache directory
        run: mkdir ~/docker-images

      - name: Cache docker images
        uses: actions/cache@v3
        env:
          cache-name: joystream-node-docker-1
        with:
          path: ~/docker-images
          key: ${{ env.cache-name }}-${{ steps.compute_shasum.outputs.shasum }}

      - name: Check if we have cached image
        continue-on-error: true
        run: |
          if [ -f ~/docker-images/joystream-node-docker-image.tar.gz ]; then
            docker load --input ~/docker-images/joystream-node-docker-image.tar.gz
            cp ~/docker-images/joystream-node-docker-image.tar.gz .
          fi

      - name: Check if we have pre-built image on Dockerhub
        continue-on-error: true
        run: |
          if ! [ -f joystream-node-docker-image.tar.gz ]; then
            docker pull joystream/node:${{ steps.compute_shasum.outputs.shasum }}
            docker save --output joystream-node-docker-image.tar joystream/node:${{ steps.compute_shasum.outputs.shasum }}
            gzip joystream-node-docker-image.tar
            cp joystream-node-docker-image.tar.gz ~/docker-images/
          fi

      - name: Check we now have an image
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'joystream-node-docker-image.tar.gz'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v1.7
        id: builder1
        if: steps.check_files.outputs.files_exists == 'false'

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx
        if: steps.check_files.outputs.files_exists == 'false'

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: joystream-node.Dockerfile
          platforms: linux/amd64
          build-args: |
            CARGO_FEATURES=testing-runtime
            CODE_SHASUM=${{ steps.compute_shasum.outputs.shasum }}
          push: false
          tags: joystream/node:${{ steps.compute_shasum.outputs.shasum }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          builder: ${{ steps.builder1.outputs.name }}
          load: true
        if: steps.check_files.outputs.files_exists == 'false'

      - name: Save joystream/node image to cache
        run: |
          docker save --output joystream-node-docker-image.tar joystream/node:${{ steps.compute_shasum.outputs.shasum }}
          gzip joystream-node-docker-image.tar
          cp joystream-node-docker-image.tar.gz ~/docker-images/
        if: steps.check_files.outputs.files_exists == 'false'

      - name: Save joystream/node image to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.compute_shasum.outputs.shasum }}-joystream-node-docker-image.tar.gz
          path: joystream-node-docker-image.tar.gz

  run_tests:
    runs-on: ubuntu-latest
    needs: [build_images, checks]
    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_images.outputs.use_artifact }}

      - name: Install artifacts
        run: |
          docker load --input joystream-node-docker-image.tar.gz
          docker images

      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm install

      - name: Generate queries
        run: |
          cd network-tests
          npm run codegen

      - name: run tests
        env:
          RUNTIME: ${{ needs.build_images.outputs.runtime }}
        run: |
          network-tests/run-tests.sh

  cleanup:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - uses: actions/checkout@v2

      - name: perform cleanup
        run: |
          rm -rf network-tests/data
          docker-compose -f network-tests/docker-compose.node.yml down -v
          docker-compose down -v
          docker-compose -f archive/docker-compose.yml down -v
