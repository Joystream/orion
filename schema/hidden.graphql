type VideoViewEvent @entity {
  "Unique identifier of the video view event"
  id: ID!

  "ID of the video that was viewed (the video may no longer exist)"
  videoId: String! @index

  "User that viewed the video"
  user: User!

  "Video view event timestamp"
  timestamp: DateTime!
}

type Report @entity {
  "Unique identifier of the report"
  id: ID!

  "User that reported the channel / video"
  user: User!

  "If it's a channel report: ID of the channel being reported (the channel may no longer exist)"
  channelId: String @index

  "If it's a video report: ID of the video being reported (the video may no longer exist)"
  videoId: String @index

  "Time of the report"
  timestamp: DateTime!

  "Rationale behind the report"
  rationale: String!
}

type NftFeaturingRequest @entity {
  "Unique identifier of the request"
  id: ID!

  "User that requested the nft to be featured"
  user: User!

  "ID of the nft that is being requested to be featured by operator"
  nftId: String! @index

  "Time of the request"
  timestamp: DateTime!

  "Rationale behind the request"
  rationale: String!
}

type ChannelFollow @entity {
  "Unique identifier of the follow"
  id: ID!

  "User that followed the channel"
  user: User!

  "ID of the channel being followed (the channel may no longer exist)"
  channelId: String! @index

  "Time when user started following the channel"
  timestamp: DateTime!
}

type GatewayConfig @entity {
  "Unique name of the configuration variable"
  id: ID!

  "Value of the configuration variable serialized to a string"
  value: String!

  "Last time the configuration variable was updated"
  updatedAt: DateTime!
}
